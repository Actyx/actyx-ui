// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Components/Button Disabled 1`] = `
<Button
  color="red"
  disabled={true}
  icon="assignment"
  onClick={[Function]}
  text="Button"
  variant="raised"
>
  <WithStyles(ButtonComp)
    color="red"
    disabled={true}
    icon="assignment"
    innerRef={null}
    jssContext={
      Object {
        "classNamePrefix": "",
        "disableStylesGeneration": false,
      }
    }
    onClick={[Function]}
    text="Button"
    theme={Object {}}
    variant="raised"
  >
    <ButtonComp
      classes={
        Object {
          "centered": "ButtonComp-centered-0-3-19",
          "disabled": "ButtonComp-disabled-0-3-32",
          "flat": "ButtonComp-flat-0-3-17",
          "fullWidth": "ButtonComp-fullWidth-0-3-31",
          "green": "ButtonComp-green-0-3-23",
          "grey": "ButtonComp-grey-0-3-21",
          "icon": "ButtonComp-icon-0-3-16",
          "neutral": "ButtonComp-neutral-0-3-22",
          "orange": "ButtonComp-orange-0-3-24",
          "primary": "ButtonComp-primary-0-3-20",
          "raised": "ButtonComp-raised-0-3-18",
          "red": "ButtonComp-red-0-3-26",
          "root": "ButtonComp-root-0-3-15",
          "shadow": "ButtonComp-shadow-0-3-28",
          "text": "ButtonComp-text-0-3-29",
          "textIcon": "ButtonComp-textIcon-0-3-30",
          "transparent": "ButtonComp-transparent-0-3-27",
          "yellow": "ButtonComp-yellow-0-3-25",
        }
      }
      color="red"
      disabled={true}
      icon="assignment"
      onClick={[Function]}
      text="Button"
      variant="raised"
    >
      <TouchRipple
        className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28 ButtonComp-disabled-0-3-32"
        disabled={true}
        onClick={[Function]}
      >
        <WithStyles(TouchRippleComp)
          className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28 ButtonComp-disabled-0-3-32"
          disabled={true}
          innerRef={null}
          jssContext={
            Object {
              "classNamePrefix": "",
              "disableStylesGeneration": false,
            }
          }
          onClick={[Function]}
          theme={Object {}}
        >
          <TouchRippleComp
            className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28 ButtonComp-disabled-0-3-32"
            classes={
              Object {
                "disabled": "TouchRippleComp-disabled-0-3-34",
                "root": "TouchRippleComp-root-0-3-33",
              }
            }
            disabled={true}
            onClick={[Function]}
          >
            <div
              className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28 ButtonComp-disabled-0-3-32 TouchRippleComp-disabled-0-3-34"
            >
              <div
                className="ButtonComp-raised-0-3-18 ButtonComp-red-0-3-26"
              >
                <div
                  className="ButtonComp-icon-0-3-16"
                >
                  <MUIcon
                    fontSize={40}
                    type="assignment"
                  >
                    <WithStyles(MUIconComp)
                      fontSize={40}
                      innerRef={null}
                      jssContext={
                        Object {
                          "classNamePrefix": "",
                          "disableStylesGeneration": false,
                        }
                      }
                      theme={Object {}}
                      type="assignment"
                    >
                      <MUIconComp
                        classes={
                          Object {
                            "root": "MUIconComp-root-0-3-35 MUIconComp-root-d8-0-3-44",
                          }
                        }
                        fontSize={40}
                        type="assignment"
                      >
                        <i
                          className="MUIconComp-root-0-3-35 MUIconComp-root-d8-0-3-44"
                        >
                          assignment
                        </i>
                      </MUIconComp>
                    </WithStyles(MUIconComp)>
                  </MUIcon>
                </div>
                <div
                  className="ButtonComp-textIcon-0-3-30"
                >
                  <Typography
                    bold={true}
                    textTransform="uppercase"
                    variant="standard"
                  >
                    <WithStyles(TypographyComp)
                      bold={true}
                      innerRef={null}
                      jssContext={
                        Object {
                          "classNamePrefix": "",
                          "disableStylesGeneration": false,
                        }
                      }
                      textTransform="uppercase"
                      theme={Object {}}
                      variant="standard"
                    >
                      <TypographyComp
                        bold={true}
                        classes={
                          Object {
                            "big": "TypographyComp-big-0-3-7",
                            "bold": "TypographyComp-bold-0-3-1",
                            "capitalize": "TypographyComp-capitalize-0-3-12",
                            "distance": "TypographyComp-distance-0-3-6",
                            "ellipsis": "TypographyComp-ellipsis-0-3-14",
                            "giant": "TypographyComp-giant-0-3-9",
                            "heading": "TypographyComp-heading-0-3-8",
                            "italic": "TypographyComp-italic-0-3-3",
                            "lowercase": "TypographyComp-lowercase-0-3-11",
                            "noWrap": "TypographyComp-noWrap-0-3-13",
                            "semiBold": "TypographyComp-semiBold-0-3-2",
                            "standard": "TypographyComp-standard-0-3-5",
                            "subtext": "TypographyComp-subtext-0-3-4",
                            "uppercase": "TypographyComp-uppercase-0-3-10",
                          }
                        }
                        textTransform="uppercase"
                        variant="standard"
                      >
                        <span
                          className="TypographyComp-standard-0-3-5 TypographyComp-uppercase-0-3-10 TypographyComp-bold-0-3-1"
                        >
                          Button
                        </span>
                      </TypographyComp>
                    </WithStyles(TypographyComp)>
                  </Typography>
                </div>
              </div>
            </div>
          </TouchRippleComp>
        </WithStyles(TouchRippleComp)>
      </TouchRipple>
    </ButtonComp>
  </WithStyles(ButtonComp)>
</Button>
`;

exports[`Storyshots Components/Button Flat transparent icon 1`] = `
<Button
  color="transparent"
  icon="assignment"
  onClick={[Function]}
  variant="flat"
>
  <WithStyles(ButtonComp)
    color="transparent"
    icon="assignment"
    innerRef={null}
    jssContext={
      Object {
        "classNamePrefix": "",
        "disableStylesGeneration": false,
      }
    }
    onClick={[Function]}
    theme={Object {}}
    variant="flat"
  >
    <ButtonComp
      classes={
        Object {
          "centered": "ButtonComp-centered-0-3-19",
          "disabled": "ButtonComp-disabled-0-3-32",
          "flat": "ButtonComp-flat-0-3-17",
          "fullWidth": "ButtonComp-fullWidth-0-3-31",
          "green": "ButtonComp-green-0-3-23",
          "grey": "ButtonComp-grey-0-3-21",
          "icon": "ButtonComp-icon-0-3-16",
          "neutral": "ButtonComp-neutral-0-3-22",
          "orange": "ButtonComp-orange-0-3-24",
          "primary": "ButtonComp-primary-0-3-20",
          "raised": "ButtonComp-raised-0-3-18",
          "red": "ButtonComp-red-0-3-26",
          "root": "ButtonComp-root-0-3-15",
          "shadow": "ButtonComp-shadow-0-3-28",
          "text": "ButtonComp-text-0-3-29",
          "textIcon": "ButtonComp-textIcon-0-3-30",
          "transparent": "ButtonComp-transparent-0-3-27",
          "yellow": "ButtonComp-yellow-0-3-25",
        }
      }
      color="transparent"
      icon="assignment"
      onClick={[Function]}
      variant="flat"
    >
      <TouchRipple
        className="ButtonComp-root-0-3-15"
        disabled={false}
        onClick={[Function]}
      >
        <WithStyles(TouchRippleComp)
          className="ButtonComp-root-0-3-15"
          disabled={false}
          innerRef={null}
          jssContext={
            Object {
              "classNamePrefix": "",
              "disableStylesGeneration": false,
            }
          }
          onClick={[Function]}
          theme={Object {}}
        >
          <TouchRippleComp
            className="ButtonComp-root-0-3-15"
            classes={
              Object {
                "disabled": "TouchRippleComp-disabled-0-3-34",
                "root": "TouchRippleComp-root-0-3-33",
              }
            }
            disabled={false}
            onClick={[Function]}
          >
            <div
              className="ButtonComp-root-0-3-15 TouchRippleComp-root-0-3-33"
              onClick={[Function]}
            >
              <div
                className="ButtonComp-flat-0-3-17 ButtonComp-transparent-0-3-27"
              >
                <div
                  className="ButtonComp-icon-0-3-16"
                >
                  <MUIcon
                    fontSize={40}
                    type="assignment"
                  >
                    <WithStyles(MUIconComp)
                      fontSize={40}
                      innerRef={null}
                      jssContext={
                        Object {
                          "classNamePrefix": "",
                          "disableStylesGeneration": false,
                        }
                      }
                      theme={Object {}}
                      type="assignment"
                    >
                      <MUIconComp
                        classes={
                          Object {
                            "root": "MUIconComp-root-0-3-35 MUIconComp-root-d1-0-3-37",
                          }
                        }
                        fontSize={40}
                        type="assignment"
                      >
                        <i
                          className="MUIconComp-root-0-3-35 MUIconComp-root-d1-0-3-37"
                        >
                          assignment
                        </i>
                      </MUIconComp>
                    </WithStyles(MUIconComp)>
                  </MUIcon>
                </div>
              </div>
            </div>
          </TouchRippleComp>
        </WithStyles(TouchRippleComp)>
      </TouchRipple>
    </ButtonComp>
  </WithStyles(ButtonComp)>
</Button>
`;

exports[`Storyshots Components/Button Flat transparent icon text 1`] = `
<Button
  color="transparent"
  icon="assignment"
  onClick={[Function]}
  text="Button"
  variant="flat"
>
  <WithStyles(ButtonComp)
    color="transparent"
    icon="assignment"
    innerRef={null}
    jssContext={
      Object {
        "classNamePrefix": "",
        "disableStylesGeneration": false,
      }
    }
    onClick={[Function]}
    text="Button"
    theme={Object {}}
    variant="flat"
  >
    <ButtonComp
      classes={
        Object {
          "centered": "ButtonComp-centered-0-3-19",
          "disabled": "ButtonComp-disabled-0-3-32",
          "flat": "ButtonComp-flat-0-3-17",
          "fullWidth": "ButtonComp-fullWidth-0-3-31",
          "green": "ButtonComp-green-0-3-23",
          "grey": "ButtonComp-grey-0-3-21",
          "icon": "ButtonComp-icon-0-3-16",
          "neutral": "ButtonComp-neutral-0-3-22",
          "orange": "ButtonComp-orange-0-3-24",
          "primary": "ButtonComp-primary-0-3-20",
          "raised": "ButtonComp-raised-0-3-18",
          "red": "ButtonComp-red-0-3-26",
          "root": "ButtonComp-root-0-3-15",
          "shadow": "ButtonComp-shadow-0-3-28",
          "text": "ButtonComp-text-0-3-29",
          "textIcon": "ButtonComp-textIcon-0-3-30",
          "transparent": "ButtonComp-transparent-0-3-27",
          "yellow": "ButtonComp-yellow-0-3-25",
        }
      }
      color="transparent"
      icon="assignment"
      onClick={[Function]}
      text="Button"
      variant="flat"
    >
      <TouchRipple
        className="ButtonComp-root-0-3-15"
        disabled={false}
        onClick={[Function]}
      >
        <WithStyles(TouchRippleComp)
          className="ButtonComp-root-0-3-15"
          disabled={false}
          innerRef={null}
          jssContext={
            Object {
              "classNamePrefix": "",
              "disableStylesGeneration": false,
            }
          }
          onClick={[Function]}
          theme={Object {}}
        >
          <TouchRippleComp
            className="ButtonComp-root-0-3-15"
            classes={
              Object {
                "disabled": "TouchRippleComp-disabled-0-3-34",
                "root": "TouchRippleComp-root-0-3-33",
              }
            }
            disabled={false}
            onClick={[Function]}
          >
            <div
              className="ButtonComp-root-0-3-15 TouchRippleComp-root-0-3-33"
              onClick={[Function]}
            >
              <div
                className="ButtonComp-flat-0-3-17 ButtonComp-transparent-0-3-27"
              >
                <div
                  className="ButtonComp-icon-0-3-16"
                >
                  <MUIcon
                    fontSize={40}
                    type="assignment"
                  >
                    <WithStyles(MUIconComp)
                      fontSize={40}
                      innerRef={null}
                      jssContext={
                        Object {
                          "classNamePrefix": "",
                          "disableStylesGeneration": false,
                        }
                      }
                      theme={Object {}}
                      type="assignment"
                    >
                      <MUIconComp
                        classes={
                          Object {
                            "root": "MUIconComp-root-0-3-35 MUIconComp-root-d0-0-3-36",
                          }
                        }
                        fontSize={40}
                        type="assignment"
                      >
                        <i
                          className="MUIconComp-root-0-3-35 MUIconComp-root-d0-0-3-36"
                        >
                          assignment
                        </i>
                      </MUIconComp>
                    </WithStyles(MUIconComp)>
                  </MUIcon>
                </div>
                <div
                  className="ButtonComp-textIcon-0-3-30"
                >
                  <Typography
                    bold={true}
                    textTransform="uppercase"
                    variant="standard"
                  >
                    <WithStyles(TypographyComp)
                      bold={true}
                      innerRef={null}
                      jssContext={
                        Object {
                          "classNamePrefix": "",
                          "disableStylesGeneration": false,
                        }
                      }
                      textTransform="uppercase"
                      theme={Object {}}
                      variant="standard"
                    >
                      <TypographyComp
                        bold={true}
                        classes={
                          Object {
                            "big": "TypographyComp-big-0-3-7",
                            "bold": "TypographyComp-bold-0-3-1",
                            "capitalize": "TypographyComp-capitalize-0-3-12",
                            "distance": "TypographyComp-distance-0-3-6",
                            "ellipsis": "TypographyComp-ellipsis-0-3-14",
                            "giant": "TypographyComp-giant-0-3-9",
                            "heading": "TypographyComp-heading-0-3-8",
                            "italic": "TypographyComp-italic-0-3-3",
                            "lowercase": "TypographyComp-lowercase-0-3-11",
                            "noWrap": "TypographyComp-noWrap-0-3-13",
                            "semiBold": "TypographyComp-semiBold-0-3-2",
                            "standard": "TypographyComp-standard-0-3-5",
                            "subtext": "TypographyComp-subtext-0-3-4",
                            "uppercase": "TypographyComp-uppercase-0-3-10",
                          }
                        }
                        textTransform="uppercase"
                        variant="standard"
                      >
                        <span
                          className="TypographyComp-standard-0-3-5 TypographyComp-uppercase-0-3-10 TypographyComp-bold-0-3-1"
                        >
                          Button
                        </span>
                      </TypographyComp>
                    </WithStyles(TypographyComp)>
                  </Typography>
                </div>
              </div>
            </div>
          </TouchRippleComp>
        </WithStyles(TouchRippleComp)>
      </TouchRipple>
    </ButtonComp>
  </WithStyles(ButtonComp)>
</Button>
`;

exports[`Storyshots Components/Button Flat transparent text 1`] = `
<Button
  color="transparent"
  onClick={[Function]}
  text="Button"
  variant="flat"
>
  <WithStyles(ButtonComp)
    color="transparent"
    innerRef={null}
    jssContext={
      Object {
        "classNamePrefix": "",
        "disableStylesGeneration": false,
      }
    }
    onClick={[Function]}
    text="Button"
    theme={Object {}}
    variant="flat"
  >
    <ButtonComp
      classes={
        Object {
          "centered": "ButtonComp-centered-0-3-19",
          "disabled": "ButtonComp-disabled-0-3-32",
          "flat": "ButtonComp-flat-0-3-17",
          "fullWidth": "ButtonComp-fullWidth-0-3-31",
          "green": "ButtonComp-green-0-3-23",
          "grey": "ButtonComp-grey-0-3-21",
          "icon": "ButtonComp-icon-0-3-16",
          "neutral": "ButtonComp-neutral-0-3-22",
          "orange": "ButtonComp-orange-0-3-24",
          "primary": "ButtonComp-primary-0-3-20",
          "raised": "ButtonComp-raised-0-3-18",
          "red": "ButtonComp-red-0-3-26",
          "root": "ButtonComp-root-0-3-15",
          "shadow": "ButtonComp-shadow-0-3-28",
          "text": "ButtonComp-text-0-3-29",
          "textIcon": "ButtonComp-textIcon-0-3-30",
          "transparent": "ButtonComp-transparent-0-3-27",
          "yellow": "ButtonComp-yellow-0-3-25",
        }
      }
      color="transparent"
      onClick={[Function]}
      text="Button"
      variant="flat"
    >
      <TouchRipple
        className="ButtonComp-root-0-3-15"
        disabled={false}
        onClick={[Function]}
      >
        <WithStyles(TouchRippleComp)
          className="ButtonComp-root-0-3-15"
          disabled={false}
          innerRef={null}
          jssContext={
            Object {
              "classNamePrefix": "",
              "disableStylesGeneration": false,
            }
          }
          onClick={[Function]}
          theme={Object {}}
        >
          <TouchRippleComp
            className="ButtonComp-root-0-3-15"
            classes={
              Object {
                "disabled": "TouchRippleComp-disabled-0-3-34",
                "root": "TouchRippleComp-root-0-3-33",
              }
            }
            disabled={false}
            onClick={[Function]}
          >
            <div
              className="ButtonComp-root-0-3-15 TouchRippleComp-root-0-3-33"
              onClick={[Function]}
            >
              <div
                className="ButtonComp-flat-0-3-17 ButtonComp-transparent-0-3-27"
              >
                <div
                  className="ButtonComp-text-0-3-29"
                >
                  <Typography
                    bold={true}
                    textTransform="uppercase"
                    variant="standard"
                  >
                    <WithStyles(TypographyComp)
                      bold={true}
                      innerRef={null}
                      jssContext={
                        Object {
                          "classNamePrefix": "",
                          "disableStylesGeneration": false,
                        }
                      }
                      textTransform="uppercase"
                      theme={Object {}}
                      variant="standard"
                    >
                      <TypographyComp
                        bold={true}
                        classes={
                          Object {
                            "big": "TypographyComp-big-0-3-7",
                            "bold": "TypographyComp-bold-0-3-1",
                            "capitalize": "TypographyComp-capitalize-0-3-12",
                            "distance": "TypographyComp-distance-0-3-6",
                            "ellipsis": "TypographyComp-ellipsis-0-3-14",
                            "giant": "TypographyComp-giant-0-3-9",
                            "heading": "TypographyComp-heading-0-3-8",
                            "italic": "TypographyComp-italic-0-3-3",
                            "lowercase": "TypographyComp-lowercase-0-3-11",
                            "noWrap": "TypographyComp-noWrap-0-3-13",
                            "semiBold": "TypographyComp-semiBold-0-3-2",
                            "standard": "TypographyComp-standard-0-3-5",
                            "subtext": "TypographyComp-subtext-0-3-4",
                            "uppercase": "TypographyComp-uppercase-0-3-10",
                          }
                        }
                        textTransform="uppercase"
                        variant="standard"
                      >
                        <span
                          className="TypographyComp-standard-0-3-5 TypographyComp-uppercase-0-3-10 TypographyComp-bold-0-3-1"
                        >
                          Button
                        </span>
                      </TypographyComp>
                    </WithStyles(TypographyComp)>
                  </Typography>
                </div>
              </div>
            </div>
          </TouchRippleComp>
        </WithStyles(TouchRippleComp)>
      </TouchRipple>
    </ButtonComp>
  </WithStyles(ButtonComp)>
</Button>
`;

exports[`Storyshots Components/Button Full width 1`] = `
<div
  style={
    Object {
      "width": 400,
    }
  }
>
  <Button
    color="primary"
    fullWidth={true}
    icon="assignment"
    onClick={[Function]}
    text="Button"
    variant="raised"
  >
    <WithStyles(ButtonComp)
      color="primary"
      fullWidth={true}
      icon="assignment"
      innerRef={null}
      jssContext={
        Object {
          "classNamePrefix": "",
          "disableStylesGeneration": false,
        }
      }
      onClick={[Function]}
      text="Button"
      theme={Object {}}
      variant="raised"
    >
      <ButtonComp
        classes={
          Object {
            "centered": "ButtonComp-centered-0-3-19",
            "disabled": "ButtonComp-disabled-0-3-32",
            "flat": "ButtonComp-flat-0-3-17",
            "fullWidth": "ButtonComp-fullWidth-0-3-31",
            "green": "ButtonComp-green-0-3-23",
            "grey": "ButtonComp-grey-0-3-21",
            "icon": "ButtonComp-icon-0-3-16",
            "neutral": "ButtonComp-neutral-0-3-22",
            "orange": "ButtonComp-orange-0-3-24",
            "primary": "ButtonComp-primary-0-3-20",
            "raised": "ButtonComp-raised-0-3-18",
            "red": "ButtonComp-red-0-3-26",
            "root": "ButtonComp-root-0-3-15",
            "shadow": "ButtonComp-shadow-0-3-28",
            "text": "ButtonComp-text-0-3-29",
            "textIcon": "ButtonComp-textIcon-0-3-30",
            "transparent": "ButtonComp-transparent-0-3-27",
            "yellow": "ButtonComp-yellow-0-3-25",
          }
        }
        color="primary"
        fullWidth={true}
        icon="assignment"
        onClick={[Function]}
        text="Button"
        variant="raised"
      >
        <TouchRipple
          className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28 ButtonComp-fullWidth-0-3-31"
          disabled={false}
          onClick={[Function]}
        >
          <WithStyles(TouchRippleComp)
            className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28 ButtonComp-fullWidth-0-3-31"
            disabled={false}
            innerRef={null}
            jssContext={
              Object {
                "classNamePrefix": "",
                "disableStylesGeneration": false,
              }
            }
            onClick={[Function]}
            theme={Object {}}
          >
            <TouchRippleComp
              className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28 ButtonComp-fullWidth-0-3-31"
              classes={
                Object {
                  "disabled": "TouchRippleComp-disabled-0-3-34",
                  "root": "TouchRippleComp-root-0-3-33",
                }
              }
              disabled={false}
              onClick={[Function]}
            >
              <div
                className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28 ButtonComp-fullWidth-0-3-31 TouchRippleComp-root-0-3-33"
                onClick={[Function]}
              >
                <div
                  className="ButtonComp-raised-0-3-18 ButtonComp-primary-0-3-20"
                >
                  <div
                    className="ButtonComp-icon-0-3-16"
                  >
                    <MUIcon
                      fontSize={40}
                      type="assignment"
                    >
                      <WithStyles(MUIconComp)
                        fontSize={40}
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        theme={Object {}}
                        type="assignment"
                      >
                        <MUIconComp
                          classes={
                            Object {
                              "root": "MUIconComp-root-0-3-35 MUIconComp-root-d9-0-3-45",
                            }
                          }
                          fontSize={40}
                          type="assignment"
                        >
                          <i
                            className="MUIconComp-root-0-3-35 MUIconComp-root-d9-0-3-45"
                          >
                            assignment
                          </i>
                        </MUIconComp>
                      </WithStyles(MUIconComp)>
                    </MUIcon>
                  </div>
                  <div
                    className="ButtonComp-textIcon-0-3-30"
                  >
                    <Typography
                      bold={true}
                      textTransform="uppercase"
                      variant="standard"
                    >
                      <WithStyles(TypographyComp)
                        bold={true}
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        textTransform="uppercase"
                        theme={Object {}}
                        variant="standard"
                      >
                        <TypographyComp
                          bold={true}
                          classes={
                            Object {
                              "big": "TypographyComp-big-0-3-7",
                              "bold": "TypographyComp-bold-0-3-1",
                              "capitalize": "TypographyComp-capitalize-0-3-12",
                              "distance": "TypographyComp-distance-0-3-6",
                              "ellipsis": "TypographyComp-ellipsis-0-3-14",
                              "giant": "TypographyComp-giant-0-3-9",
                              "heading": "TypographyComp-heading-0-3-8",
                              "italic": "TypographyComp-italic-0-3-3",
                              "lowercase": "TypographyComp-lowercase-0-3-11",
                              "noWrap": "TypographyComp-noWrap-0-3-13",
                              "semiBold": "TypographyComp-semiBold-0-3-2",
                              "standard": "TypographyComp-standard-0-3-5",
                              "subtext": "TypographyComp-subtext-0-3-4",
                              "uppercase": "TypographyComp-uppercase-0-3-10",
                            }
                          }
                          textTransform="uppercase"
                          variant="standard"
                        >
                          <span
                            className="TypographyComp-standard-0-3-5 TypographyComp-uppercase-0-3-10 TypographyComp-bold-0-3-1"
                          >
                            Button
                          </span>
                        </TypographyComp>
                      </WithStyles(TypographyComp)>
                    </Typography>
                  </div>
                </div>
              </div>
            </TouchRippleComp>
          </WithStyles(TouchRippleComp)>
        </TouchRipple>
      </ButtonComp>
    </WithStyles(ButtonComp)>
  </Button>
</div>
`;

exports[`Storyshots Components/Button Full width centered 1`] = `
<div
  style={
    Object {
      "width": 400,
    }
  }
>
  <Button
    centered={true}
    color="primary"
    fullWidth={true}
    icon="assignment"
    onClick={[Function]}
    text="Button"
    variant="raised"
  >
    <WithStyles(ButtonComp)
      centered={true}
      color="primary"
      fullWidth={true}
      icon="assignment"
      innerRef={null}
      jssContext={
        Object {
          "classNamePrefix": "",
          "disableStylesGeneration": false,
        }
      }
      onClick={[Function]}
      text="Button"
      theme={Object {}}
      variant="raised"
    >
      <ButtonComp
        centered={true}
        classes={
          Object {
            "centered": "ButtonComp-centered-0-3-19",
            "disabled": "ButtonComp-disabled-0-3-32",
            "flat": "ButtonComp-flat-0-3-17",
            "fullWidth": "ButtonComp-fullWidth-0-3-31",
            "green": "ButtonComp-green-0-3-23",
            "grey": "ButtonComp-grey-0-3-21",
            "icon": "ButtonComp-icon-0-3-16",
            "neutral": "ButtonComp-neutral-0-3-22",
            "orange": "ButtonComp-orange-0-3-24",
            "primary": "ButtonComp-primary-0-3-20",
            "raised": "ButtonComp-raised-0-3-18",
            "red": "ButtonComp-red-0-3-26",
            "root": "ButtonComp-root-0-3-15",
            "shadow": "ButtonComp-shadow-0-3-28",
            "text": "ButtonComp-text-0-3-29",
            "textIcon": "ButtonComp-textIcon-0-3-30",
            "transparent": "ButtonComp-transparent-0-3-27",
            "yellow": "ButtonComp-yellow-0-3-25",
          }
        }
        color="primary"
        fullWidth={true}
        icon="assignment"
        onClick={[Function]}
        text="Button"
        variant="raised"
      >
        <TouchRipple
          className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28 ButtonComp-fullWidth-0-3-31"
          disabled={false}
          onClick={[Function]}
        >
          <WithStyles(TouchRippleComp)
            className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28 ButtonComp-fullWidth-0-3-31"
            disabled={false}
            innerRef={null}
            jssContext={
              Object {
                "classNamePrefix": "",
                "disableStylesGeneration": false,
              }
            }
            onClick={[Function]}
            theme={Object {}}
          >
            <TouchRippleComp
              className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28 ButtonComp-fullWidth-0-3-31"
              classes={
                Object {
                  "disabled": "TouchRippleComp-disabled-0-3-34",
                  "root": "TouchRippleComp-root-0-3-33",
                }
              }
              disabled={false}
              onClick={[Function]}
            >
              <div
                className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28 ButtonComp-fullWidth-0-3-31 TouchRippleComp-root-0-3-33"
                onClick={[Function]}
              >
                <div
                  className="ButtonComp-raised-0-3-18 ButtonComp-primary-0-3-20 ButtonComp-centered-0-3-19"
                >
                  <div
                    className="ButtonComp-icon-0-3-16"
                  >
                    <MUIcon
                      fontSize={40}
                      type="assignment"
                    >
                      <WithStyles(MUIconComp)
                        fontSize={40}
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        theme={Object {}}
                        type="assignment"
                      >
                        <MUIconComp
                          classes={
                            Object {
                              "root": "MUIconComp-root-0-3-35 MUIconComp-root-d10-0-3-46",
                            }
                          }
                          fontSize={40}
                          type="assignment"
                        >
                          <i
                            className="MUIconComp-root-0-3-35 MUIconComp-root-d10-0-3-46"
                          >
                            assignment
                          </i>
                        </MUIconComp>
                      </WithStyles(MUIconComp)>
                    </MUIcon>
                  </div>
                  <div
                    className="ButtonComp-textIcon-0-3-30"
                  >
                    <Typography
                      bold={true}
                      textTransform="uppercase"
                      variant="standard"
                    >
                      <WithStyles(TypographyComp)
                        bold={true}
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        textTransform="uppercase"
                        theme={Object {}}
                        variant="standard"
                      >
                        <TypographyComp
                          bold={true}
                          classes={
                            Object {
                              "big": "TypographyComp-big-0-3-7",
                              "bold": "TypographyComp-bold-0-3-1",
                              "capitalize": "TypographyComp-capitalize-0-3-12",
                              "distance": "TypographyComp-distance-0-3-6",
                              "ellipsis": "TypographyComp-ellipsis-0-3-14",
                              "giant": "TypographyComp-giant-0-3-9",
                              "heading": "TypographyComp-heading-0-3-8",
                              "italic": "TypographyComp-italic-0-3-3",
                              "lowercase": "TypographyComp-lowercase-0-3-11",
                              "noWrap": "TypographyComp-noWrap-0-3-13",
                              "semiBold": "TypographyComp-semiBold-0-3-2",
                              "standard": "TypographyComp-standard-0-3-5",
                              "subtext": "TypographyComp-subtext-0-3-4",
                              "uppercase": "TypographyComp-uppercase-0-3-10",
                            }
                          }
                          textTransform="uppercase"
                          variant="standard"
                        >
                          <span
                            className="TypographyComp-standard-0-3-5 TypographyComp-uppercase-0-3-10 TypographyComp-bold-0-3-1"
                          >
                            Button
                          </span>
                        </TypographyComp>
                      </WithStyles(TypographyComp)>
                    </Typography>
                  </div>
                </div>
              </div>
            </TouchRippleComp>
          </WithStyles(TouchRippleComp)>
        </TouchRipple>
      </ButtonComp>
    </WithStyles(ButtonComp)>
  </Button>
</div>
`;

exports[`Storyshots Components/Button Knobs 1`] = `
<Button
  color="grey"
  disabled={false}
  fullWith={false}
  icon="person"
  onClick={[Function]}
  text="Add User"
  variant="flat"
>
  <WithStyles(ButtonComp)
    color="grey"
    disabled={false}
    fullWith={false}
    icon="person"
    innerRef={null}
    jssContext={
      Object {
        "classNamePrefix": "",
        "disableStylesGeneration": false,
      }
    }
    onClick={[Function]}
    text="Add User"
    theme={Object {}}
    variant="flat"
  >
    <ButtonComp
      classes={
        Object {
          "centered": "ButtonComp-centered-0-3-19",
          "disabled": "ButtonComp-disabled-0-3-32",
          "flat": "ButtonComp-flat-0-3-17",
          "fullWidth": "ButtonComp-fullWidth-0-3-31",
          "green": "ButtonComp-green-0-3-23",
          "grey": "ButtonComp-grey-0-3-21",
          "icon": "ButtonComp-icon-0-3-16",
          "neutral": "ButtonComp-neutral-0-3-22",
          "orange": "ButtonComp-orange-0-3-24",
          "primary": "ButtonComp-primary-0-3-20",
          "raised": "ButtonComp-raised-0-3-18",
          "red": "ButtonComp-red-0-3-26",
          "root": "ButtonComp-root-0-3-15",
          "shadow": "ButtonComp-shadow-0-3-28",
          "text": "ButtonComp-text-0-3-29",
          "textIcon": "ButtonComp-textIcon-0-3-30",
          "transparent": "ButtonComp-transparent-0-3-27",
          "yellow": "ButtonComp-yellow-0-3-25",
        }
      }
      color="grey"
      disabled={false}
      fullWith={false}
      icon="person"
      onClick={[Function]}
      text="Add User"
      variant="flat"
    >
      <TouchRipple
        className="ButtonComp-root-0-3-15"
        disabled={false}
        onClick={[Function]}
      >
        <WithStyles(TouchRippleComp)
          className="ButtonComp-root-0-3-15"
          disabled={false}
          innerRef={null}
          jssContext={
            Object {
              "classNamePrefix": "",
              "disableStylesGeneration": false,
            }
          }
          onClick={[Function]}
          theme={Object {}}
        >
          <TouchRippleComp
            className="ButtonComp-root-0-3-15"
            classes={
              Object {
                "disabled": "TouchRippleComp-disabled-0-3-34",
                "root": "TouchRippleComp-root-0-3-33",
              }
            }
            disabled={false}
            onClick={[Function]}
          >
            <div
              className="ButtonComp-root-0-3-15 TouchRippleComp-root-0-3-33"
              onClick={[Function]}
            >
              <div
                className="ButtonComp-flat-0-3-17 ButtonComp-grey-0-3-21"
              >
                <div
                  className="ButtonComp-icon-0-3-16"
                >
                  <MUIcon
                    fontSize={40}
                    type="person"
                  >
                    <WithStyles(MUIconComp)
                      fontSize={40}
                      innerRef={null}
                      jssContext={
                        Object {
                          "classNamePrefix": "",
                          "disableStylesGeneration": false,
                        }
                      }
                      theme={Object {}}
                      type="person"
                    >
                      <MUIconComp
                        classes={
                          Object {
                            "root": "MUIconComp-root-0-3-35 MUIconComp-root-d14-0-3-50",
                          }
                        }
                        fontSize={40}
                        type="person"
                      >
                        <i
                          className="MUIconComp-root-0-3-35 MUIconComp-root-d14-0-3-50"
                        >
                          person
                        </i>
                      </MUIconComp>
                    </WithStyles(MUIconComp)>
                  </MUIcon>
                </div>
                <div
                  className="ButtonComp-textIcon-0-3-30"
                >
                  <Typography
                    bold={true}
                    textTransform="uppercase"
                    variant="standard"
                  >
                    <WithStyles(TypographyComp)
                      bold={true}
                      innerRef={null}
                      jssContext={
                        Object {
                          "classNamePrefix": "",
                          "disableStylesGeneration": false,
                        }
                      }
                      textTransform="uppercase"
                      theme={Object {}}
                      variant="standard"
                    >
                      <TypographyComp
                        bold={true}
                        classes={
                          Object {
                            "big": "TypographyComp-big-0-3-7",
                            "bold": "TypographyComp-bold-0-3-1",
                            "capitalize": "TypographyComp-capitalize-0-3-12",
                            "distance": "TypographyComp-distance-0-3-6",
                            "ellipsis": "TypographyComp-ellipsis-0-3-14",
                            "giant": "TypographyComp-giant-0-3-9",
                            "heading": "TypographyComp-heading-0-3-8",
                            "italic": "TypographyComp-italic-0-3-3",
                            "lowercase": "TypographyComp-lowercase-0-3-11",
                            "noWrap": "TypographyComp-noWrap-0-3-13",
                            "semiBold": "TypographyComp-semiBold-0-3-2",
                            "standard": "TypographyComp-standard-0-3-5",
                            "subtext": "TypographyComp-subtext-0-3-4",
                            "uppercase": "TypographyComp-uppercase-0-3-10",
                          }
                        }
                        textTransform="uppercase"
                        variant="standard"
                      >
                        <span
                          className="TypographyComp-standard-0-3-5 TypographyComp-uppercase-0-3-10 TypographyComp-bold-0-3-1"
                        >
                          Add User
                        </span>
                      </TypographyComp>
                    </WithStyles(TypographyComp)>
                  </Typography>
                </div>
              </div>
            </div>
          </TouchRippleComp>
        </WithStyles(TouchRippleComp)>
      </TouchRipple>
    </ButtonComp>
  </WithStyles(ButtonComp)>
</Button>
`;

exports[`Storyshots Components/Button Raised green icon text 1`] = `
<Button
  color="green"
  icon="assignment"
  onClick={[Function]}
  text="Button"
  variant="raised"
>
  <WithStyles(ButtonComp)
    color="green"
    icon="assignment"
    innerRef={null}
    jssContext={
      Object {
        "classNamePrefix": "",
        "disableStylesGeneration": false,
      }
    }
    onClick={[Function]}
    text="Button"
    theme={Object {}}
    variant="raised"
  >
    <ButtonComp
      classes={
        Object {
          "centered": "ButtonComp-centered-0-3-19",
          "disabled": "ButtonComp-disabled-0-3-32",
          "flat": "ButtonComp-flat-0-3-17",
          "fullWidth": "ButtonComp-fullWidth-0-3-31",
          "green": "ButtonComp-green-0-3-23",
          "grey": "ButtonComp-grey-0-3-21",
          "icon": "ButtonComp-icon-0-3-16",
          "neutral": "ButtonComp-neutral-0-3-22",
          "orange": "ButtonComp-orange-0-3-24",
          "primary": "ButtonComp-primary-0-3-20",
          "raised": "ButtonComp-raised-0-3-18",
          "red": "ButtonComp-red-0-3-26",
          "root": "ButtonComp-root-0-3-15",
          "shadow": "ButtonComp-shadow-0-3-28",
          "text": "ButtonComp-text-0-3-29",
          "textIcon": "ButtonComp-textIcon-0-3-30",
          "transparent": "ButtonComp-transparent-0-3-27",
          "yellow": "ButtonComp-yellow-0-3-25",
        }
      }
      color="green"
      icon="assignment"
      onClick={[Function]}
      text="Button"
      variant="raised"
    >
      <TouchRipple
        className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
        disabled={false}
        onClick={[Function]}
      >
        <WithStyles(TouchRippleComp)
          className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
          disabled={false}
          innerRef={null}
          jssContext={
            Object {
              "classNamePrefix": "",
              "disableStylesGeneration": false,
            }
          }
          onClick={[Function]}
          theme={Object {}}
        >
          <TouchRippleComp
            className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
            classes={
              Object {
                "disabled": "TouchRippleComp-disabled-0-3-34",
                "root": "TouchRippleComp-root-0-3-33",
              }
            }
            disabled={false}
            onClick={[Function]}
          >
            <div
              className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28 TouchRippleComp-root-0-3-33"
              onClick={[Function]}
            >
              <div
                className="ButtonComp-raised-0-3-18 ButtonComp-green-0-3-23"
              >
                <div
                  className="ButtonComp-icon-0-3-16"
                >
                  <MUIcon
                    fontSize={40}
                    type="assignment"
                  >
                    <WithStyles(MUIconComp)
                      fontSize={40}
                      innerRef={null}
                      jssContext={
                        Object {
                          "classNamePrefix": "",
                          "disableStylesGeneration": false,
                        }
                      }
                      theme={Object {}}
                      type="assignment"
                    >
                      <MUIconComp
                        classes={
                          Object {
                            "root": "MUIconComp-root-0-3-35 MUIconComp-root-d3-0-3-39",
                          }
                        }
                        fontSize={40}
                        type="assignment"
                      >
                        <i
                          className="MUIconComp-root-0-3-35 MUIconComp-root-d3-0-3-39"
                        >
                          assignment
                        </i>
                      </MUIconComp>
                    </WithStyles(MUIconComp)>
                  </MUIcon>
                </div>
                <div
                  className="ButtonComp-textIcon-0-3-30"
                >
                  <Typography
                    bold={true}
                    textTransform="uppercase"
                    variant="standard"
                  >
                    <WithStyles(TypographyComp)
                      bold={true}
                      innerRef={null}
                      jssContext={
                        Object {
                          "classNamePrefix": "",
                          "disableStylesGeneration": false,
                        }
                      }
                      textTransform="uppercase"
                      theme={Object {}}
                      variant="standard"
                    >
                      <TypographyComp
                        bold={true}
                        classes={
                          Object {
                            "big": "TypographyComp-big-0-3-7",
                            "bold": "TypographyComp-bold-0-3-1",
                            "capitalize": "TypographyComp-capitalize-0-3-12",
                            "distance": "TypographyComp-distance-0-3-6",
                            "ellipsis": "TypographyComp-ellipsis-0-3-14",
                            "giant": "TypographyComp-giant-0-3-9",
                            "heading": "TypographyComp-heading-0-3-8",
                            "italic": "TypographyComp-italic-0-3-3",
                            "lowercase": "TypographyComp-lowercase-0-3-11",
                            "noWrap": "TypographyComp-noWrap-0-3-13",
                            "semiBold": "TypographyComp-semiBold-0-3-2",
                            "standard": "TypographyComp-standard-0-3-5",
                            "subtext": "TypographyComp-subtext-0-3-4",
                            "uppercase": "TypographyComp-uppercase-0-3-10",
                          }
                        }
                        textTransform="uppercase"
                        variant="standard"
                      >
                        <span
                          className="TypographyComp-standard-0-3-5 TypographyComp-uppercase-0-3-10 TypographyComp-bold-0-3-1"
                        >
                          Button
                        </span>
                      </TypographyComp>
                    </WithStyles(TypographyComp)>
                  </Typography>
                </div>
              </div>
            </div>
          </TouchRippleComp>
        </WithStyles(TouchRippleComp)>
      </TouchRipple>
    </ButtonComp>
  </WithStyles(ButtonComp)>
</Button>
`;

exports[`Storyshots Components/Button Raised grey icon text 1`] = `
<Button
  color="grey"
  icon="assignment"
  onClick={[Function]}
  text="Button"
  variant="raised"
>
  <WithStyles(ButtonComp)
    color="grey"
    icon="assignment"
    innerRef={null}
    jssContext={
      Object {
        "classNamePrefix": "",
        "disableStylesGeneration": false,
      }
    }
    onClick={[Function]}
    text="Button"
    theme={Object {}}
    variant="raised"
  >
    <ButtonComp
      classes={
        Object {
          "centered": "ButtonComp-centered-0-3-19",
          "disabled": "ButtonComp-disabled-0-3-32",
          "flat": "ButtonComp-flat-0-3-17",
          "fullWidth": "ButtonComp-fullWidth-0-3-31",
          "green": "ButtonComp-green-0-3-23",
          "grey": "ButtonComp-grey-0-3-21",
          "icon": "ButtonComp-icon-0-3-16",
          "neutral": "ButtonComp-neutral-0-3-22",
          "orange": "ButtonComp-orange-0-3-24",
          "primary": "ButtonComp-primary-0-3-20",
          "raised": "ButtonComp-raised-0-3-18",
          "red": "ButtonComp-red-0-3-26",
          "root": "ButtonComp-root-0-3-15",
          "shadow": "ButtonComp-shadow-0-3-28",
          "text": "ButtonComp-text-0-3-29",
          "textIcon": "ButtonComp-textIcon-0-3-30",
          "transparent": "ButtonComp-transparent-0-3-27",
          "yellow": "ButtonComp-yellow-0-3-25",
        }
      }
      color="grey"
      icon="assignment"
      onClick={[Function]}
      text="Button"
      variant="raised"
    >
      <TouchRipple
        className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
        disabled={false}
        onClick={[Function]}
      >
        <WithStyles(TouchRippleComp)
          className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
          disabled={false}
          innerRef={null}
          jssContext={
            Object {
              "classNamePrefix": "",
              "disableStylesGeneration": false,
            }
          }
          onClick={[Function]}
          theme={Object {}}
        >
          <TouchRippleComp
            className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
            classes={
              Object {
                "disabled": "TouchRippleComp-disabled-0-3-34",
                "root": "TouchRippleComp-root-0-3-33",
              }
            }
            disabled={false}
            onClick={[Function]}
          >
            <div
              className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28 TouchRippleComp-root-0-3-33"
              onClick={[Function]}
            >
              <div
                className="ButtonComp-raised-0-3-18 ButtonComp-grey-0-3-21"
              >
                <div
                  className="ButtonComp-icon-0-3-16"
                >
                  <MUIcon
                    fontSize={40}
                    type="assignment"
                  >
                    <WithStyles(MUIconComp)
                      fontSize={40}
                      innerRef={null}
                      jssContext={
                        Object {
                          "classNamePrefix": "",
                          "disableStylesGeneration": false,
                        }
                      }
                      theme={Object {}}
                      type="assignment"
                    >
                      <MUIconComp
                        classes={
                          Object {
                            "root": "MUIconComp-root-0-3-35 MUIconComp-root-d7-0-3-43",
                          }
                        }
                        fontSize={40}
                        type="assignment"
                      >
                        <i
                          className="MUIconComp-root-0-3-35 MUIconComp-root-d7-0-3-43"
                        >
                          assignment
                        </i>
                      </MUIconComp>
                    </WithStyles(MUIconComp)>
                  </MUIcon>
                </div>
                <div
                  className="ButtonComp-textIcon-0-3-30"
                >
                  <Typography
                    bold={true}
                    textTransform="uppercase"
                    variant="standard"
                  >
                    <WithStyles(TypographyComp)
                      bold={true}
                      innerRef={null}
                      jssContext={
                        Object {
                          "classNamePrefix": "",
                          "disableStylesGeneration": false,
                        }
                      }
                      textTransform="uppercase"
                      theme={Object {}}
                      variant="standard"
                    >
                      <TypographyComp
                        bold={true}
                        classes={
                          Object {
                            "big": "TypographyComp-big-0-3-7",
                            "bold": "TypographyComp-bold-0-3-1",
                            "capitalize": "TypographyComp-capitalize-0-3-12",
                            "distance": "TypographyComp-distance-0-3-6",
                            "ellipsis": "TypographyComp-ellipsis-0-3-14",
                            "giant": "TypographyComp-giant-0-3-9",
                            "heading": "TypographyComp-heading-0-3-8",
                            "italic": "TypographyComp-italic-0-3-3",
                            "lowercase": "TypographyComp-lowercase-0-3-11",
                            "noWrap": "TypographyComp-noWrap-0-3-13",
                            "semiBold": "TypographyComp-semiBold-0-3-2",
                            "standard": "TypographyComp-standard-0-3-5",
                            "subtext": "TypographyComp-subtext-0-3-4",
                            "uppercase": "TypographyComp-uppercase-0-3-10",
                          }
                        }
                        textTransform="uppercase"
                        variant="standard"
                      >
                        <span
                          className="TypographyComp-standard-0-3-5 TypographyComp-uppercase-0-3-10 TypographyComp-bold-0-3-1"
                        >
                          Button
                        </span>
                      </TypographyComp>
                    </WithStyles(TypographyComp)>
                  </Typography>
                </div>
              </div>
            </div>
          </TouchRippleComp>
        </WithStyles(TouchRippleComp)>
      </TouchRipple>
    </ButtonComp>
  </WithStyles(ButtonComp)>
</Button>
`;

exports[`Storyshots Components/Button Raised neutral short text 1`] = `
<Button
  color="neutral"
  onClick={[Function]}
  text="+1"
  variant="raised"
>
  <WithStyles(ButtonComp)
    color="neutral"
    innerRef={null}
    jssContext={
      Object {
        "classNamePrefix": "",
        "disableStylesGeneration": false,
      }
    }
    onClick={[Function]}
    text="+1"
    theme={Object {}}
    variant="raised"
  >
    <ButtonComp
      classes={
        Object {
          "centered": "ButtonComp-centered-0-3-19",
          "disabled": "ButtonComp-disabled-0-3-32",
          "flat": "ButtonComp-flat-0-3-17",
          "fullWidth": "ButtonComp-fullWidth-0-3-31",
          "green": "ButtonComp-green-0-3-23",
          "grey": "ButtonComp-grey-0-3-21",
          "icon": "ButtonComp-icon-0-3-16",
          "neutral": "ButtonComp-neutral-0-3-22",
          "orange": "ButtonComp-orange-0-3-24",
          "primary": "ButtonComp-primary-0-3-20",
          "raised": "ButtonComp-raised-0-3-18",
          "red": "ButtonComp-red-0-3-26",
          "root": "ButtonComp-root-0-3-15",
          "shadow": "ButtonComp-shadow-0-3-28",
          "text": "ButtonComp-text-0-3-29",
          "textIcon": "ButtonComp-textIcon-0-3-30",
          "transparent": "ButtonComp-transparent-0-3-27",
          "yellow": "ButtonComp-yellow-0-3-25",
        }
      }
      color="neutral"
      onClick={[Function]}
      text="+1"
      variant="raised"
    >
      <TouchRipple
        className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
        disabled={false}
        onClick={[Function]}
      >
        <WithStyles(TouchRippleComp)
          className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
          disabled={false}
          innerRef={null}
          jssContext={
            Object {
              "classNamePrefix": "",
              "disableStylesGeneration": false,
            }
          }
          onClick={[Function]}
          theme={Object {}}
        >
          <TouchRippleComp
            className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
            classes={
              Object {
                "disabled": "TouchRippleComp-disabled-0-3-34",
                "root": "TouchRippleComp-root-0-3-33",
              }
            }
            disabled={false}
            onClick={[Function]}
          >
            <div
              className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28 TouchRippleComp-root-0-3-33"
              onClick={[Function]}
            >
              <div
                className="ButtonComp-raised-0-3-18 ButtonComp-neutral-0-3-22"
              >
                <div
                  className="ButtonComp-text-0-3-29"
                >
                  <Typography
                    bold={true}
                    textTransform="uppercase"
                    variant="standard"
                  >
                    <WithStyles(TypographyComp)
                      bold={true}
                      innerRef={null}
                      jssContext={
                        Object {
                          "classNamePrefix": "",
                          "disableStylesGeneration": false,
                        }
                      }
                      textTransform="uppercase"
                      theme={Object {}}
                      variant="standard"
                    >
                      <TypographyComp
                        bold={true}
                        classes={
                          Object {
                            "big": "TypographyComp-big-0-3-7",
                            "bold": "TypographyComp-bold-0-3-1",
                            "capitalize": "TypographyComp-capitalize-0-3-12",
                            "distance": "TypographyComp-distance-0-3-6",
                            "ellipsis": "TypographyComp-ellipsis-0-3-14",
                            "giant": "TypographyComp-giant-0-3-9",
                            "heading": "TypographyComp-heading-0-3-8",
                            "italic": "TypographyComp-italic-0-3-3",
                            "lowercase": "TypographyComp-lowercase-0-3-11",
                            "noWrap": "TypographyComp-noWrap-0-3-13",
                            "semiBold": "TypographyComp-semiBold-0-3-2",
                            "standard": "TypographyComp-standard-0-3-5",
                            "subtext": "TypographyComp-subtext-0-3-4",
                            "uppercase": "TypographyComp-uppercase-0-3-10",
                          }
                        }
                        textTransform="uppercase"
                        variant="standard"
                      >
                        <span
                          className="TypographyComp-standard-0-3-5 TypographyComp-uppercase-0-3-10 TypographyComp-bold-0-3-1"
                        >
                          +1
                        </span>
                      </TypographyComp>
                    </WithStyles(TypographyComp)>
                  </Typography>
                </div>
              </div>
            </div>
          </TouchRippleComp>
        </WithStyles(TouchRippleComp)>
      </TouchRipple>
    </ButtonComp>
  </WithStyles(ButtonComp)>
</Button>
`;

exports[`Storyshots Components/Button Raised orange icon text 1`] = `
<Button
  color="orange"
  icon="assignment"
  onClick={[Function]}
  text="Button"
  variant="raised"
>
  <WithStyles(ButtonComp)
    color="orange"
    icon="assignment"
    innerRef={null}
    jssContext={
      Object {
        "classNamePrefix": "",
        "disableStylesGeneration": false,
      }
    }
    onClick={[Function]}
    text="Button"
    theme={Object {}}
    variant="raised"
  >
    <ButtonComp
      classes={
        Object {
          "centered": "ButtonComp-centered-0-3-19",
          "disabled": "ButtonComp-disabled-0-3-32",
          "flat": "ButtonComp-flat-0-3-17",
          "fullWidth": "ButtonComp-fullWidth-0-3-31",
          "green": "ButtonComp-green-0-3-23",
          "grey": "ButtonComp-grey-0-3-21",
          "icon": "ButtonComp-icon-0-3-16",
          "neutral": "ButtonComp-neutral-0-3-22",
          "orange": "ButtonComp-orange-0-3-24",
          "primary": "ButtonComp-primary-0-3-20",
          "raised": "ButtonComp-raised-0-3-18",
          "red": "ButtonComp-red-0-3-26",
          "root": "ButtonComp-root-0-3-15",
          "shadow": "ButtonComp-shadow-0-3-28",
          "text": "ButtonComp-text-0-3-29",
          "textIcon": "ButtonComp-textIcon-0-3-30",
          "transparent": "ButtonComp-transparent-0-3-27",
          "yellow": "ButtonComp-yellow-0-3-25",
        }
      }
      color="orange"
      icon="assignment"
      onClick={[Function]}
      text="Button"
      variant="raised"
    >
      <TouchRipple
        className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
        disabled={false}
        onClick={[Function]}
      >
        <WithStyles(TouchRippleComp)
          className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
          disabled={false}
          innerRef={null}
          jssContext={
            Object {
              "classNamePrefix": "",
              "disableStylesGeneration": false,
            }
          }
          onClick={[Function]}
          theme={Object {}}
        >
          <TouchRippleComp
            className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
            classes={
              Object {
                "disabled": "TouchRippleComp-disabled-0-3-34",
                "root": "TouchRippleComp-root-0-3-33",
              }
            }
            disabled={false}
            onClick={[Function]}
          >
            <div
              className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28 TouchRippleComp-root-0-3-33"
              onClick={[Function]}
            >
              <div
                className="ButtonComp-raised-0-3-18 ButtonComp-orange-0-3-24"
              >
                <div
                  className="ButtonComp-icon-0-3-16"
                >
                  <MUIcon
                    fontSize={40}
                    type="assignment"
                  >
                    <WithStyles(MUIconComp)
                      fontSize={40}
                      innerRef={null}
                      jssContext={
                        Object {
                          "classNamePrefix": "",
                          "disableStylesGeneration": false,
                        }
                      }
                      theme={Object {}}
                      type="assignment"
                    >
                      <MUIconComp
                        classes={
                          Object {
                            "root": "MUIconComp-root-0-3-35 MUIconComp-root-d4-0-3-40",
                          }
                        }
                        fontSize={40}
                        type="assignment"
                      >
                        <i
                          className="MUIconComp-root-0-3-35 MUIconComp-root-d4-0-3-40"
                        >
                          assignment
                        </i>
                      </MUIconComp>
                    </WithStyles(MUIconComp)>
                  </MUIcon>
                </div>
                <div
                  className="ButtonComp-textIcon-0-3-30"
                >
                  <Typography
                    bold={true}
                    textTransform="uppercase"
                    variant="standard"
                  >
                    <WithStyles(TypographyComp)
                      bold={true}
                      innerRef={null}
                      jssContext={
                        Object {
                          "classNamePrefix": "",
                          "disableStylesGeneration": false,
                        }
                      }
                      textTransform="uppercase"
                      theme={Object {}}
                      variant="standard"
                    >
                      <TypographyComp
                        bold={true}
                        classes={
                          Object {
                            "big": "TypographyComp-big-0-3-7",
                            "bold": "TypographyComp-bold-0-3-1",
                            "capitalize": "TypographyComp-capitalize-0-3-12",
                            "distance": "TypographyComp-distance-0-3-6",
                            "ellipsis": "TypographyComp-ellipsis-0-3-14",
                            "giant": "TypographyComp-giant-0-3-9",
                            "heading": "TypographyComp-heading-0-3-8",
                            "italic": "TypographyComp-italic-0-3-3",
                            "lowercase": "TypographyComp-lowercase-0-3-11",
                            "noWrap": "TypographyComp-noWrap-0-3-13",
                            "semiBold": "TypographyComp-semiBold-0-3-2",
                            "standard": "TypographyComp-standard-0-3-5",
                            "subtext": "TypographyComp-subtext-0-3-4",
                            "uppercase": "TypographyComp-uppercase-0-3-10",
                          }
                        }
                        textTransform="uppercase"
                        variant="standard"
                      >
                        <span
                          className="TypographyComp-standard-0-3-5 TypographyComp-uppercase-0-3-10 TypographyComp-bold-0-3-1"
                        >
                          Button
                        </span>
                      </TypographyComp>
                    </WithStyles(TypographyComp)>
                  </Typography>
                </div>
              </div>
            </div>
          </TouchRippleComp>
        </WithStyles(TouchRippleComp)>
      </TouchRipple>
    </ButtonComp>
  </WithStyles(ButtonComp)>
</Button>
`;

exports[`Storyshots Components/Button Raised primary icon 1`] = `
<Button
  color="primary"
  icon="assignment"
  onClick={[Function]}
  variant="raised"
>
  <WithStyles(ButtonComp)
    color="primary"
    icon="assignment"
    innerRef={null}
    jssContext={
      Object {
        "classNamePrefix": "",
        "disableStylesGeneration": false,
      }
    }
    onClick={[Function]}
    theme={Object {}}
    variant="raised"
  >
    <ButtonComp
      classes={
        Object {
          "centered": "ButtonComp-centered-0-3-19",
          "disabled": "ButtonComp-disabled-0-3-32",
          "flat": "ButtonComp-flat-0-3-17",
          "fullWidth": "ButtonComp-fullWidth-0-3-31",
          "green": "ButtonComp-green-0-3-23",
          "grey": "ButtonComp-grey-0-3-21",
          "icon": "ButtonComp-icon-0-3-16",
          "neutral": "ButtonComp-neutral-0-3-22",
          "orange": "ButtonComp-orange-0-3-24",
          "primary": "ButtonComp-primary-0-3-20",
          "raised": "ButtonComp-raised-0-3-18",
          "red": "ButtonComp-red-0-3-26",
          "root": "ButtonComp-root-0-3-15",
          "shadow": "ButtonComp-shadow-0-3-28",
          "text": "ButtonComp-text-0-3-29",
          "textIcon": "ButtonComp-textIcon-0-3-30",
          "transparent": "ButtonComp-transparent-0-3-27",
          "yellow": "ButtonComp-yellow-0-3-25",
        }
      }
      color="primary"
      icon="assignment"
      onClick={[Function]}
      variant="raised"
    >
      <TouchRipple
        className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
        disabled={false}
        onClick={[Function]}
      >
        <WithStyles(TouchRippleComp)
          className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
          disabled={false}
          innerRef={null}
          jssContext={
            Object {
              "classNamePrefix": "",
              "disableStylesGeneration": false,
            }
          }
          onClick={[Function]}
          theme={Object {}}
        >
          <TouchRippleComp
            className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
            classes={
              Object {
                "disabled": "TouchRippleComp-disabled-0-3-34",
                "root": "TouchRippleComp-root-0-3-33",
              }
            }
            disabled={false}
            onClick={[Function]}
          >
            <div
              className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28 TouchRippleComp-root-0-3-33"
              onClick={[Function]}
            >
              <div
                className="ButtonComp-raised-0-3-18 ButtonComp-primary-0-3-20"
              >
                <div
                  className="ButtonComp-icon-0-3-16"
                >
                  <MUIcon
                    fontSize={40}
                    type="assignment"
                  >
                    <WithStyles(MUIconComp)
                      fontSize={40}
                      innerRef={null}
                      jssContext={
                        Object {
                          "classNamePrefix": "",
                          "disableStylesGeneration": false,
                        }
                      }
                      theme={Object {}}
                      type="assignment"
                    >
                      <MUIconComp
                        classes={
                          Object {
                            "root": "MUIconComp-root-0-3-35 MUIconComp-root-d11-0-3-47",
                          }
                        }
                        fontSize={40}
                        type="assignment"
                      >
                        <i
                          className="MUIconComp-root-0-3-35 MUIconComp-root-d11-0-3-47"
                        >
                          assignment
                        </i>
                      </MUIconComp>
                    </WithStyles(MUIconComp)>
                  </MUIcon>
                </div>
              </div>
            </div>
          </TouchRippleComp>
        </WithStyles(TouchRippleComp)>
      </TouchRipple>
    </ButtonComp>
  </WithStyles(ButtonComp)>
</Button>
`;

exports[`Storyshots Components/Button Raised primary icon long text 1`] = `
<Button
  color="primary"
  icon="assignment"
  onClick={[Function]}
  text="Button with long tex"
  variant="raised"
>
  <WithStyles(ButtonComp)
    color="primary"
    icon="assignment"
    innerRef={null}
    jssContext={
      Object {
        "classNamePrefix": "",
        "disableStylesGeneration": false,
      }
    }
    onClick={[Function]}
    text="Button with long tex"
    theme={Object {}}
    variant="raised"
  >
    <ButtonComp
      classes={
        Object {
          "centered": "ButtonComp-centered-0-3-19",
          "disabled": "ButtonComp-disabled-0-3-32",
          "flat": "ButtonComp-flat-0-3-17",
          "fullWidth": "ButtonComp-fullWidth-0-3-31",
          "green": "ButtonComp-green-0-3-23",
          "grey": "ButtonComp-grey-0-3-21",
          "icon": "ButtonComp-icon-0-3-16",
          "neutral": "ButtonComp-neutral-0-3-22",
          "orange": "ButtonComp-orange-0-3-24",
          "primary": "ButtonComp-primary-0-3-20",
          "raised": "ButtonComp-raised-0-3-18",
          "red": "ButtonComp-red-0-3-26",
          "root": "ButtonComp-root-0-3-15",
          "shadow": "ButtonComp-shadow-0-3-28",
          "text": "ButtonComp-text-0-3-29",
          "textIcon": "ButtonComp-textIcon-0-3-30",
          "transparent": "ButtonComp-transparent-0-3-27",
          "yellow": "ButtonComp-yellow-0-3-25",
        }
      }
      color="primary"
      icon="assignment"
      onClick={[Function]}
      text="Button with long tex"
      variant="raised"
    >
      <TouchRipple
        className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
        disabled={false}
        onClick={[Function]}
      >
        <WithStyles(TouchRippleComp)
          className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
          disabled={false}
          innerRef={null}
          jssContext={
            Object {
              "classNamePrefix": "",
              "disableStylesGeneration": false,
            }
          }
          onClick={[Function]}
          theme={Object {}}
        >
          <TouchRippleComp
            className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
            classes={
              Object {
                "disabled": "TouchRippleComp-disabled-0-3-34",
                "root": "TouchRippleComp-root-0-3-33",
              }
            }
            disabled={false}
            onClick={[Function]}
          >
            <div
              className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28 TouchRippleComp-root-0-3-33"
              onClick={[Function]}
            >
              <div
                className="ButtonComp-raised-0-3-18 ButtonComp-primary-0-3-20"
              >
                <div
                  className="ButtonComp-icon-0-3-16"
                >
                  <MUIcon
                    fontSize={40}
                    type="assignment"
                  >
                    <WithStyles(MUIconComp)
                      fontSize={40}
                      innerRef={null}
                      jssContext={
                        Object {
                          "classNamePrefix": "",
                          "disableStylesGeneration": false,
                        }
                      }
                      theme={Object {}}
                      type="assignment"
                    >
                      <MUIconComp
                        classes={
                          Object {
                            "root": "MUIconComp-root-0-3-35 MUIconComp-root-d12-0-3-48",
                          }
                        }
                        fontSize={40}
                        type="assignment"
                      >
                        <i
                          className="MUIconComp-root-0-3-35 MUIconComp-root-d12-0-3-48"
                        >
                          assignment
                        </i>
                      </MUIconComp>
                    </WithStyles(MUIconComp)>
                  </MUIcon>
                </div>
                <div
                  className="ButtonComp-textIcon-0-3-30"
                >
                  <Typography
                    bold={true}
                    textTransform="uppercase"
                    variant="standard"
                  >
                    <WithStyles(TypographyComp)
                      bold={true}
                      innerRef={null}
                      jssContext={
                        Object {
                          "classNamePrefix": "",
                          "disableStylesGeneration": false,
                        }
                      }
                      textTransform="uppercase"
                      theme={Object {}}
                      variant="standard"
                    >
                      <TypographyComp
                        bold={true}
                        classes={
                          Object {
                            "big": "TypographyComp-big-0-3-7",
                            "bold": "TypographyComp-bold-0-3-1",
                            "capitalize": "TypographyComp-capitalize-0-3-12",
                            "distance": "TypographyComp-distance-0-3-6",
                            "ellipsis": "TypographyComp-ellipsis-0-3-14",
                            "giant": "TypographyComp-giant-0-3-9",
                            "heading": "TypographyComp-heading-0-3-8",
                            "italic": "TypographyComp-italic-0-3-3",
                            "lowercase": "TypographyComp-lowercase-0-3-11",
                            "noWrap": "TypographyComp-noWrap-0-3-13",
                            "semiBold": "TypographyComp-semiBold-0-3-2",
                            "standard": "TypographyComp-standard-0-3-5",
                            "subtext": "TypographyComp-subtext-0-3-4",
                            "uppercase": "TypographyComp-uppercase-0-3-10",
                          }
                        }
                        textTransform="uppercase"
                        variant="standard"
                      >
                        <span
                          className="TypographyComp-standard-0-3-5 TypographyComp-uppercase-0-3-10 TypographyComp-bold-0-3-1"
                        >
                          Button with long tex
                        </span>
                      </TypographyComp>
                    </WithStyles(TypographyComp)>
                  </Typography>
                </div>
              </div>
            </div>
          </TouchRippleComp>
        </WithStyles(TouchRippleComp)>
      </TouchRipple>
    </ButtonComp>
  </WithStyles(ButtonComp)>
</Button>
`;

exports[`Storyshots Components/Button Raised primary icon text 1`] = `
<Button
  color="primary"
  icon="assignment"
  onClick={[Function]}
  text="Button"
  variant="raised"
>
  <WithStyles(ButtonComp)
    color="primary"
    icon="assignment"
    innerRef={null}
    jssContext={
      Object {
        "classNamePrefix": "",
        "disableStylesGeneration": false,
      }
    }
    onClick={[Function]}
    text="Button"
    theme={Object {}}
    variant="raised"
  >
    <ButtonComp
      classes={
        Object {
          "centered": "ButtonComp-centered-0-3-19",
          "disabled": "ButtonComp-disabled-0-3-32",
          "flat": "ButtonComp-flat-0-3-17",
          "fullWidth": "ButtonComp-fullWidth-0-3-31",
          "green": "ButtonComp-green-0-3-23",
          "grey": "ButtonComp-grey-0-3-21",
          "icon": "ButtonComp-icon-0-3-16",
          "neutral": "ButtonComp-neutral-0-3-22",
          "orange": "ButtonComp-orange-0-3-24",
          "primary": "ButtonComp-primary-0-3-20",
          "raised": "ButtonComp-raised-0-3-18",
          "red": "ButtonComp-red-0-3-26",
          "root": "ButtonComp-root-0-3-15",
          "shadow": "ButtonComp-shadow-0-3-28",
          "text": "ButtonComp-text-0-3-29",
          "textIcon": "ButtonComp-textIcon-0-3-30",
          "transparent": "ButtonComp-transparent-0-3-27",
          "yellow": "ButtonComp-yellow-0-3-25",
        }
      }
      color="primary"
      icon="assignment"
      onClick={[Function]}
      text="Button"
      variant="raised"
    >
      <TouchRipple
        className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
        disabled={false}
        onClick={[Function]}
      >
        <WithStyles(TouchRippleComp)
          className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
          disabled={false}
          innerRef={null}
          jssContext={
            Object {
              "classNamePrefix": "",
              "disableStylesGeneration": false,
            }
          }
          onClick={[Function]}
          theme={Object {}}
        >
          <TouchRippleComp
            className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
            classes={
              Object {
                "disabled": "TouchRippleComp-disabled-0-3-34",
                "root": "TouchRippleComp-root-0-3-33",
              }
            }
            disabled={false}
            onClick={[Function]}
          >
            <div
              className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28 TouchRippleComp-root-0-3-33"
              onClick={[Function]}
            >
              <div
                className="ButtonComp-raised-0-3-18 ButtonComp-primary-0-3-20"
              >
                <div
                  className="ButtonComp-icon-0-3-16"
                >
                  <MUIcon
                    fontSize={40}
                    type="assignment"
                  >
                    <WithStyles(MUIconComp)
                      fontSize={40}
                      innerRef={null}
                      jssContext={
                        Object {
                          "classNamePrefix": "",
                          "disableStylesGeneration": false,
                        }
                      }
                      theme={Object {}}
                      type="assignment"
                    >
                      <MUIconComp
                        classes={
                          Object {
                            "root": "MUIconComp-root-0-3-35 MUIconComp-root-d2-0-3-38",
                          }
                        }
                        fontSize={40}
                        type="assignment"
                      >
                        <i
                          className="MUIconComp-root-0-3-35 MUIconComp-root-d2-0-3-38"
                        >
                          assignment
                        </i>
                      </MUIconComp>
                    </WithStyles(MUIconComp)>
                  </MUIcon>
                </div>
                <div
                  className="ButtonComp-textIcon-0-3-30"
                >
                  <Typography
                    bold={true}
                    textTransform="uppercase"
                    variant="standard"
                  >
                    <WithStyles(TypographyComp)
                      bold={true}
                      innerRef={null}
                      jssContext={
                        Object {
                          "classNamePrefix": "",
                          "disableStylesGeneration": false,
                        }
                      }
                      textTransform="uppercase"
                      theme={Object {}}
                      variant="standard"
                    >
                      <TypographyComp
                        bold={true}
                        classes={
                          Object {
                            "big": "TypographyComp-big-0-3-7",
                            "bold": "TypographyComp-bold-0-3-1",
                            "capitalize": "TypographyComp-capitalize-0-3-12",
                            "distance": "TypographyComp-distance-0-3-6",
                            "ellipsis": "TypographyComp-ellipsis-0-3-14",
                            "giant": "TypographyComp-giant-0-3-9",
                            "heading": "TypographyComp-heading-0-3-8",
                            "italic": "TypographyComp-italic-0-3-3",
                            "lowercase": "TypographyComp-lowercase-0-3-11",
                            "noWrap": "TypographyComp-noWrap-0-3-13",
                            "semiBold": "TypographyComp-semiBold-0-3-2",
                            "standard": "TypographyComp-standard-0-3-5",
                            "subtext": "TypographyComp-subtext-0-3-4",
                            "uppercase": "TypographyComp-uppercase-0-3-10",
                          }
                        }
                        textTransform="uppercase"
                        variant="standard"
                      >
                        <span
                          className="TypographyComp-standard-0-3-5 TypographyComp-uppercase-0-3-10 TypographyComp-bold-0-3-1"
                        >
                          Button
                        </span>
                      </TypographyComp>
                    </WithStyles(TypographyComp)>
                  </Typography>
                </div>
              </div>
            </div>
          </TouchRippleComp>
        </WithStyles(TouchRippleComp)>
      </TouchRipple>
    </ButtonComp>
  </WithStyles(ButtonComp)>
</Button>
`;

exports[`Storyshots Components/Button Raised primary no wrap 1`] = `
<div
  style={
    Object {
      "width": 100,
    }
  }
>
  <Button
    color="primary"
    icon="assignment"
    noWrap={true}
    onClick={[Function]}
    text="Button with long tex"
    variant="raised"
  >
    <WithStyles(ButtonComp)
      color="primary"
      icon="assignment"
      innerRef={null}
      jssContext={
        Object {
          "classNamePrefix": "",
          "disableStylesGeneration": false,
        }
      }
      noWrap={true}
      onClick={[Function]}
      text="Button with long tex"
      theme={Object {}}
      variant="raised"
    >
      <ButtonComp
        classes={
          Object {
            "centered": "ButtonComp-centered-0-3-19",
            "disabled": "ButtonComp-disabled-0-3-32",
            "flat": "ButtonComp-flat-0-3-17",
            "fullWidth": "ButtonComp-fullWidth-0-3-31",
            "green": "ButtonComp-green-0-3-23",
            "grey": "ButtonComp-grey-0-3-21",
            "icon": "ButtonComp-icon-0-3-16",
            "neutral": "ButtonComp-neutral-0-3-22",
            "orange": "ButtonComp-orange-0-3-24",
            "primary": "ButtonComp-primary-0-3-20",
            "raised": "ButtonComp-raised-0-3-18",
            "red": "ButtonComp-red-0-3-26",
            "root": "ButtonComp-root-0-3-15",
            "shadow": "ButtonComp-shadow-0-3-28",
            "text": "ButtonComp-text-0-3-29",
            "textIcon": "ButtonComp-textIcon-0-3-30",
            "transparent": "ButtonComp-transparent-0-3-27",
            "yellow": "ButtonComp-yellow-0-3-25",
          }
        }
        color="primary"
        icon="assignment"
        noWrap={true}
        onClick={[Function]}
        text="Button with long tex"
        variant="raised"
      >
        <TouchRipple
          className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
          disabled={false}
          onClick={[Function]}
        >
          <WithStyles(TouchRippleComp)
            className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
            disabled={false}
            innerRef={null}
            jssContext={
              Object {
                "classNamePrefix": "",
                "disableStylesGeneration": false,
              }
            }
            onClick={[Function]}
            theme={Object {}}
          >
            <TouchRippleComp
              className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
              classes={
                Object {
                  "disabled": "TouchRippleComp-disabled-0-3-34",
                  "root": "TouchRippleComp-root-0-3-33",
                }
              }
              disabled={false}
              onClick={[Function]}
            >
              <div
                className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28 TouchRippleComp-root-0-3-33"
                onClick={[Function]}
              >
                <div
                  className="ButtonComp-raised-0-3-18 ButtonComp-primary-0-3-20"
                >
                  <div
                    className="ButtonComp-icon-0-3-16"
                  >
                    <MUIcon
                      fontSize={40}
                      type="assignment"
                    >
                      <WithStyles(MUIconComp)
                        fontSize={40}
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        theme={Object {}}
                        type="assignment"
                      >
                        <MUIconComp
                          classes={
                            Object {
                              "root": "MUIconComp-root-0-3-35 MUIconComp-root-d13-0-3-49",
                            }
                          }
                          fontSize={40}
                          type="assignment"
                        >
                          <i
                            className="MUIconComp-root-0-3-35 MUIconComp-root-d13-0-3-49"
                          >
                            assignment
                          </i>
                        </MUIconComp>
                      </WithStyles(MUIconComp)>
                    </MUIcon>
                  </div>
                  <div
                    className="ButtonComp-textIcon-0-3-30"
                  >
                    <Typography
                      bold={true}
                      noWrap={true}
                      textTransform="uppercase"
                      variant="standard"
                    >
                      <WithStyles(TypographyComp)
                        bold={true}
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        noWrap={true}
                        textTransform="uppercase"
                        theme={Object {}}
                        variant="standard"
                      >
                        <TypographyComp
                          bold={true}
                          classes={
                            Object {
                              "big": "TypographyComp-big-0-3-7",
                              "bold": "TypographyComp-bold-0-3-1",
                              "capitalize": "TypographyComp-capitalize-0-3-12",
                              "distance": "TypographyComp-distance-0-3-6",
                              "ellipsis": "TypographyComp-ellipsis-0-3-14",
                              "giant": "TypographyComp-giant-0-3-9",
                              "heading": "TypographyComp-heading-0-3-8",
                              "italic": "TypographyComp-italic-0-3-3",
                              "lowercase": "TypographyComp-lowercase-0-3-11",
                              "noWrap": "TypographyComp-noWrap-0-3-13",
                              "semiBold": "TypographyComp-semiBold-0-3-2",
                              "standard": "TypographyComp-standard-0-3-5",
                              "subtext": "TypographyComp-subtext-0-3-4",
                              "uppercase": "TypographyComp-uppercase-0-3-10",
                            }
                          }
                          noWrap={true}
                          textTransform="uppercase"
                          variant="standard"
                        >
                          <span
                            className="TypographyComp-standard-0-3-5 TypographyComp-uppercase-0-3-10 TypographyComp-bold-0-3-1 TypographyComp-noWrap-0-3-13"
                          >
                            Button with long tex
                          </span>
                        </TypographyComp>
                      </WithStyles(TypographyComp)>
                    </Typography>
                  </div>
                </div>
              </div>
            </TouchRippleComp>
          </WithStyles(TouchRippleComp)>
        </TouchRipple>
      </ButtonComp>
    </WithStyles(ButtonComp)>
  </Button>
</div>
`;

exports[`Storyshots Components/Button Raised primary text 1`] = `
<Button
  color="primary"
  onClick={[Function]}
  text="Button"
  variant="raised"
>
  <WithStyles(ButtonComp)
    color="primary"
    innerRef={null}
    jssContext={
      Object {
        "classNamePrefix": "",
        "disableStylesGeneration": false,
      }
    }
    onClick={[Function]}
    text="Button"
    theme={Object {}}
    variant="raised"
  >
    <ButtonComp
      classes={
        Object {
          "centered": "ButtonComp-centered-0-3-19",
          "disabled": "ButtonComp-disabled-0-3-32",
          "flat": "ButtonComp-flat-0-3-17",
          "fullWidth": "ButtonComp-fullWidth-0-3-31",
          "green": "ButtonComp-green-0-3-23",
          "grey": "ButtonComp-grey-0-3-21",
          "icon": "ButtonComp-icon-0-3-16",
          "neutral": "ButtonComp-neutral-0-3-22",
          "orange": "ButtonComp-orange-0-3-24",
          "primary": "ButtonComp-primary-0-3-20",
          "raised": "ButtonComp-raised-0-3-18",
          "red": "ButtonComp-red-0-3-26",
          "root": "ButtonComp-root-0-3-15",
          "shadow": "ButtonComp-shadow-0-3-28",
          "text": "ButtonComp-text-0-3-29",
          "textIcon": "ButtonComp-textIcon-0-3-30",
          "transparent": "ButtonComp-transparent-0-3-27",
          "yellow": "ButtonComp-yellow-0-3-25",
        }
      }
      color="primary"
      onClick={[Function]}
      text="Button"
      variant="raised"
    >
      <TouchRipple
        className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
        disabled={false}
        onClick={[Function]}
      >
        <WithStyles(TouchRippleComp)
          className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
          disabled={false}
          innerRef={null}
          jssContext={
            Object {
              "classNamePrefix": "",
              "disableStylesGeneration": false,
            }
          }
          onClick={[Function]}
          theme={Object {}}
        >
          <TouchRippleComp
            className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
            classes={
              Object {
                "disabled": "TouchRippleComp-disabled-0-3-34",
                "root": "TouchRippleComp-root-0-3-33",
              }
            }
            disabled={false}
            onClick={[Function]}
          >
            <div
              className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28 TouchRippleComp-root-0-3-33"
              onClick={[Function]}
            >
              <div
                className="ButtonComp-raised-0-3-18 ButtonComp-primary-0-3-20"
              >
                <div
                  className="ButtonComp-text-0-3-29"
                >
                  <Typography
                    bold={true}
                    textTransform="uppercase"
                    variant="standard"
                  >
                    <WithStyles(TypographyComp)
                      bold={true}
                      innerRef={null}
                      jssContext={
                        Object {
                          "classNamePrefix": "",
                          "disableStylesGeneration": false,
                        }
                      }
                      textTransform="uppercase"
                      theme={Object {}}
                      variant="standard"
                    >
                      <TypographyComp
                        bold={true}
                        classes={
                          Object {
                            "big": "TypographyComp-big-0-3-7",
                            "bold": "TypographyComp-bold-0-3-1",
                            "capitalize": "TypographyComp-capitalize-0-3-12",
                            "distance": "TypographyComp-distance-0-3-6",
                            "ellipsis": "TypographyComp-ellipsis-0-3-14",
                            "giant": "TypographyComp-giant-0-3-9",
                            "heading": "TypographyComp-heading-0-3-8",
                            "italic": "TypographyComp-italic-0-3-3",
                            "lowercase": "TypographyComp-lowercase-0-3-11",
                            "noWrap": "TypographyComp-noWrap-0-3-13",
                            "semiBold": "TypographyComp-semiBold-0-3-2",
                            "standard": "TypographyComp-standard-0-3-5",
                            "subtext": "TypographyComp-subtext-0-3-4",
                            "uppercase": "TypographyComp-uppercase-0-3-10",
                          }
                        }
                        textTransform="uppercase"
                        variant="standard"
                      >
                        <span
                          className="TypographyComp-standard-0-3-5 TypographyComp-uppercase-0-3-10 TypographyComp-bold-0-3-1"
                        >
                          Button
                        </span>
                      </TypographyComp>
                    </WithStyles(TypographyComp)>
                  </Typography>
                </div>
              </div>
            </div>
          </TouchRippleComp>
        </WithStyles(TouchRippleComp)>
      </TouchRipple>
    </ButtonComp>
  </WithStyles(ButtonComp)>
</Button>
`;

exports[`Storyshots Components/Button Raised red icon text 1`] = `
<Button
  color="red"
  icon="assignment"
  onClick={[Function]}
  text="Button"
  variant="raised"
>
  <WithStyles(ButtonComp)
    color="red"
    icon="assignment"
    innerRef={null}
    jssContext={
      Object {
        "classNamePrefix": "",
        "disableStylesGeneration": false,
      }
    }
    onClick={[Function]}
    text="Button"
    theme={Object {}}
    variant="raised"
  >
    <ButtonComp
      classes={
        Object {
          "centered": "ButtonComp-centered-0-3-19",
          "disabled": "ButtonComp-disabled-0-3-32",
          "flat": "ButtonComp-flat-0-3-17",
          "fullWidth": "ButtonComp-fullWidth-0-3-31",
          "green": "ButtonComp-green-0-3-23",
          "grey": "ButtonComp-grey-0-3-21",
          "icon": "ButtonComp-icon-0-3-16",
          "neutral": "ButtonComp-neutral-0-3-22",
          "orange": "ButtonComp-orange-0-3-24",
          "primary": "ButtonComp-primary-0-3-20",
          "raised": "ButtonComp-raised-0-3-18",
          "red": "ButtonComp-red-0-3-26",
          "root": "ButtonComp-root-0-3-15",
          "shadow": "ButtonComp-shadow-0-3-28",
          "text": "ButtonComp-text-0-3-29",
          "textIcon": "ButtonComp-textIcon-0-3-30",
          "transparent": "ButtonComp-transparent-0-3-27",
          "yellow": "ButtonComp-yellow-0-3-25",
        }
      }
      color="red"
      icon="assignment"
      onClick={[Function]}
      text="Button"
      variant="raised"
    >
      <TouchRipple
        className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
        disabled={false}
        onClick={[Function]}
      >
        <WithStyles(TouchRippleComp)
          className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
          disabled={false}
          innerRef={null}
          jssContext={
            Object {
              "classNamePrefix": "",
              "disableStylesGeneration": false,
            }
          }
          onClick={[Function]}
          theme={Object {}}
        >
          <TouchRippleComp
            className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
            classes={
              Object {
                "disabled": "TouchRippleComp-disabled-0-3-34",
                "root": "TouchRippleComp-root-0-3-33",
              }
            }
            disabled={false}
            onClick={[Function]}
          >
            <div
              className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28 TouchRippleComp-root-0-3-33"
              onClick={[Function]}
            >
              <div
                className="ButtonComp-raised-0-3-18 ButtonComp-red-0-3-26"
              >
                <div
                  className="ButtonComp-icon-0-3-16"
                >
                  <MUIcon
                    fontSize={40}
                    type="assignment"
                  >
                    <WithStyles(MUIconComp)
                      fontSize={40}
                      innerRef={null}
                      jssContext={
                        Object {
                          "classNamePrefix": "",
                          "disableStylesGeneration": false,
                        }
                      }
                      theme={Object {}}
                      type="assignment"
                    >
                      <MUIconComp
                        classes={
                          Object {
                            "root": "MUIconComp-root-0-3-35 MUIconComp-root-d6-0-3-42",
                          }
                        }
                        fontSize={40}
                        type="assignment"
                      >
                        <i
                          className="MUIconComp-root-0-3-35 MUIconComp-root-d6-0-3-42"
                        >
                          assignment
                        </i>
                      </MUIconComp>
                    </WithStyles(MUIconComp)>
                  </MUIcon>
                </div>
                <div
                  className="ButtonComp-textIcon-0-3-30"
                >
                  <Typography
                    bold={true}
                    textTransform="uppercase"
                    variant="standard"
                  >
                    <WithStyles(TypographyComp)
                      bold={true}
                      innerRef={null}
                      jssContext={
                        Object {
                          "classNamePrefix": "",
                          "disableStylesGeneration": false,
                        }
                      }
                      textTransform="uppercase"
                      theme={Object {}}
                      variant="standard"
                    >
                      <TypographyComp
                        bold={true}
                        classes={
                          Object {
                            "big": "TypographyComp-big-0-3-7",
                            "bold": "TypographyComp-bold-0-3-1",
                            "capitalize": "TypographyComp-capitalize-0-3-12",
                            "distance": "TypographyComp-distance-0-3-6",
                            "ellipsis": "TypographyComp-ellipsis-0-3-14",
                            "giant": "TypographyComp-giant-0-3-9",
                            "heading": "TypographyComp-heading-0-3-8",
                            "italic": "TypographyComp-italic-0-3-3",
                            "lowercase": "TypographyComp-lowercase-0-3-11",
                            "noWrap": "TypographyComp-noWrap-0-3-13",
                            "semiBold": "TypographyComp-semiBold-0-3-2",
                            "standard": "TypographyComp-standard-0-3-5",
                            "subtext": "TypographyComp-subtext-0-3-4",
                            "uppercase": "TypographyComp-uppercase-0-3-10",
                          }
                        }
                        textTransform="uppercase"
                        variant="standard"
                      >
                        <span
                          className="TypographyComp-standard-0-3-5 TypographyComp-uppercase-0-3-10 TypographyComp-bold-0-3-1"
                        >
                          Button
                        </span>
                      </TypographyComp>
                    </WithStyles(TypographyComp)>
                  </Typography>
                </div>
              </div>
            </div>
          </TouchRippleComp>
        </WithStyles(TouchRippleComp)>
      </TouchRipple>
    </ButtonComp>
  </WithStyles(ButtonComp)>
</Button>
`;

exports[`Storyshots Components/Button Raised yellow icon text 1`] = `
<Button
  color="yellow"
  icon="assignment"
  onClick={[Function]}
  text="Button"
  variant="raised"
>
  <WithStyles(ButtonComp)
    color="yellow"
    icon="assignment"
    innerRef={null}
    jssContext={
      Object {
        "classNamePrefix": "",
        "disableStylesGeneration": false,
      }
    }
    onClick={[Function]}
    text="Button"
    theme={Object {}}
    variant="raised"
  >
    <ButtonComp
      classes={
        Object {
          "centered": "ButtonComp-centered-0-3-19",
          "disabled": "ButtonComp-disabled-0-3-32",
          "flat": "ButtonComp-flat-0-3-17",
          "fullWidth": "ButtonComp-fullWidth-0-3-31",
          "green": "ButtonComp-green-0-3-23",
          "grey": "ButtonComp-grey-0-3-21",
          "icon": "ButtonComp-icon-0-3-16",
          "neutral": "ButtonComp-neutral-0-3-22",
          "orange": "ButtonComp-orange-0-3-24",
          "primary": "ButtonComp-primary-0-3-20",
          "raised": "ButtonComp-raised-0-3-18",
          "red": "ButtonComp-red-0-3-26",
          "root": "ButtonComp-root-0-3-15",
          "shadow": "ButtonComp-shadow-0-3-28",
          "text": "ButtonComp-text-0-3-29",
          "textIcon": "ButtonComp-textIcon-0-3-30",
          "transparent": "ButtonComp-transparent-0-3-27",
          "yellow": "ButtonComp-yellow-0-3-25",
        }
      }
      color="yellow"
      icon="assignment"
      onClick={[Function]}
      text="Button"
      variant="raised"
    >
      <TouchRipple
        className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
        disabled={false}
        onClick={[Function]}
      >
        <WithStyles(TouchRippleComp)
          className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
          disabled={false}
          innerRef={null}
          jssContext={
            Object {
              "classNamePrefix": "",
              "disableStylesGeneration": false,
            }
          }
          onClick={[Function]}
          theme={Object {}}
        >
          <TouchRippleComp
            className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
            classes={
              Object {
                "disabled": "TouchRippleComp-disabled-0-3-34",
                "root": "TouchRippleComp-root-0-3-33",
              }
            }
            disabled={false}
            onClick={[Function]}
          >
            <div
              className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28 TouchRippleComp-root-0-3-33"
              onClick={[Function]}
            >
              <div
                className="ButtonComp-raised-0-3-18 ButtonComp-yellow-0-3-25"
              >
                <div
                  className="ButtonComp-icon-0-3-16"
                >
                  <MUIcon
                    fontSize={40}
                    type="assignment"
                  >
                    <WithStyles(MUIconComp)
                      fontSize={40}
                      innerRef={null}
                      jssContext={
                        Object {
                          "classNamePrefix": "",
                          "disableStylesGeneration": false,
                        }
                      }
                      theme={Object {}}
                      type="assignment"
                    >
                      <MUIconComp
                        classes={
                          Object {
                            "root": "MUIconComp-root-0-3-35 MUIconComp-root-d5-0-3-41",
                          }
                        }
                        fontSize={40}
                        type="assignment"
                      >
                        <i
                          className="MUIconComp-root-0-3-35 MUIconComp-root-d5-0-3-41"
                        >
                          assignment
                        </i>
                      </MUIconComp>
                    </WithStyles(MUIconComp)>
                  </MUIcon>
                </div>
                <div
                  className="ButtonComp-textIcon-0-3-30"
                >
                  <Typography
                    bold={true}
                    textTransform="uppercase"
                    variant="standard"
                  >
                    <WithStyles(TypographyComp)
                      bold={true}
                      innerRef={null}
                      jssContext={
                        Object {
                          "classNamePrefix": "",
                          "disableStylesGeneration": false,
                        }
                      }
                      textTransform="uppercase"
                      theme={Object {}}
                      variant="standard"
                    >
                      <TypographyComp
                        bold={true}
                        classes={
                          Object {
                            "big": "TypographyComp-big-0-3-7",
                            "bold": "TypographyComp-bold-0-3-1",
                            "capitalize": "TypographyComp-capitalize-0-3-12",
                            "distance": "TypographyComp-distance-0-3-6",
                            "ellipsis": "TypographyComp-ellipsis-0-3-14",
                            "giant": "TypographyComp-giant-0-3-9",
                            "heading": "TypographyComp-heading-0-3-8",
                            "italic": "TypographyComp-italic-0-3-3",
                            "lowercase": "TypographyComp-lowercase-0-3-11",
                            "noWrap": "TypographyComp-noWrap-0-3-13",
                            "semiBold": "TypographyComp-semiBold-0-3-2",
                            "standard": "TypographyComp-standard-0-3-5",
                            "subtext": "TypographyComp-subtext-0-3-4",
                            "uppercase": "TypographyComp-uppercase-0-3-10",
                          }
                        }
                        textTransform="uppercase"
                        variant="standard"
                      >
                        <span
                          className="TypographyComp-standard-0-3-5 TypographyComp-uppercase-0-3-10 TypographyComp-bold-0-3-1"
                        >
                          Button
                        </span>
                      </TypographyComp>
                    </WithStyles(TypographyComp)>
                  </Typography>
                </div>
              </div>
            </div>
          </TouchRippleComp>
        </WithStyles(TouchRippleComp)>
      </TouchRipple>
    </ButtonComp>
  </WithStyles(ButtonComp)>
</Button>
`;
