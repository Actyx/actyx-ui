// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Components/Dialog/FooterWithDoubleConfirmation Animation 1`] = `
<AnimationWrapper>
  <FooterWithDoubleConfirmation
    cancelMessage="Cancel"
    confirmMessage="Confirm"
    message="Message"
    mode="normal"
    noMessage="No"
    onCancel={[Function]}
    onConfirm={[Function]}
    onSelectNo={[Function]}
    onSelectYes={[Function]}
    valid={true}
    yesMessage="Yes"
  >
    <WithStyles(FooterWithDoubleConfirmationComp)
      cancelMessage="Cancel"
      confirmMessage="Confirm"
      innerRef={null}
      jssContext={
        Object {
          "classNamePrefix": "",
          "disableStylesGeneration": false,
        }
      }
      message="Message"
      mode="normal"
      noMessage="No"
      onCancel={[Function]}
      onConfirm={[Function]}
      onSelectNo={[Function]}
      onSelectYes={[Function]}
      theme={Object {}}
      valid={true}
      yesMessage="Yes"
    >
      <FooterWithDoubleConfirmationComp
        cancelMessage="Cancel"
        classes={
          Object {
            "confirm": "FooterWithDoubleConfirmationComp-confirm-0-3-131",
            "confirmation": "FooterWithDoubleConfirmationComp-confirmation-0-3-132",
            "content": "FooterWithDoubleConfirmationComp-content-0-3-130",
            "root": "FooterWithDoubleConfirmationComp-root-0-3-129",
          }
        }
        confirmMessage="Confirm"
        message="Message"
        mode="normal"
        noMessage="No"
        onCancel={[Function]}
        onConfirm={[Function]}
        onSelectNo={[Function]}
        onSelectYes={[Function]}
        valid={true}
        yesMessage="Yes"
      >
        <div
          className="FooterWithDoubleConfirmationComp-root-0-3-129"
        >
          <Transition
            appear={false}
            enter={true}
            exit={true}
            in={false}
            mountOnEnter={false}
            onEnter={[Function]}
            onEntered={[Function]}
            onEntering={[Function]}
            onExit={[Function]}
            onExited={[Function]}
            onExiting={[Function]}
            timeout={150}
            unmountOnExit={false}
          >
            <div
              className="FooterWithDoubleConfirmationComp-content-0-3-130"
              style={
                Object {
                  "transition": "transform 150ms ease-in-out",
                }
              }
            >
              <div
                className="FooterWithDoubleConfirmationComp-confirm-0-3-131"
              >
                <Button
                  color="transparent"
                  onClick={[Function]}
                  text="Cancel"
                  variant="flat"
                >
                  <WithStyles(ButtonComp)
                    color="transparent"
                    innerRef={null}
                    jssContext={
                      Object {
                        "classNamePrefix": "",
                        "disableStylesGeneration": false,
                      }
                    }
                    onClick={[Function]}
                    text="Cancel"
                    theme={Object {}}
                    variant="flat"
                  >
                    <ButtonComp
                      classes={
                        Object {
                          "centered": "ButtonComp-centered-0-3-19",
                          "disabled": "ButtonComp-disabled-0-3-32",
                          "flat": "ButtonComp-flat-0-3-17",
                          "fullWidth": "ButtonComp-fullWidth-0-3-31",
                          "green": "ButtonComp-green-0-3-23",
                          "grey": "ButtonComp-grey-0-3-21",
                          "icon": "ButtonComp-icon-0-3-16",
                          "neutral": "ButtonComp-neutral-0-3-22",
                          "orange": "ButtonComp-orange-0-3-24",
                          "primary": "ButtonComp-primary-0-3-20",
                          "raised": "ButtonComp-raised-0-3-18",
                          "red": "ButtonComp-red-0-3-26",
                          "root": "ButtonComp-root-0-3-15",
                          "shadow": "ButtonComp-shadow-0-3-28",
                          "text": "ButtonComp-text-0-3-29",
                          "textIcon": "ButtonComp-textIcon-0-3-30",
                          "transparent": "ButtonComp-transparent-0-3-27",
                          "yellow": "ButtonComp-yellow-0-3-25",
                        }
                      }
                      color="transparent"
                      onClick={[Function]}
                      text="Cancel"
                      variant="flat"
                    >
                      <TouchRipple
                        className="ButtonComp-root-0-3-15"
                        disabled={false}
                        onClick={[Function]}
                      >
                        <WithStyles(TouchRippleComp)
                          className="ButtonComp-root-0-3-15"
                          disabled={false}
                          innerRef={null}
                          jssContext={
                            Object {
                              "classNamePrefix": "",
                              "disableStylesGeneration": false,
                            }
                          }
                          onClick={[Function]}
                          theme={Object {}}
                        >
                          <TouchRippleComp
                            className="ButtonComp-root-0-3-15"
                            classes={
                              Object {
                                "disabled": "TouchRippleComp-disabled-0-3-34",
                                "root": "TouchRippleComp-root-0-3-33",
                              }
                            }
                            disabled={false}
                            onClick={[Function]}
                          >
                            <div
                              className="ButtonComp-root-0-3-15 TouchRippleComp-root-0-3-33"
                              onClick={[Function]}
                            >
                              <div
                                className="ButtonComp-flat-0-3-17 ButtonComp-transparent-0-3-27"
                              >
                                <div
                                  className="ButtonComp-text-0-3-29"
                                >
                                  <Typography
                                    bold={true}
                                    textTransform="uppercase"
                                    variant="standard"
                                  >
                                    <WithStyles(TypographyComp)
                                      bold={true}
                                      innerRef={null}
                                      jssContext={
                                        Object {
                                          "classNamePrefix": "",
                                          "disableStylesGeneration": false,
                                        }
                                      }
                                      textTransform="uppercase"
                                      theme={Object {}}
                                      variant="standard"
                                    >
                                      <TypographyComp
                                        bold={true}
                                        classes={
                                          Object {
                                            "big": "TypographyComp-big-0-3-7",
                                            "bold": "TypographyComp-bold-0-3-1",
                                            "capitalize": "TypographyComp-capitalize-0-3-12",
                                            "distance": "TypographyComp-distance-0-3-6",
                                            "ellipsis": "TypographyComp-ellipsis-0-3-14",
                                            "giant": "TypographyComp-giant-0-3-9",
                                            "heading": "TypographyComp-heading-0-3-8",
                                            "italic": "TypographyComp-italic-0-3-3",
                                            "lowercase": "TypographyComp-lowercase-0-3-11",
                                            "noWrap": "TypographyComp-noWrap-0-3-13",
                                            "semiBold": "TypographyComp-semiBold-0-3-2",
                                            "standard": "TypographyComp-standard-0-3-5",
                                            "subtext": "TypographyComp-subtext-0-3-4",
                                            "uppercase": "TypographyComp-uppercase-0-3-10",
                                          }
                                        }
                                        textTransform="uppercase"
                                        variant="standard"
                                      >
                                        <span
                                          className="TypographyComp-standard-0-3-5 TypographyComp-uppercase-0-3-10 TypographyComp-bold-0-3-1"
                                        >
                                          Cancel
                                        </span>
                                      </TypographyComp>
                                    </WithStyles(TypographyComp)>
                                  </Typography>
                                </div>
                              </div>
                            </div>
                          </TouchRippleComp>
                        </WithStyles(TouchRippleComp)>
                      </TouchRipple>
                    </ButtonComp>
                  </WithStyles(ButtonComp)>
                </Button>
                <Button
                  color="primary"
                  disabled={false}
                  onClick={[Function]}
                  text="Confirm"
                  variant="raised"
                >
                  <WithStyles(ButtonComp)
                    color="primary"
                    disabled={false}
                    innerRef={null}
                    jssContext={
                      Object {
                        "classNamePrefix": "",
                        "disableStylesGeneration": false,
                      }
                    }
                    onClick={[Function]}
                    text="Confirm"
                    theme={Object {}}
                    variant="raised"
                  >
                    <ButtonComp
                      classes={
                        Object {
                          "centered": "ButtonComp-centered-0-3-19",
                          "disabled": "ButtonComp-disabled-0-3-32",
                          "flat": "ButtonComp-flat-0-3-17",
                          "fullWidth": "ButtonComp-fullWidth-0-3-31",
                          "green": "ButtonComp-green-0-3-23",
                          "grey": "ButtonComp-grey-0-3-21",
                          "icon": "ButtonComp-icon-0-3-16",
                          "neutral": "ButtonComp-neutral-0-3-22",
                          "orange": "ButtonComp-orange-0-3-24",
                          "primary": "ButtonComp-primary-0-3-20",
                          "raised": "ButtonComp-raised-0-3-18",
                          "red": "ButtonComp-red-0-3-26",
                          "root": "ButtonComp-root-0-3-15",
                          "shadow": "ButtonComp-shadow-0-3-28",
                          "text": "ButtonComp-text-0-3-29",
                          "textIcon": "ButtonComp-textIcon-0-3-30",
                          "transparent": "ButtonComp-transparent-0-3-27",
                          "yellow": "ButtonComp-yellow-0-3-25",
                        }
                      }
                      color="primary"
                      disabled={false}
                      onClick={[Function]}
                      text="Confirm"
                      variant="raised"
                    >
                      <TouchRipple
                        className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
                        disabled={false}
                        onClick={[Function]}
                      >
                        <WithStyles(TouchRippleComp)
                          className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
                          disabled={false}
                          innerRef={null}
                          jssContext={
                            Object {
                              "classNamePrefix": "",
                              "disableStylesGeneration": false,
                            }
                          }
                          onClick={[Function]}
                          theme={Object {}}
                        >
                          <TouchRippleComp
                            className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
                            classes={
                              Object {
                                "disabled": "TouchRippleComp-disabled-0-3-34",
                                "root": "TouchRippleComp-root-0-3-33",
                              }
                            }
                            disabled={false}
                            onClick={[Function]}
                          >
                            <div
                              className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28 TouchRippleComp-root-0-3-33"
                              onClick={[Function]}
                            >
                              <div
                                className="ButtonComp-raised-0-3-18 ButtonComp-primary-0-3-20"
                              >
                                <div
                                  className="ButtonComp-text-0-3-29"
                                >
                                  <Typography
                                    bold={true}
                                    textTransform="uppercase"
                                    variant="standard"
                                  >
                                    <WithStyles(TypographyComp)
                                      bold={true}
                                      innerRef={null}
                                      jssContext={
                                        Object {
                                          "classNamePrefix": "",
                                          "disableStylesGeneration": false,
                                        }
                                      }
                                      textTransform="uppercase"
                                      theme={Object {}}
                                      variant="standard"
                                    >
                                      <TypographyComp
                                        bold={true}
                                        classes={
                                          Object {
                                            "big": "TypographyComp-big-0-3-7",
                                            "bold": "TypographyComp-bold-0-3-1",
                                            "capitalize": "TypographyComp-capitalize-0-3-12",
                                            "distance": "TypographyComp-distance-0-3-6",
                                            "ellipsis": "TypographyComp-ellipsis-0-3-14",
                                            "giant": "TypographyComp-giant-0-3-9",
                                            "heading": "TypographyComp-heading-0-3-8",
                                            "italic": "TypographyComp-italic-0-3-3",
                                            "lowercase": "TypographyComp-lowercase-0-3-11",
                                            "noWrap": "TypographyComp-noWrap-0-3-13",
                                            "semiBold": "TypographyComp-semiBold-0-3-2",
                                            "standard": "TypographyComp-standard-0-3-5",
                                            "subtext": "TypographyComp-subtext-0-3-4",
                                            "uppercase": "TypographyComp-uppercase-0-3-10",
                                          }
                                        }
                                        textTransform="uppercase"
                                        variant="standard"
                                      >
                                        <span
                                          className="TypographyComp-standard-0-3-5 TypographyComp-uppercase-0-3-10 TypographyComp-bold-0-3-1"
                                        >
                                          Confirm
                                        </span>
                                      </TypographyComp>
                                    </WithStyles(TypographyComp)>
                                  </Typography>
                                </div>
                              </div>
                            </div>
                          </TouchRippleComp>
                        </WithStyles(TouchRippleComp)>
                      </TouchRipple>
                    </ButtonComp>
                  </WithStyles(ButtonComp)>
                </Button>
              </div>
              <div
                className="FooterWithDoubleConfirmationComp-confirmation-0-3-132"
              >
                <Typography
                  bold={true}
                  variant="distance"
                >
                  <WithStyles(TypographyComp)
                    bold={true}
                    innerRef={null}
                    jssContext={
                      Object {
                        "classNamePrefix": "",
                        "disableStylesGeneration": false,
                      }
                    }
                    theme={Object {}}
                    variant="distance"
                  >
                    <TypographyComp
                      bold={true}
                      classes={
                        Object {
                          "big": "TypographyComp-big-0-3-7",
                          "bold": "TypographyComp-bold-0-3-1",
                          "capitalize": "TypographyComp-capitalize-0-3-12",
                          "distance": "TypographyComp-distance-0-3-6",
                          "ellipsis": "TypographyComp-ellipsis-0-3-14",
                          "giant": "TypographyComp-giant-0-3-9",
                          "heading": "TypographyComp-heading-0-3-8",
                          "italic": "TypographyComp-italic-0-3-3",
                          "lowercase": "TypographyComp-lowercase-0-3-11",
                          "noWrap": "TypographyComp-noWrap-0-3-13",
                          "semiBold": "TypographyComp-semiBold-0-3-2",
                          "standard": "TypographyComp-standard-0-3-5",
                          "subtext": "TypographyComp-subtext-0-3-4",
                          "uppercase": "TypographyComp-uppercase-0-3-10",
                        }
                      }
                      variant="distance"
                    >
                      <span
                        className="TypographyComp-distance-0-3-6 TypographyComp-bold-0-3-1"
                      >
                        Message
                      </span>
                    </TypographyComp>
                  </WithStyles(TypographyComp)>
                </Typography>
                <Button
                  color="grey"
                  onClick={[Function]}
                  text="No"
                  variant="raised"
                >
                  <WithStyles(ButtonComp)
                    color="grey"
                    innerRef={null}
                    jssContext={
                      Object {
                        "classNamePrefix": "",
                        "disableStylesGeneration": false,
                      }
                    }
                    onClick={[Function]}
                    text="No"
                    theme={Object {}}
                    variant="raised"
                  >
                    <ButtonComp
                      classes={
                        Object {
                          "centered": "ButtonComp-centered-0-3-19",
                          "disabled": "ButtonComp-disabled-0-3-32",
                          "flat": "ButtonComp-flat-0-3-17",
                          "fullWidth": "ButtonComp-fullWidth-0-3-31",
                          "green": "ButtonComp-green-0-3-23",
                          "grey": "ButtonComp-grey-0-3-21",
                          "icon": "ButtonComp-icon-0-3-16",
                          "neutral": "ButtonComp-neutral-0-3-22",
                          "orange": "ButtonComp-orange-0-3-24",
                          "primary": "ButtonComp-primary-0-3-20",
                          "raised": "ButtonComp-raised-0-3-18",
                          "red": "ButtonComp-red-0-3-26",
                          "root": "ButtonComp-root-0-3-15",
                          "shadow": "ButtonComp-shadow-0-3-28",
                          "text": "ButtonComp-text-0-3-29",
                          "textIcon": "ButtonComp-textIcon-0-3-30",
                          "transparent": "ButtonComp-transparent-0-3-27",
                          "yellow": "ButtonComp-yellow-0-3-25",
                        }
                      }
                      color="grey"
                      onClick={[Function]}
                      text="No"
                      variant="raised"
                    >
                      <TouchRipple
                        className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
                        disabled={false}
                        onClick={[Function]}
                      >
                        <WithStyles(TouchRippleComp)
                          className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
                          disabled={false}
                          innerRef={null}
                          jssContext={
                            Object {
                              "classNamePrefix": "",
                              "disableStylesGeneration": false,
                            }
                          }
                          onClick={[Function]}
                          theme={Object {}}
                        >
                          <TouchRippleComp
                            className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
                            classes={
                              Object {
                                "disabled": "TouchRippleComp-disabled-0-3-34",
                                "root": "TouchRippleComp-root-0-3-33",
                              }
                            }
                            disabled={false}
                            onClick={[Function]}
                          >
                            <div
                              className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28 TouchRippleComp-root-0-3-33"
                              onClick={[Function]}
                            >
                              <div
                                className="ButtonComp-raised-0-3-18 ButtonComp-grey-0-3-21"
                              >
                                <div
                                  className="ButtonComp-text-0-3-29"
                                >
                                  <Typography
                                    bold={true}
                                    textTransform="uppercase"
                                    variant="standard"
                                  >
                                    <WithStyles(TypographyComp)
                                      bold={true}
                                      innerRef={null}
                                      jssContext={
                                        Object {
                                          "classNamePrefix": "",
                                          "disableStylesGeneration": false,
                                        }
                                      }
                                      textTransform="uppercase"
                                      theme={Object {}}
                                      variant="standard"
                                    >
                                      <TypographyComp
                                        bold={true}
                                        classes={
                                          Object {
                                            "big": "TypographyComp-big-0-3-7",
                                            "bold": "TypographyComp-bold-0-3-1",
                                            "capitalize": "TypographyComp-capitalize-0-3-12",
                                            "distance": "TypographyComp-distance-0-3-6",
                                            "ellipsis": "TypographyComp-ellipsis-0-3-14",
                                            "giant": "TypographyComp-giant-0-3-9",
                                            "heading": "TypographyComp-heading-0-3-8",
                                            "italic": "TypographyComp-italic-0-3-3",
                                            "lowercase": "TypographyComp-lowercase-0-3-11",
                                            "noWrap": "TypographyComp-noWrap-0-3-13",
                                            "semiBold": "TypographyComp-semiBold-0-3-2",
                                            "standard": "TypographyComp-standard-0-3-5",
                                            "subtext": "TypographyComp-subtext-0-3-4",
                                            "uppercase": "TypographyComp-uppercase-0-3-10",
                                          }
                                        }
                                        textTransform="uppercase"
                                        variant="standard"
                                      >
                                        <span
                                          className="TypographyComp-standard-0-3-5 TypographyComp-uppercase-0-3-10 TypographyComp-bold-0-3-1"
                                        >
                                          No
                                        </span>
                                      </TypographyComp>
                                    </WithStyles(TypographyComp)>
                                  </Typography>
                                </div>
                              </div>
                            </div>
                          </TouchRippleComp>
                        </WithStyles(TouchRippleComp)>
                      </TouchRipple>
                    </ButtonComp>
                  </WithStyles(ButtonComp)>
                </Button>
                <Button
                  color="grey"
                  onClick={[Function]}
                  text="Yes"
                  variant="raised"
                >
                  <WithStyles(ButtonComp)
                    color="grey"
                    innerRef={null}
                    jssContext={
                      Object {
                        "classNamePrefix": "",
                        "disableStylesGeneration": false,
                      }
                    }
                    onClick={[Function]}
                    text="Yes"
                    theme={Object {}}
                    variant="raised"
                  >
                    <ButtonComp
                      classes={
                        Object {
                          "centered": "ButtonComp-centered-0-3-19",
                          "disabled": "ButtonComp-disabled-0-3-32",
                          "flat": "ButtonComp-flat-0-3-17",
                          "fullWidth": "ButtonComp-fullWidth-0-3-31",
                          "green": "ButtonComp-green-0-3-23",
                          "grey": "ButtonComp-grey-0-3-21",
                          "icon": "ButtonComp-icon-0-3-16",
                          "neutral": "ButtonComp-neutral-0-3-22",
                          "orange": "ButtonComp-orange-0-3-24",
                          "primary": "ButtonComp-primary-0-3-20",
                          "raised": "ButtonComp-raised-0-3-18",
                          "red": "ButtonComp-red-0-3-26",
                          "root": "ButtonComp-root-0-3-15",
                          "shadow": "ButtonComp-shadow-0-3-28",
                          "text": "ButtonComp-text-0-3-29",
                          "textIcon": "ButtonComp-textIcon-0-3-30",
                          "transparent": "ButtonComp-transparent-0-3-27",
                          "yellow": "ButtonComp-yellow-0-3-25",
                        }
                      }
                      color="grey"
                      onClick={[Function]}
                      text="Yes"
                      variant="raised"
                    >
                      <TouchRipple
                        className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
                        disabled={false}
                        onClick={[Function]}
                      >
                        <WithStyles(TouchRippleComp)
                          className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
                          disabled={false}
                          innerRef={null}
                          jssContext={
                            Object {
                              "classNamePrefix": "",
                              "disableStylesGeneration": false,
                            }
                          }
                          onClick={[Function]}
                          theme={Object {}}
                        >
                          <TouchRippleComp
                            className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
                            classes={
                              Object {
                                "disabled": "TouchRippleComp-disabled-0-3-34",
                                "root": "TouchRippleComp-root-0-3-33",
                              }
                            }
                            disabled={false}
                            onClick={[Function]}
                          >
                            <div
                              className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28 TouchRippleComp-root-0-3-33"
                              onClick={[Function]}
                            >
                              <div
                                className="ButtonComp-raised-0-3-18 ButtonComp-grey-0-3-21"
                              >
                                <div
                                  className="ButtonComp-text-0-3-29"
                                >
                                  <Typography
                                    bold={true}
                                    textTransform="uppercase"
                                    variant="standard"
                                  >
                                    <WithStyles(TypographyComp)
                                      bold={true}
                                      innerRef={null}
                                      jssContext={
                                        Object {
                                          "classNamePrefix": "",
                                          "disableStylesGeneration": false,
                                        }
                                      }
                                      textTransform="uppercase"
                                      theme={Object {}}
                                      variant="standard"
                                    >
                                      <TypographyComp
                                        bold={true}
                                        classes={
                                          Object {
                                            "big": "TypographyComp-big-0-3-7",
                                            "bold": "TypographyComp-bold-0-3-1",
                                            "capitalize": "TypographyComp-capitalize-0-3-12",
                                            "distance": "TypographyComp-distance-0-3-6",
                                            "ellipsis": "TypographyComp-ellipsis-0-3-14",
                                            "giant": "TypographyComp-giant-0-3-9",
                                            "heading": "TypographyComp-heading-0-3-8",
                                            "italic": "TypographyComp-italic-0-3-3",
                                            "lowercase": "TypographyComp-lowercase-0-3-11",
                                            "noWrap": "TypographyComp-noWrap-0-3-13",
                                            "semiBold": "TypographyComp-semiBold-0-3-2",
                                            "standard": "TypographyComp-standard-0-3-5",
                                            "subtext": "TypographyComp-subtext-0-3-4",
                                            "uppercase": "TypographyComp-uppercase-0-3-10",
                                          }
                                        }
                                        textTransform="uppercase"
                                        variant="standard"
                                      >
                                        <span
                                          className="TypographyComp-standard-0-3-5 TypographyComp-uppercase-0-3-10 TypographyComp-bold-0-3-1"
                                        >
                                          Yes
                                        </span>
                                      </TypographyComp>
                                    </WithStyles(TypographyComp)>
                                  </Typography>
                                </div>
                              </div>
                            </div>
                          </TouchRippleComp>
                        </WithStyles(TouchRippleComp)>
                      </TouchRipple>
                    </ButtonComp>
                  </WithStyles(ButtonComp)>
                </Button>
              </div>
            </div>
          </Transition>
        </div>
      </FooterWithDoubleConfirmationComp>
    </WithStyles(FooterWithDoubleConfirmationComp)>
  </FooterWithDoubleConfirmation>
</AnimationWrapper>
`;

exports[`Storyshots Components/Dialog/FooterWithDoubleConfirmation Confirm no valid 1`] = `
<FooterWithDoubleConfirmation
  cancelMessage="Cancel"
  confirmMessage="Confirm"
  message="Message"
  mode="normal"
  noMessage="No"
  onCancel={[Function]}
  onConfirm={[Function]}
  onSelectNo={[Function]}
  onSelectYes={[Function]}
  valid={false}
  yesMessage="Yes"
>
  <WithStyles(FooterWithDoubleConfirmationComp)
    cancelMessage="Cancel"
    confirmMessage="Confirm"
    innerRef={null}
    jssContext={
      Object {
        "classNamePrefix": "",
        "disableStylesGeneration": false,
      }
    }
    message="Message"
    mode="normal"
    noMessage="No"
    onCancel={[Function]}
    onConfirm={[Function]}
    onSelectNo={[Function]}
    onSelectYes={[Function]}
    theme={Object {}}
    valid={false}
    yesMessage="Yes"
  >
    <FooterWithDoubleConfirmationComp
      cancelMessage="Cancel"
      classes={
        Object {
          "confirm": "FooterWithDoubleConfirmationComp-confirm-0-3-131",
          "confirmation": "FooterWithDoubleConfirmationComp-confirmation-0-3-132",
          "content": "FooterWithDoubleConfirmationComp-content-0-3-130",
          "root": "FooterWithDoubleConfirmationComp-root-0-3-129",
        }
      }
      confirmMessage="Confirm"
      message="Message"
      mode="normal"
      noMessage="No"
      onCancel={[Function]}
      onConfirm={[Function]}
      onSelectNo={[Function]}
      onSelectYes={[Function]}
      valid={false}
      yesMessage="Yes"
    >
      <div
        className="FooterWithDoubleConfirmationComp-root-0-3-129"
      >
        <Transition
          appear={false}
          enter={true}
          exit={true}
          in={false}
          mountOnEnter={false}
          onEnter={[Function]}
          onEntered={[Function]}
          onEntering={[Function]}
          onExit={[Function]}
          onExited={[Function]}
          onExiting={[Function]}
          timeout={150}
          unmountOnExit={false}
        >
          <div
            className="FooterWithDoubleConfirmationComp-content-0-3-130"
            style={
              Object {
                "transition": "transform 150ms ease-in-out",
              }
            }
          >
            <div
              className="FooterWithDoubleConfirmationComp-confirm-0-3-131"
            >
              <Button
                color="transparent"
                onClick={[Function]}
                text="Cancel"
                variant="flat"
              >
                <WithStyles(ButtonComp)
                  color="transparent"
                  innerRef={null}
                  jssContext={
                    Object {
                      "classNamePrefix": "",
                      "disableStylesGeneration": false,
                    }
                  }
                  onClick={[Function]}
                  text="Cancel"
                  theme={Object {}}
                  variant="flat"
                >
                  <ButtonComp
                    classes={
                      Object {
                        "centered": "ButtonComp-centered-0-3-19",
                        "disabled": "ButtonComp-disabled-0-3-32",
                        "flat": "ButtonComp-flat-0-3-17",
                        "fullWidth": "ButtonComp-fullWidth-0-3-31",
                        "green": "ButtonComp-green-0-3-23",
                        "grey": "ButtonComp-grey-0-3-21",
                        "icon": "ButtonComp-icon-0-3-16",
                        "neutral": "ButtonComp-neutral-0-3-22",
                        "orange": "ButtonComp-orange-0-3-24",
                        "primary": "ButtonComp-primary-0-3-20",
                        "raised": "ButtonComp-raised-0-3-18",
                        "red": "ButtonComp-red-0-3-26",
                        "root": "ButtonComp-root-0-3-15",
                        "shadow": "ButtonComp-shadow-0-3-28",
                        "text": "ButtonComp-text-0-3-29",
                        "textIcon": "ButtonComp-textIcon-0-3-30",
                        "transparent": "ButtonComp-transparent-0-3-27",
                        "yellow": "ButtonComp-yellow-0-3-25",
                      }
                    }
                    color="transparent"
                    onClick={[Function]}
                    text="Cancel"
                    variant="flat"
                  >
                    <TouchRipple
                      className="ButtonComp-root-0-3-15"
                      disabled={false}
                      onClick={[Function]}
                    >
                      <WithStyles(TouchRippleComp)
                        className="ButtonComp-root-0-3-15"
                        disabled={false}
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        onClick={[Function]}
                        theme={Object {}}
                      >
                        <TouchRippleComp
                          className="ButtonComp-root-0-3-15"
                          classes={
                            Object {
                              "disabled": "TouchRippleComp-disabled-0-3-34",
                              "root": "TouchRippleComp-root-0-3-33",
                            }
                          }
                          disabled={false}
                          onClick={[Function]}
                        >
                          <div
                            className="ButtonComp-root-0-3-15 TouchRippleComp-root-0-3-33"
                            onClick={[Function]}
                          >
                            <div
                              className="ButtonComp-flat-0-3-17 ButtonComp-transparent-0-3-27"
                            >
                              <div
                                className="ButtonComp-text-0-3-29"
                              >
                                <Typography
                                  bold={true}
                                  textTransform="uppercase"
                                  variant="standard"
                                >
                                  <WithStyles(TypographyComp)
                                    bold={true}
                                    innerRef={null}
                                    jssContext={
                                      Object {
                                        "classNamePrefix": "",
                                        "disableStylesGeneration": false,
                                      }
                                    }
                                    textTransform="uppercase"
                                    theme={Object {}}
                                    variant="standard"
                                  >
                                    <TypographyComp
                                      bold={true}
                                      classes={
                                        Object {
                                          "big": "TypographyComp-big-0-3-7",
                                          "bold": "TypographyComp-bold-0-3-1",
                                          "capitalize": "TypographyComp-capitalize-0-3-12",
                                          "distance": "TypographyComp-distance-0-3-6",
                                          "ellipsis": "TypographyComp-ellipsis-0-3-14",
                                          "giant": "TypographyComp-giant-0-3-9",
                                          "heading": "TypographyComp-heading-0-3-8",
                                          "italic": "TypographyComp-italic-0-3-3",
                                          "lowercase": "TypographyComp-lowercase-0-3-11",
                                          "noWrap": "TypographyComp-noWrap-0-3-13",
                                          "semiBold": "TypographyComp-semiBold-0-3-2",
                                          "standard": "TypographyComp-standard-0-3-5",
                                          "subtext": "TypographyComp-subtext-0-3-4",
                                          "uppercase": "TypographyComp-uppercase-0-3-10",
                                        }
                                      }
                                      textTransform="uppercase"
                                      variant="standard"
                                    >
                                      <span
                                        className="TypographyComp-standard-0-3-5 TypographyComp-uppercase-0-3-10 TypographyComp-bold-0-3-1"
                                      >
                                        Cancel
                                      </span>
                                    </TypographyComp>
                                  </WithStyles(TypographyComp)>
                                </Typography>
                              </div>
                            </div>
                          </div>
                        </TouchRippleComp>
                      </WithStyles(TouchRippleComp)>
                    </TouchRipple>
                  </ButtonComp>
                </WithStyles(ButtonComp)>
              </Button>
              <Button
                color="primary"
                disabled={true}
                onClick={[Function]}
                text="Confirm"
                variant="raised"
              >
                <WithStyles(ButtonComp)
                  color="primary"
                  disabled={true}
                  innerRef={null}
                  jssContext={
                    Object {
                      "classNamePrefix": "",
                      "disableStylesGeneration": false,
                    }
                  }
                  onClick={[Function]}
                  text="Confirm"
                  theme={Object {}}
                  variant="raised"
                >
                  <ButtonComp
                    classes={
                      Object {
                        "centered": "ButtonComp-centered-0-3-19",
                        "disabled": "ButtonComp-disabled-0-3-32",
                        "flat": "ButtonComp-flat-0-3-17",
                        "fullWidth": "ButtonComp-fullWidth-0-3-31",
                        "green": "ButtonComp-green-0-3-23",
                        "grey": "ButtonComp-grey-0-3-21",
                        "icon": "ButtonComp-icon-0-3-16",
                        "neutral": "ButtonComp-neutral-0-3-22",
                        "orange": "ButtonComp-orange-0-3-24",
                        "primary": "ButtonComp-primary-0-3-20",
                        "raised": "ButtonComp-raised-0-3-18",
                        "red": "ButtonComp-red-0-3-26",
                        "root": "ButtonComp-root-0-3-15",
                        "shadow": "ButtonComp-shadow-0-3-28",
                        "text": "ButtonComp-text-0-3-29",
                        "textIcon": "ButtonComp-textIcon-0-3-30",
                        "transparent": "ButtonComp-transparent-0-3-27",
                        "yellow": "ButtonComp-yellow-0-3-25",
                      }
                    }
                    color="primary"
                    disabled={true}
                    onClick={[Function]}
                    text="Confirm"
                    variant="raised"
                  >
                    <TouchRipple
                      className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28 ButtonComp-disabled-0-3-32"
                      disabled={true}
                      onClick={[Function]}
                    >
                      <WithStyles(TouchRippleComp)
                        className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28 ButtonComp-disabled-0-3-32"
                        disabled={true}
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        onClick={[Function]}
                        theme={Object {}}
                      >
                        <TouchRippleComp
                          className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28 ButtonComp-disabled-0-3-32"
                          classes={
                            Object {
                              "disabled": "TouchRippleComp-disabled-0-3-34",
                              "root": "TouchRippleComp-root-0-3-33",
                            }
                          }
                          disabled={true}
                          onClick={[Function]}
                        >
                          <div
                            className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28 ButtonComp-disabled-0-3-32 TouchRippleComp-disabled-0-3-34"
                          >
                            <div
                              className="ButtonComp-raised-0-3-18 ButtonComp-primary-0-3-20"
                            >
                              <div
                                className="ButtonComp-text-0-3-29"
                              >
                                <Typography
                                  bold={true}
                                  textTransform="uppercase"
                                  variant="standard"
                                >
                                  <WithStyles(TypographyComp)
                                    bold={true}
                                    innerRef={null}
                                    jssContext={
                                      Object {
                                        "classNamePrefix": "",
                                        "disableStylesGeneration": false,
                                      }
                                    }
                                    textTransform="uppercase"
                                    theme={Object {}}
                                    variant="standard"
                                  >
                                    <TypographyComp
                                      bold={true}
                                      classes={
                                        Object {
                                          "big": "TypographyComp-big-0-3-7",
                                          "bold": "TypographyComp-bold-0-3-1",
                                          "capitalize": "TypographyComp-capitalize-0-3-12",
                                          "distance": "TypographyComp-distance-0-3-6",
                                          "ellipsis": "TypographyComp-ellipsis-0-3-14",
                                          "giant": "TypographyComp-giant-0-3-9",
                                          "heading": "TypographyComp-heading-0-3-8",
                                          "italic": "TypographyComp-italic-0-3-3",
                                          "lowercase": "TypographyComp-lowercase-0-3-11",
                                          "noWrap": "TypographyComp-noWrap-0-3-13",
                                          "semiBold": "TypographyComp-semiBold-0-3-2",
                                          "standard": "TypographyComp-standard-0-3-5",
                                          "subtext": "TypographyComp-subtext-0-3-4",
                                          "uppercase": "TypographyComp-uppercase-0-3-10",
                                        }
                                      }
                                      textTransform="uppercase"
                                      variant="standard"
                                    >
                                      <span
                                        className="TypographyComp-standard-0-3-5 TypographyComp-uppercase-0-3-10 TypographyComp-bold-0-3-1"
                                      >
                                        Confirm
                                      </span>
                                    </TypographyComp>
                                  </WithStyles(TypographyComp)>
                                </Typography>
                              </div>
                            </div>
                          </div>
                        </TouchRippleComp>
                      </WithStyles(TouchRippleComp)>
                    </TouchRipple>
                  </ButtonComp>
                </WithStyles(ButtonComp)>
              </Button>
            </div>
            <div
              className="FooterWithDoubleConfirmationComp-confirmation-0-3-132"
            >
              <Typography
                bold={true}
                variant="distance"
              >
                <WithStyles(TypographyComp)
                  bold={true}
                  innerRef={null}
                  jssContext={
                    Object {
                      "classNamePrefix": "",
                      "disableStylesGeneration": false,
                    }
                  }
                  theme={Object {}}
                  variant="distance"
                >
                  <TypographyComp
                    bold={true}
                    classes={
                      Object {
                        "big": "TypographyComp-big-0-3-7",
                        "bold": "TypographyComp-bold-0-3-1",
                        "capitalize": "TypographyComp-capitalize-0-3-12",
                        "distance": "TypographyComp-distance-0-3-6",
                        "ellipsis": "TypographyComp-ellipsis-0-3-14",
                        "giant": "TypographyComp-giant-0-3-9",
                        "heading": "TypographyComp-heading-0-3-8",
                        "italic": "TypographyComp-italic-0-3-3",
                        "lowercase": "TypographyComp-lowercase-0-3-11",
                        "noWrap": "TypographyComp-noWrap-0-3-13",
                        "semiBold": "TypographyComp-semiBold-0-3-2",
                        "standard": "TypographyComp-standard-0-3-5",
                        "subtext": "TypographyComp-subtext-0-3-4",
                        "uppercase": "TypographyComp-uppercase-0-3-10",
                      }
                    }
                    variant="distance"
                  >
                    <span
                      className="TypographyComp-distance-0-3-6 TypographyComp-bold-0-3-1"
                    >
                      Message
                    </span>
                  </TypographyComp>
                </WithStyles(TypographyComp)>
              </Typography>
              <Button
                color="grey"
                onClick={[Function]}
                text="No"
                variant="raised"
              >
                <WithStyles(ButtonComp)
                  color="grey"
                  innerRef={null}
                  jssContext={
                    Object {
                      "classNamePrefix": "",
                      "disableStylesGeneration": false,
                    }
                  }
                  onClick={[Function]}
                  text="No"
                  theme={Object {}}
                  variant="raised"
                >
                  <ButtonComp
                    classes={
                      Object {
                        "centered": "ButtonComp-centered-0-3-19",
                        "disabled": "ButtonComp-disabled-0-3-32",
                        "flat": "ButtonComp-flat-0-3-17",
                        "fullWidth": "ButtonComp-fullWidth-0-3-31",
                        "green": "ButtonComp-green-0-3-23",
                        "grey": "ButtonComp-grey-0-3-21",
                        "icon": "ButtonComp-icon-0-3-16",
                        "neutral": "ButtonComp-neutral-0-3-22",
                        "orange": "ButtonComp-orange-0-3-24",
                        "primary": "ButtonComp-primary-0-3-20",
                        "raised": "ButtonComp-raised-0-3-18",
                        "red": "ButtonComp-red-0-3-26",
                        "root": "ButtonComp-root-0-3-15",
                        "shadow": "ButtonComp-shadow-0-3-28",
                        "text": "ButtonComp-text-0-3-29",
                        "textIcon": "ButtonComp-textIcon-0-3-30",
                        "transparent": "ButtonComp-transparent-0-3-27",
                        "yellow": "ButtonComp-yellow-0-3-25",
                      }
                    }
                    color="grey"
                    onClick={[Function]}
                    text="No"
                    variant="raised"
                  >
                    <TouchRipple
                      className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
                      disabled={false}
                      onClick={[Function]}
                    >
                      <WithStyles(TouchRippleComp)
                        className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
                        disabled={false}
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        onClick={[Function]}
                        theme={Object {}}
                      >
                        <TouchRippleComp
                          className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
                          classes={
                            Object {
                              "disabled": "TouchRippleComp-disabled-0-3-34",
                              "root": "TouchRippleComp-root-0-3-33",
                            }
                          }
                          disabled={false}
                          onClick={[Function]}
                        >
                          <div
                            className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28 TouchRippleComp-root-0-3-33"
                            onClick={[Function]}
                          >
                            <div
                              className="ButtonComp-raised-0-3-18 ButtonComp-grey-0-3-21"
                            >
                              <div
                                className="ButtonComp-text-0-3-29"
                              >
                                <Typography
                                  bold={true}
                                  textTransform="uppercase"
                                  variant="standard"
                                >
                                  <WithStyles(TypographyComp)
                                    bold={true}
                                    innerRef={null}
                                    jssContext={
                                      Object {
                                        "classNamePrefix": "",
                                        "disableStylesGeneration": false,
                                      }
                                    }
                                    textTransform="uppercase"
                                    theme={Object {}}
                                    variant="standard"
                                  >
                                    <TypographyComp
                                      bold={true}
                                      classes={
                                        Object {
                                          "big": "TypographyComp-big-0-3-7",
                                          "bold": "TypographyComp-bold-0-3-1",
                                          "capitalize": "TypographyComp-capitalize-0-3-12",
                                          "distance": "TypographyComp-distance-0-3-6",
                                          "ellipsis": "TypographyComp-ellipsis-0-3-14",
                                          "giant": "TypographyComp-giant-0-3-9",
                                          "heading": "TypographyComp-heading-0-3-8",
                                          "italic": "TypographyComp-italic-0-3-3",
                                          "lowercase": "TypographyComp-lowercase-0-3-11",
                                          "noWrap": "TypographyComp-noWrap-0-3-13",
                                          "semiBold": "TypographyComp-semiBold-0-3-2",
                                          "standard": "TypographyComp-standard-0-3-5",
                                          "subtext": "TypographyComp-subtext-0-3-4",
                                          "uppercase": "TypographyComp-uppercase-0-3-10",
                                        }
                                      }
                                      textTransform="uppercase"
                                      variant="standard"
                                    >
                                      <span
                                        className="TypographyComp-standard-0-3-5 TypographyComp-uppercase-0-3-10 TypographyComp-bold-0-3-1"
                                      >
                                        No
                                      </span>
                                    </TypographyComp>
                                  </WithStyles(TypographyComp)>
                                </Typography>
                              </div>
                            </div>
                          </div>
                        </TouchRippleComp>
                      </WithStyles(TouchRippleComp)>
                    </TouchRipple>
                  </ButtonComp>
                </WithStyles(ButtonComp)>
              </Button>
              <Button
                color="grey"
                onClick={[Function]}
                text="Yes"
                variant="raised"
              >
                <WithStyles(ButtonComp)
                  color="grey"
                  innerRef={null}
                  jssContext={
                    Object {
                      "classNamePrefix": "",
                      "disableStylesGeneration": false,
                    }
                  }
                  onClick={[Function]}
                  text="Yes"
                  theme={Object {}}
                  variant="raised"
                >
                  <ButtonComp
                    classes={
                      Object {
                        "centered": "ButtonComp-centered-0-3-19",
                        "disabled": "ButtonComp-disabled-0-3-32",
                        "flat": "ButtonComp-flat-0-3-17",
                        "fullWidth": "ButtonComp-fullWidth-0-3-31",
                        "green": "ButtonComp-green-0-3-23",
                        "grey": "ButtonComp-grey-0-3-21",
                        "icon": "ButtonComp-icon-0-3-16",
                        "neutral": "ButtonComp-neutral-0-3-22",
                        "orange": "ButtonComp-orange-0-3-24",
                        "primary": "ButtonComp-primary-0-3-20",
                        "raised": "ButtonComp-raised-0-3-18",
                        "red": "ButtonComp-red-0-3-26",
                        "root": "ButtonComp-root-0-3-15",
                        "shadow": "ButtonComp-shadow-0-3-28",
                        "text": "ButtonComp-text-0-3-29",
                        "textIcon": "ButtonComp-textIcon-0-3-30",
                        "transparent": "ButtonComp-transparent-0-3-27",
                        "yellow": "ButtonComp-yellow-0-3-25",
                      }
                    }
                    color="grey"
                    onClick={[Function]}
                    text="Yes"
                    variant="raised"
                  >
                    <TouchRipple
                      className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
                      disabled={false}
                      onClick={[Function]}
                    >
                      <WithStyles(TouchRippleComp)
                        className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
                        disabled={false}
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        onClick={[Function]}
                        theme={Object {}}
                      >
                        <TouchRippleComp
                          className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
                          classes={
                            Object {
                              "disabled": "TouchRippleComp-disabled-0-3-34",
                              "root": "TouchRippleComp-root-0-3-33",
                            }
                          }
                          disabled={false}
                          onClick={[Function]}
                        >
                          <div
                            className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28 TouchRippleComp-root-0-3-33"
                            onClick={[Function]}
                          >
                            <div
                              className="ButtonComp-raised-0-3-18 ButtonComp-grey-0-3-21"
                            >
                              <div
                                className="ButtonComp-text-0-3-29"
                              >
                                <Typography
                                  bold={true}
                                  textTransform="uppercase"
                                  variant="standard"
                                >
                                  <WithStyles(TypographyComp)
                                    bold={true}
                                    innerRef={null}
                                    jssContext={
                                      Object {
                                        "classNamePrefix": "",
                                        "disableStylesGeneration": false,
                                      }
                                    }
                                    textTransform="uppercase"
                                    theme={Object {}}
                                    variant="standard"
                                  >
                                    <TypographyComp
                                      bold={true}
                                      classes={
                                        Object {
                                          "big": "TypographyComp-big-0-3-7",
                                          "bold": "TypographyComp-bold-0-3-1",
                                          "capitalize": "TypographyComp-capitalize-0-3-12",
                                          "distance": "TypographyComp-distance-0-3-6",
                                          "ellipsis": "TypographyComp-ellipsis-0-3-14",
                                          "giant": "TypographyComp-giant-0-3-9",
                                          "heading": "TypographyComp-heading-0-3-8",
                                          "italic": "TypographyComp-italic-0-3-3",
                                          "lowercase": "TypographyComp-lowercase-0-3-11",
                                          "noWrap": "TypographyComp-noWrap-0-3-13",
                                          "semiBold": "TypographyComp-semiBold-0-3-2",
                                          "standard": "TypographyComp-standard-0-3-5",
                                          "subtext": "TypographyComp-subtext-0-3-4",
                                          "uppercase": "TypographyComp-uppercase-0-3-10",
                                        }
                                      }
                                      textTransform="uppercase"
                                      variant="standard"
                                    >
                                      <span
                                        className="TypographyComp-standard-0-3-5 TypographyComp-uppercase-0-3-10 TypographyComp-bold-0-3-1"
                                      >
                                        Yes
                                      </span>
                                    </TypographyComp>
                                  </WithStyles(TypographyComp)>
                                </Typography>
                              </div>
                            </div>
                          </div>
                        </TouchRippleComp>
                      </WithStyles(TouchRippleComp)>
                    </TouchRipple>
                  </ButtonComp>
                </WithStyles(ButtonComp)>
              </Button>
            </div>
          </div>
        </Transition>
      </div>
    </FooterWithDoubleConfirmationComp>
  </WithStyles(FooterWithDoubleConfirmationComp)>
</FooterWithDoubleConfirmation>
`;

exports[`Storyshots Components/Dialog/FooterWithDoubleConfirmation Confirm valid 1`] = `
<FooterWithDoubleConfirmation
  cancelMessage="Cancel"
  confirmMessage="Confirm"
  message="Message"
  mode="normal"
  noMessage="No"
  onCancel={[Function]}
  onConfirm={[Function]}
  onSelectNo={[Function]}
  onSelectYes={[Function]}
  valid={true}
  yesMessage="Yes"
>
  <WithStyles(FooterWithDoubleConfirmationComp)
    cancelMessage="Cancel"
    confirmMessage="Confirm"
    innerRef={null}
    jssContext={
      Object {
        "classNamePrefix": "",
        "disableStylesGeneration": false,
      }
    }
    message="Message"
    mode="normal"
    noMessage="No"
    onCancel={[Function]}
    onConfirm={[Function]}
    onSelectNo={[Function]}
    onSelectYes={[Function]}
    theme={Object {}}
    valid={true}
    yesMessage="Yes"
  >
    <FooterWithDoubleConfirmationComp
      cancelMessage="Cancel"
      classes={
        Object {
          "confirm": "FooterWithDoubleConfirmationComp-confirm-0-3-131",
          "confirmation": "FooterWithDoubleConfirmationComp-confirmation-0-3-132",
          "content": "FooterWithDoubleConfirmationComp-content-0-3-130",
          "root": "FooterWithDoubleConfirmationComp-root-0-3-129",
        }
      }
      confirmMessage="Confirm"
      message="Message"
      mode="normal"
      noMessage="No"
      onCancel={[Function]}
      onConfirm={[Function]}
      onSelectNo={[Function]}
      onSelectYes={[Function]}
      valid={true}
      yesMessage="Yes"
    >
      <div
        className="FooterWithDoubleConfirmationComp-root-0-3-129"
      >
        <Transition
          appear={false}
          enter={true}
          exit={true}
          in={false}
          mountOnEnter={false}
          onEnter={[Function]}
          onEntered={[Function]}
          onEntering={[Function]}
          onExit={[Function]}
          onExited={[Function]}
          onExiting={[Function]}
          timeout={150}
          unmountOnExit={false}
        >
          <div
            className="FooterWithDoubleConfirmationComp-content-0-3-130"
            style={
              Object {
                "transition": "transform 150ms ease-in-out",
              }
            }
          >
            <div
              className="FooterWithDoubleConfirmationComp-confirm-0-3-131"
            >
              <Button
                color="transparent"
                onClick={[Function]}
                text="Cancel"
                variant="flat"
              >
                <WithStyles(ButtonComp)
                  color="transparent"
                  innerRef={null}
                  jssContext={
                    Object {
                      "classNamePrefix": "",
                      "disableStylesGeneration": false,
                    }
                  }
                  onClick={[Function]}
                  text="Cancel"
                  theme={Object {}}
                  variant="flat"
                >
                  <ButtonComp
                    classes={
                      Object {
                        "centered": "ButtonComp-centered-0-3-19",
                        "disabled": "ButtonComp-disabled-0-3-32",
                        "flat": "ButtonComp-flat-0-3-17",
                        "fullWidth": "ButtonComp-fullWidth-0-3-31",
                        "green": "ButtonComp-green-0-3-23",
                        "grey": "ButtonComp-grey-0-3-21",
                        "icon": "ButtonComp-icon-0-3-16",
                        "neutral": "ButtonComp-neutral-0-3-22",
                        "orange": "ButtonComp-orange-0-3-24",
                        "primary": "ButtonComp-primary-0-3-20",
                        "raised": "ButtonComp-raised-0-3-18",
                        "red": "ButtonComp-red-0-3-26",
                        "root": "ButtonComp-root-0-3-15",
                        "shadow": "ButtonComp-shadow-0-3-28",
                        "text": "ButtonComp-text-0-3-29",
                        "textIcon": "ButtonComp-textIcon-0-3-30",
                        "transparent": "ButtonComp-transparent-0-3-27",
                        "yellow": "ButtonComp-yellow-0-3-25",
                      }
                    }
                    color="transparent"
                    onClick={[Function]}
                    text="Cancel"
                    variant="flat"
                  >
                    <TouchRipple
                      className="ButtonComp-root-0-3-15"
                      disabled={false}
                      onClick={[Function]}
                    >
                      <WithStyles(TouchRippleComp)
                        className="ButtonComp-root-0-3-15"
                        disabled={false}
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        onClick={[Function]}
                        theme={Object {}}
                      >
                        <TouchRippleComp
                          className="ButtonComp-root-0-3-15"
                          classes={
                            Object {
                              "disabled": "TouchRippleComp-disabled-0-3-34",
                              "root": "TouchRippleComp-root-0-3-33",
                            }
                          }
                          disabled={false}
                          onClick={[Function]}
                        >
                          <div
                            className="ButtonComp-root-0-3-15 TouchRippleComp-root-0-3-33"
                            onClick={[Function]}
                          >
                            <div
                              className="ButtonComp-flat-0-3-17 ButtonComp-transparent-0-3-27"
                            >
                              <div
                                className="ButtonComp-text-0-3-29"
                              >
                                <Typography
                                  bold={true}
                                  textTransform="uppercase"
                                  variant="standard"
                                >
                                  <WithStyles(TypographyComp)
                                    bold={true}
                                    innerRef={null}
                                    jssContext={
                                      Object {
                                        "classNamePrefix": "",
                                        "disableStylesGeneration": false,
                                      }
                                    }
                                    textTransform="uppercase"
                                    theme={Object {}}
                                    variant="standard"
                                  >
                                    <TypographyComp
                                      bold={true}
                                      classes={
                                        Object {
                                          "big": "TypographyComp-big-0-3-7",
                                          "bold": "TypographyComp-bold-0-3-1",
                                          "capitalize": "TypographyComp-capitalize-0-3-12",
                                          "distance": "TypographyComp-distance-0-3-6",
                                          "ellipsis": "TypographyComp-ellipsis-0-3-14",
                                          "giant": "TypographyComp-giant-0-3-9",
                                          "heading": "TypographyComp-heading-0-3-8",
                                          "italic": "TypographyComp-italic-0-3-3",
                                          "lowercase": "TypographyComp-lowercase-0-3-11",
                                          "noWrap": "TypographyComp-noWrap-0-3-13",
                                          "semiBold": "TypographyComp-semiBold-0-3-2",
                                          "standard": "TypographyComp-standard-0-3-5",
                                          "subtext": "TypographyComp-subtext-0-3-4",
                                          "uppercase": "TypographyComp-uppercase-0-3-10",
                                        }
                                      }
                                      textTransform="uppercase"
                                      variant="standard"
                                    >
                                      <span
                                        className="TypographyComp-standard-0-3-5 TypographyComp-uppercase-0-3-10 TypographyComp-bold-0-3-1"
                                      >
                                        Cancel
                                      </span>
                                    </TypographyComp>
                                  </WithStyles(TypographyComp)>
                                </Typography>
                              </div>
                            </div>
                          </div>
                        </TouchRippleComp>
                      </WithStyles(TouchRippleComp)>
                    </TouchRipple>
                  </ButtonComp>
                </WithStyles(ButtonComp)>
              </Button>
              <Button
                color="primary"
                disabled={false}
                onClick={[Function]}
                text="Confirm"
                variant="raised"
              >
                <WithStyles(ButtonComp)
                  color="primary"
                  disabled={false}
                  innerRef={null}
                  jssContext={
                    Object {
                      "classNamePrefix": "",
                      "disableStylesGeneration": false,
                    }
                  }
                  onClick={[Function]}
                  text="Confirm"
                  theme={Object {}}
                  variant="raised"
                >
                  <ButtonComp
                    classes={
                      Object {
                        "centered": "ButtonComp-centered-0-3-19",
                        "disabled": "ButtonComp-disabled-0-3-32",
                        "flat": "ButtonComp-flat-0-3-17",
                        "fullWidth": "ButtonComp-fullWidth-0-3-31",
                        "green": "ButtonComp-green-0-3-23",
                        "grey": "ButtonComp-grey-0-3-21",
                        "icon": "ButtonComp-icon-0-3-16",
                        "neutral": "ButtonComp-neutral-0-3-22",
                        "orange": "ButtonComp-orange-0-3-24",
                        "primary": "ButtonComp-primary-0-3-20",
                        "raised": "ButtonComp-raised-0-3-18",
                        "red": "ButtonComp-red-0-3-26",
                        "root": "ButtonComp-root-0-3-15",
                        "shadow": "ButtonComp-shadow-0-3-28",
                        "text": "ButtonComp-text-0-3-29",
                        "textIcon": "ButtonComp-textIcon-0-3-30",
                        "transparent": "ButtonComp-transparent-0-3-27",
                        "yellow": "ButtonComp-yellow-0-3-25",
                      }
                    }
                    color="primary"
                    disabled={false}
                    onClick={[Function]}
                    text="Confirm"
                    variant="raised"
                  >
                    <TouchRipple
                      className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
                      disabled={false}
                      onClick={[Function]}
                    >
                      <WithStyles(TouchRippleComp)
                        className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
                        disabled={false}
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        onClick={[Function]}
                        theme={Object {}}
                      >
                        <TouchRippleComp
                          className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
                          classes={
                            Object {
                              "disabled": "TouchRippleComp-disabled-0-3-34",
                              "root": "TouchRippleComp-root-0-3-33",
                            }
                          }
                          disabled={false}
                          onClick={[Function]}
                        >
                          <div
                            className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28 TouchRippleComp-root-0-3-33"
                            onClick={[Function]}
                          >
                            <div
                              className="ButtonComp-raised-0-3-18 ButtonComp-primary-0-3-20"
                            >
                              <div
                                className="ButtonComp-text-0-3-29"
                              >
                                <Typography
                                  bold={true}
                                  textTransform="uppercase"
                                  variant="standard"
                                >
                                  <WithStyles(TypographyComp)
                                    bold={true}
                                    innerRef={null}
                                    jssContext={
                                      Object {
                                        "classNamePrefix": "",
                                        "disableStylesGeneration": false,
                                      }
                                    }
                                    textTransform="uppercase"
                                    theme={Object {}}
                                    variant="standard"
                                  >
                                    <TypographyComp
                                      bold={true}
                                      classes={
                                        Object {
                                          "big": "TypographyComp-big-0-3-7",
                                          "bold": "TypographyComp-bold-0-3-1",
                                          "capitalize": "TypographyComp-capitalize-0-3-12",
                                          "distance": "TypographyComp-distance-0-3-6",
                                          "ellipsis": "TypographyComp-ellipsis-0-3-14",
                                          "giant": "TypographyComp-giant-0-3-9",
                                          "heading": "TypographyComp-heading-0-3-8",
                                          "italic": "TypographyComp-italic-0-3-3",
                                          "lowercase": "TypographyComp-lowercase-0-3-11",
                                          "noWrap": "TypographyComp-noWrap-0-3-13",
                                          "semiBold": "TypographyComp-semiBold-0-3-2",
                                          "standard": "TypographyComp-standard-0-3-5",
                                          "subtext": "TypographyComp-subtext-0-3-4",
                                          "uppercase": "TypographyComp-uppercase-0-3-10",
                                        }
                                      }
                                      textTransform="uppercase"
                                      variant="standard"
                                    >
                                      <span
                                        className="TypographyComp-standard-0-3-5 TypographyComp-uppercase-0-3-10 TypographyComp-bold-0-3-1"
                                      >
                                        Confirm
                                      </span>
                                    </TypographyComp>
                                  </WithStyles(TypographyComp)>
                                </Typography>
                              </div>
                            </div>
                          </div>
                        </TouchRippleComp>
                      </WithStyles(TouchRippleComp)>
                    </TouchRipple>
                  </ButtonComp>
                </WithStyles(ButtonComp)>
              </Button>
            </div>
            <div
              className="FooterWithDoubleConfirmationComp-confirmation-0-3-132"
            >
              <Typography
                bold={true}
                variant="distance"
              >
                <WithStyles(TypographyComp)
                  bold={true}
                  innerRef={null}
                  jssContext={
                    Object {
                      "classNamePrefix": "",
                      "disableStylesGeneration": false,
                    }
                  }
                  theme={Object {}}
                  variant="distance"
                >
                  <TypographyComp
                    bold={true}
                    classes={
                      Object {
                        "big": "TypographyComp-big-0-3-7",
                        "bold": "TypographyComp-bold-0-3-1",
                        "capitalize": "TypographyComp-capitalize-0-3-12",
                        "distance": "TypographyComp-distance-0-3-6",
                        "ellipsis": "TypographyComp-ellipsis-0-3-14",
                        "giant": "TypographyComp-giant-0-3-9",
                        "heading": "TypographyComp-heading-0-3-8",
                        "italic": "TypographyComp-italic-0-3-3",
                        "lowercase": "TypographyComp-lowercase-0-3-11",
                        "noWrap": "TypographyComp-noWrap-0-3-13",
                        "semiBold": "TypographyComp-semiBold-0-3-2",
                        "standard": "TypographyComp-standard-0-3-5",
                        "subtext": "TypographyComp-subtext-0-3-4",
                        "uppercase": "TypographyComp-uppercase-0-3-10",
                      }
                    }
                    variant="distance"
                  >
                    <span
                      className="TypographyComp-distance-0-3-6 TypographyComp-bold-0-3-1"
                    >
                      Message
                    </span>
                  </TypographyComp>
                </WithStyles(TypographyComp)>
              </Typography>
              <Button
                color="grey"
                onClick={[Function]}
                text="No"
                variant="raised"
              >
                <WithStyles(ButtonComp)
                  color="grey"
                  innerRef={null}
                  jssContext={
                    Object {
                      "classNamePrefix": "",
                      "disableStylesGeneration": false,
                    }
                  }
                  onClick={[Function]}
                  text="No"
                  theme={Object {}}
                  variant="raised"
                >
                  <ButtonComp
                    classes={
                      Object {
                        "centered": "ButtonComp-centered-0-3-19",
                        "disabled": "ButtonComp-disabled-0-3-32",
                        "flat": "ButtonComp-flat-0-3-17",
                        "fullWidth": "ButtonComp-fullWidth-0-3-31",
                        "green": "ButtonComp-green-0-3-23",
                        "grey": "ButtonComp-grey-0-3-21",
                        "icon": "ButtonComp-icon-0-3-16",
                        "neutral": "ButtonComp-neutral-0-3-22",
                        "orange": "ButtonComp-orange-0-3-24",
                        "primary": "ButtonComp-primary-0-3-20",
                        "raised": "ButtonComp-raised-0-3-18",
                        "red": "ButtonComp-red-0-3-26",
                        "root": "ButtonComp-root-0-3-15",
                        "shadow": "ButtonComp-shadow-0-3-28",
                        "text": "ButtonComp-text-0-3-29",
                        "textIcon": "ButtonComp-textIcon-0-3-30",
                        "transparent": "ButtonComp-transparent-0-3-27",
                        "yellow": "ButtonComp-yellow-0-3-25",
                      }
                    }
                    color="grey"
                    onClick={[Function]}
                    text="No"
                    variant="raised"
                  >
                    <TouchRipple
                      className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
                      disabled={false}
                      onClick={[Function]}
                    >
                      <WithStyles(TouchRippleComp)
                        className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
                        disabled={false}
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        onClick={[Function]}
                        theme={Object {}}
                      >
                        <TouchRippleComp
                          className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
                          classes={
                            Object {
                              "disabled": "TouchRippleComp-disabled-0-3-34",
                              "root": "TouchRippleComp-root-0-3-33",
                            }
                          }
                          disabled={false}
                          onClick={[Function]}
                        >
                          <div
                            className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28 TouchRippleComp-root-0-3-33"
                            onClick={[Function]}
                          >
                            <div
                              className="ButtonComp-raised-0-3-18 ButtonComp-grey-0-3-21"
                            >
                              <div
                                className="ButtonComp-text-0-3-29"
                              >
                                <Typography
                                  bold={true}
                                  textTransform="uppercase"
                                  variant="standard"
                                >
                                  <WithStyles(TypographyComp)
                                    bold={true}
                                    innerRef={null}
                                    jssContext={
                                      Object {
                                        "classNamePrefix": "",
                                        "disableStylesGeneration": false,
                                      }
                                    }
                                    textTransform="uppercase"
                                    theme={Object {}}
                                    variant="standard"
                                  >
                                    <TypographyComp
                                      bold={true}
                                      classes={
                                        Object {
                                          "big": "TypographyComp-big-0-3-7",
                                          "bold": "TypographyComp-bold-0-3-1",
                                          "capitalize": "TypographyComp-capitalize-0-3-12",
                                          "distance": "TypographyComp-distance-0-3-6",
                                          "ellipsis": "TypographyComp-ellipsis-0-3-14",
                                          "giant": "TypographyComp-giant-0-3-9",
                                          "heading": "TypographyComp-heading-0-3-8",
                                          "italic": "TypographyComp-italic-0-3-3",
                                          "lowercase": "TypographyComp-lowercase-0-3-11",
                                          "noWrap": "TypographyComp-noWrap-0-3-13",
                                          "semiBold": "TypographyComp-semiBold-0-3-2",
                                          "standard": "TypographyComp-standard-0-3-5",
                                          "subtext": "TypographyComp-subtext-0-3-4",
                                          "uppercase": "TypographyComp-uppercase-0-3-10",
                                        }
                                      }
                                      textTransform="uppercase"
                                      variant="standard"
                                    >
                                      <span
                                        className="TypographyComp-standard-0-3-5 TypographyComp-uppercase-0-3-10 TypographyComp-bold-0-3-1"
                                      >
                                        No
                                      </span>
                                    </TypographyComp>
                                  </WithStyles(TypographyComp)>
                                </Typography>
                              </div>
                            </div>
                          </div>
                        </TouchRippleComp>
                      </WithStyles(TouchRippleComp)>
                    </TouchRipple>
                  </ButtonComp>
                </WithStyles(ButtonComp)>
              </Button>
              <Button
                color="grey"
                onClick={[Function]}
                text="Yes"
                variant="raised"
              >
                <WithStyles(ButtonComp)
                  color="grey"
                  innerRef={null}
                  jssContext={
                    Object {
                      "classNamePrefix": "",
                      "disableStylesGeneration": false,
                    }
                  }
                  onClick={[Function]}
                  text="Yes"
                  theme={Object {}}
                  variant="raised"
                >
                  <ButtonComp
                    classes={
                      Object {
                        "centered": "ButtonComp-centered-0-3-19",
                        "disabled": "ButtonComp-disabled-0-3-32",
                        "flat": "ButtonComp-flat-0-3-17",
                        "fullWidth": "ButtonComp-fullWidth-0-3-31",
                        "green": "ButtonComp-green-0-3-23",
                        "grey": "ButtonComp-grey-0-3-21",
                        "icon": "ButtonComp-icon-0-3-16",
                        "neutral": "ButtonComp-neutral-0-3-22",
                        "orange": "ButtonComp-orange-0-3-24",
                        "primary": "ButtonComp-primary-0-3-20",
                        "raised": "ButtonComp-raised-0-3-18",
                        "red": "ButtonComp-red-0-3-26",
                        "root": "ButtonComp-root-0-3-15",
                        "shadow": "ButtonComp-shadow-0-3-28",
                        "text": "ButtonComp-text-0-3-29",
                        "textIcon": "ButtonComp-textIcon-0-3-30",
                        "transparent": "ButtonComp-transparent-0-3-27",
                        "yellow": "ButtonComp-yellow-0-3-25",
                      }
                    }
                    color="grey"
                    onClick={[Function]}
                    text="Yes"
                    variant="raised"
                  >
                    <TouchRipple
                      className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
                      disabled={false}
                      onClick={[Function]}
                    >
                      <WithStyles(TouchRippleComp)
                        className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
                        disabled={false}
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        onClick={[Function]}
                        theme={Object {}}
                      >
                        <TouchRippleComp
                          className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
                          classes={
                            Object {
                              "disabled": "TouchRippleComp-disabled-0-3-34",
                              "root": "TouchRippleComp-root-0-3-33",
                            }
                          }
                          disabled={false}
                          onClick={[Function]}
                        >
                          <div
                            className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28 TouchRippleComp-root-0-3-33"
                            onClick={[Function]}
                          >
                            <div
                              className="ButtonComp-raised-0-3-18 ButtonComp-grey-0-3-21"
                            >
                              <div
                                className="ButtonComp-text-0-3-29"
                              >
                                <Typography
                                  bold={true}
                                  textTransform="uppercase"
                                  variant="standard"
                                >
                                  <WithStyles(TypographyComp)
                                    bold={true}
                                    innerRef={null}
                                    jssContext={
                                      Object {
                                        "classNamePrefix": "",
                                        "disableStylesGeneration": false,
                                      }
                                    }
                                    textTransform="uppercase"
                                    theme={Object {}}
                                    variant="standard"
                                  >
                                    <TypographyComp
                                      bold={true}
                                      classes={
                                        Object {
                                          "big": "TypographyComp-big-0-3-7",
                                          "bold": "TypographyComp-bold-0-3-1",
                                          "capitalize": "TypographyComp-capitalize-0-3-12",
                                          "distance": "TypographyComp-distance-0-3-6",
                                          "ellipsis": "TypographyComp-ellipsis-0-3-14",
                                          "giant": "TypographyComp-giant-0-3-9",
                                          "heading": "TypographyComp-heading-0-3-8",
                                          "italic": "TypographyComp-italic-0-3-3",
                                          "lowercase": "TypographyComp-lowercase-0-3-11",
                                          "noWrap": "TypographyComp-noWrap-0-3-13",
                                          "semiBold": "TypographyComp-semiBold-0-3-2",
                                          "standard": "TypographyComp-standard-0-3-5",
                                          "subtext": "TypographyComp-subtext-0-3-4",
                                          "uppercase": "TypographyComp-uppercase-0-3-10",
                                        }
                                      }
                                      textTransform="uppercase"
                                      variant="standard"
                                    >
                                      <span
                                        className="TypographyComp-standard-0-3-5 TypographyComp-uppercase-0-3-10 TypographyComp-bold-0-3-1"
                                      >
                                        Yes
                                      </span>
                                    </TypographyComp>
                                  </WithStyles(TypographyComp)>
                                </Typography>
                              </div>
                            </div>
                          </div>
                        </TouchRippleComp>
                      </WithStyles(TouchRippleComp)>
                    </TouchRipple>
                  </ButtonComp>
                </WithStyles(ButtonComp)>
              </Button>
            </div>
          </div>
        </Transition>
      </div>
    </FooterWithDoubleConfirmationComp>
  </WithStyles(FooterWithDoubleConfirmationComp)>
</FooterWithDoubleConfirmation>
`;

exports[`Storyshots Components/Dialog/FooterWithDoubleConfirmation Mode confirmation 1`] = `
<FooterWithDoubleConfirmation
  cancelMessage="Cancel"
  confirmMessage="Confirm"
  message="Message"
  mode="confirmation"
  noMessage="No"
  onCancel={[Function]}
  onConfirm={[Function]}
  onSelectNo={[Function]}
  onSelectYes={[Function]}
  valid={false}
  yesMessage="Yes"
>
  <WithStyles(FooterWithDoubleConfirmationComp)
    cancelMessage="Cancel"
    confirmMessage="Confirm"
    innerRef={null}
    jssContext={
      Object {
        "classNamePrefix": "",
        "disableStylesGeneration": false,
      }
    }
    message="Message"
    mode="confirmation"
    noMessage="No"
    onCancel={[Function]}
    onConfirm={[Function]}
    onSelectNo={[Function]}
    onSelectYes={[Function]}
    theme={Object {}}
    valid={false}
    yesMessage="Yes"
  >
    <FooterWithDoubleConfirmationComp
      cancelMessage="Cancel"
      classes={
        Object {
          "confirm": "FooterWithDoubleConfirmationComp-confirm-0-3-131",
          "confirmation": "FooterWithDoubleConfirmationComp-confirmation-0-3-132",
          "content": "FooterWithDoubleConfirmationComp-content-0-3-130",
          "root": "FooterWithDoubleConfirmationComp-root-0-3-129",
        }
      }
      confirmMessage="Confirm"
      message="Message"
      mode="confirmation"
      noMessage="No"
      onCancel={[Function]}
      onConfirm={[Function]}
      onSelectNo={[Function]}
      onSelectYes={[Function]}
      valid={false}
      yesMessage="Yes"
    >
      <div
        className="FooterWithDoubleConfirmationComp-root-0-3-129"
      >
        <Transition
          appear={false}
          enter={true}
          exit={true}
          in={true}
          mountOnEnter={false}
          onEnter={[Function]}
          onEntered={[Function]}
          onEntering={[Function]}
          onExit={[Function]}
          onExited={[Function]}
          onExiting={[Function]}
          timeout={150}
          unmountOnExit={false}
        >
          <div
            className="FooterWithDoubleConfirmationComp-content-0-3-130"
            style={
              Object {
                "transform": "translateY(-85px)",
                "transition": "transform 150ms ease-in-out",
              }
            }
          >
            <div
              className="FooterWithDoubleConfirmationComp-confirm-0-3-131"
            >
              <Button
                color="transparent"
                onClick={[Function]}
                text="Cancel"
                variant="flat"
              >
                <WithStyles(ButtonComp)
                  color="transparent"
                  innerRef={null}
                  jssContext={
                    Object {
                      "classNamePrefix": "",
                      "disableStylesGeneration": false,
                    }
                  }
                  onClick={[Function]}
                  text="Cancel"
                  theme={Object {}}
                  variant="flat"
                >
                  <ButtonComp
                    classes={
                      Object {
                        "centered": "ButtonComp-centered-0-3-19",
                        "disabled": "ButtonComp-disabled-0-3-32",
                        "flat": "ButtonComp-flat-0-3-17",
                        "fullWidth": "ButtonComp-fullWidth-0-3-31",
                        "green": "ButtonComp-green-0-3-23",
                        "grey": "ButtonComp-grey-0-3-21",
                        "icon": "ButtonComp-icon-0-3-16",
                        "neutral": "ButtonComp-neutral-0-3-22",
                        "orange": "ButtonComp-orange-0-3-24",
                        "primary": "ButtonComp-primary-0-3-20",
                        "raised": "ButtonComp-raised-0-3-18",
                        "red": "ButtonComp-red-0-3-26",
                        "root": "ButtonComp-root-0-3-15",
                        "shadow": "ButtonComp-shadow-0-3-28",
                        "text": "ButtonComp-text-0-3-29",
                        "textIcon": "ButtonComp-textIcon-0-3-30",
                        "transparent": "ButtonComp-transparent-0-3-27",
                        "yellow": "ButtonComp-yellow-0-3-25",
                      }
                    }
                    color="transparent"
                    onClick={[Function]}
                    text="Cancel"
                    variant="flat"
                  >
                    <TouchRipple
                      className="ButtonComp-root-0-3-15"
                      disabled={false}
                      onClick={[Function]}
                    >
                      <WithStyles(TouchRippleComp)
                        className="ButtonComp-root-0-3-15"
                        disabled={false}
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        onClick={[Function]}
                        theme={Object {}}
                      >
                        <TouchRippleComp
                          className="ButtonComp-root-0-3-15"
                          classes={
                            Object {
                              "disabled": "TouchRippleComp-disabled-0-3-34",
                              "root": "TouchRippleComp-root-0-3-33",
                            }
                          }
                          disabled={false}
                          onClick={[Function]}
                        >
                          <div
                            className="ButtonComp-root-0-3-15 TouchRippleComp-root-0-3-33"
                            onClick={[Function]}
                          >
                            <div
                              className="ButtonComp-flat-0-3-17 ButtonComp-transparent-0-3-27"
                            >
                              <div
                                className="ButtonComp-text-0-3-29"
                              >
                                <Typography
                                  bold={true}
                                  textTransform="uppercase"
                                  variant="standard"
                                >
                                  <WithStyles(TypographyComp)
                                    bold={true}
                                    innerRef={null}
                                    jssContext={
                                      Object {
                                        "classNamePrefix": "",
                                        "disableStylesGeneration": false,
                                      }
                                    }
                                    textTransform="uppercase"
                                    theme={Object {}}
                                    variant="standard"
                                  >
                                    <TypographyComp
                                      bold={true}
                                      classes={
                                        Object {
                                          "big": "TypographyComp-big-0-3-7",
                                          "bold": "TypographyComp-bold-0-3-1",
                                          "capitalize": "TypographyComp-capitalize-0-3-12",
                                          "distance": "TypographyComp-distance-0-3-6",
                                          "ellipsis": "TypographyComp-ellipsis-0-3-14",
                                          "giant": "TypographyComp-giant-0-3-9",
                                          "heading": "TypographyComp-heading-0-3-8",
                                          "italic": "TypographyComp-italic-0-3-3",
                                          "lowercase": "TypographyComp-lowercase-0-3-11",
                                          "noWrap": "TypographyComp-noWrap-0-3-13",
                                          "semiBold": "TypographyComp-semiBold-0-3-2",
                                          "standard": "TypographyComp-standard-0-3-5",
                                          "subtext": "TypographyComp-subtext-0-3-4",
                                          "uppercase": "TypographyComp-uppercase-0-3-10",
                                        }
                                      }
                                      textTransform="uppercase"
                                      variant="standard"
                                    >
                                      <span
                                        className="TypographyComp-standard-0-3-5 TypographyComp-uppercase-0-3-10 TypographyComp-bold-0-3-1"
                                      >
                                        Cancel
                                      </span>
                                    </TypographyComp>
                                  </WithStyles(TypographyComp)>
                                </Typography>
                              </div>
                            </div>
                          </div>
                        </TouchRippleComp>
                      </WithStyles(TouchRippleComp)>
                    </TouchRipple>
                  </ButtonComp>
                </WithStyles(ButtonComp)>
              </Button>
              <Button
                color="primary"
                disabled={true}
                onClick={[Function]}
                text="Confirm"
                variant="raised"
              >
                <WithStyles(ButtonComp)
                  color="primary"
                  disabled={true}
                  innerRef={null}
                  jssContext={
                    Object {
                      "classNamePrefix": "",
                      "disableStylesGeneration": false,
                    }
                  }
                  onClick={[Function]}
                  text="Confirm"
                  theme={Object {}}
                  variant="raised"
                >
                  <ButtonComp
                    classes={
                      Object {
                        "centered": "ButtonComp-centered-0-3-19",
                        "disabled": "ButtonComp-disabled-0-3-32",
                        "flat": "ButtonComp-flat-0-3-17",
                        "fullWidth": "ButtonComp-fullWidth-0-3-31",
                        "green": "ButtonComp-green-0-3-23",
                        "grey": "ButtonComp-grey-0-3-21",
                        "icon": "ButtonComp-icon-0-3-16",
                        "neutral": "ButtonComp-neutral-0-3-22",
                        "orange": "ButtonComp-orange-0-3-24",
                        "primary": "ButtonComp-primary-0-3-20",
                        "raised": "ButtonComp-raised-0-3-18",
                        "red": "ButtonComp-red-0-3-26",
                        "root": "ButtonComp-root-0-3-15",
                        "shadow": "ButtonComp-shadow-0-3-28",
                        "text": "ButtonComp-text-0-3-29",
                        "textIcon": "ButtonComp-textIcon-0-3-30",
                        "transparent": "ButtonComp-transparent-0-3-27",
                        "yellow": "ButtonComp-yellow-0-3-25",
                      }
                    }
                    color="primary"
                    disabled={true}
                    onClick={[Function]}
                    text="Confirm"
                    variant="raised"
                  >
                    <TouchRipple
                      className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28 ButtonComp-disabled-0-3-32"
                      disabled={true}
                      onClick={[Function]}
                    >
                      <WithStyles(TouchRippleComp)
                        className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28 ButtonComp-disabled-0-3-32"
                        disabled={true}
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        onClick={[Function]}
                        theme={Object {}}
                      >
                        <TouchRippleComp
                          className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28 ButtonComp-disabled-0-3-32"
                          classes={
                            Object {
                              "disabled": "TouchRippleComp-disabled-0-3-34",
                              "root": "TouchRippleComp-root-0-3-33",
                            }
                          }
                          disabled={true}
                          onClick={[Function]}
                        >
                          <div
                            className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28 ButtonComp-disabled-0-3-32 TouchRippleComp-disabled-0-3-34"
                          >
                            <div
                              className="ButtonComp-raised-0-3-18 ButtonComp-primary-0-3-20"
                            >
                              <div
                                className="ButtonComp-text-0-3-29"
                              >
                                <Typography
                                  bold={true}
                                  textTransform="uppercase"
                                  variant="standard"
                                >
                                  <WithStyles(TypographyComp)
                                    bold={true}
                                    innerRef={null}
                                    jssContext={
                                      Object {
                                        "classNamePrefix": "",
                                        "disableStylesGeneration": false,
                                      }
                                    }
                                    textTransform="uppercase"
                                    theme={Object {}}
                                    variant="standard"
                                  >
                                    <TypographyComp
                                      bold={true}
                                      classes={
                                        Object {
                                          "big": "TypographyComp-big-0-3-7",
                                          "bold": "TypographyComp-bold-0-3-1",
                                          "capitalize": "TypographyComp-capitalize-0-3-12",
                                          "distance": "TypographyComp-distance-0-3-6",
                                          "ellipsis": "TypographyComp-ellipsis-0-3-14",
                                          "giant": "TypographyComp-giant-0-3-9",
                                          "heading": "TypographyComp-heading-0-3-8",
                                          "italic": "TypographyComp-italic-0-3-3",
                                          "lowercase": "TypographyComp-lowercase-0-3-11",
                                          "noWrap": "TypographyComp-noWrap-0-3-13",
                                          "semiBold": "TypographyComp-semiBold-0-3-2",
                                          "standard": "TypographyComp-standard-0-3-5",
                                          "subtext": "TypographyComp-subtext-0-3-4",
                                          "uppercase": "TypographyComp-uppercase-0-3-10",
                                        }
                                      }
                                      textTransform="uppercase"
                                      variant="standard"
                                    >
                                      <span
                                        className="TypographyComp-standard-0-3-5 TypographyComp-uppercase-0-3-10 TypographyComp-bold-0-3-1"
                                      >
                                        Confirm
                                      </span>
                                    </TypographyComp>
                                  </WithStyles(TypographyComp)>
                                </Typography>
                              </div>
                            </div>
                          </div>
                        </TouchRippleComp>
                      </WithStyles(TouchRippleComp)>
                    </TouchRipple>
                  </ButtonComp>
                </WithStyles(ButtonComp)>
              </Button>
            </div>
            <div
              className="FooterWithDoubleConfirmationComp-confirmation-0-3-132"
            >
              <Typography
                bold={true}
                variant="distance"
              >
                <WithStyles(TypographyComp)
                  bold={true}
                  innerRef={null}
                  jssContext={
                    Object {
                      "classNamePrefix": "",
                      "disableStylesGeneration": false,
                    }
                  }
                  theme={Object {}}
                  variant="distance"
                >
                  <TypographyComp
                    bold={true}
                    classes={
                      Object {
                        "big": "TypographyComp-big-0-3-7",
                        "bold": "TypographyComp-bold-0-3-1",
                        "capitalize": "TypographyComp-capitalize-0-3-12",
                        "distance": "TypographyComp-distance-0-3-6",
                        "ellipsis": "TypographyComp-ellipsis-0-3-14",
                        "giant": "TypographyComp-giant-0-3-9",
                        "heading": "TypographyComp-heading-0-3-8",
                        "italic": "TypographyComp-italic-0-3-3",
                        "lowercase": "TypographyComp-lowercase-0-3-11",
                        "noWrap": "TypographyComp-noWrap-0-3-13",
                        "semiBold": "TypographyComp-semiBold-0-3-2",
                        "standard": "TypographyComp-standard-0-3-5",
                        "subtext": "TypographyComp-subtext-0-3-4",
                        "uppercase": "TypographyComp-uppercase-0-3-10",
                      }
                    }
                    variant="distance"
                  >
                    <span
                      className="TypographyComp-distance-0-3-6 TypographyComp-bold-0-3-1"
                    >
                      Message
                    </span>
                  </TypographyComp>
                </WithStyles(TypographyComp)>
              </Typography>
              <Button
                color="grey"
                onClick={[Function]}
                text="No"
                variant="raised"
              >
                <WithStyles(ButtonComp)
                  color="grey"
                  innerRef={null}
                  jssContext={
                    Object {
                      "classNamePrefix": "",
                      "disableStylesGeneration": false,
                    }
                  }
                  onClick={[Function]}
                  text="No"
                  theme={Object {}}
                  variant="raised"
                >
                  <ButtonComp
                    classes={
                      Object {
                        "centered": "ButtonComp-centered-0-3-19",
                        "disabled": "ButtonComp-disabled-0-3-32",
                        "flat": "ButtonComp-flat-0-3-17",
                        "fullWidth": "ButtonComp-fullWidth-0-3-31",
                        "green": "ButtonComp-green-0-3-23",
                        "grey": "ButtonComp-grey-0-3-21",
                        "icon": "ButtonComp-icon-0-3-16",
                        "neutral": "ButtonComp-neutral-0-3-22",
                        "orange": "ButtonComp-orange-0-3-24",
                        "primary": "ButtonComp-primary-0-3-20",
                        "raised": "ButtonComp-raised-0-3-18",
                        "red": "ButtonComp-red-0-3-26",
                        "root": "ButtonComp-root-0-3-15",
                        "shadow": "ButtonComp-shadow-0-3-28",
                        "text": "ButtonComp-text-0-3-29",
                        "textIcon": "ButtonComp-textIcon-0-3-30",
                        "transparent": "ButtonComp-transparent-0-3-27",
                        "yellow": "ButtonComp-yellow-0-3-25",
                      }
                    }
                    color="grey"
                    onClick={[Function]}
                    text="No"
                    variant="raised"
                  >
                    <TouchRipple
                      className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
                      disabled={false}
                      onClick={[Function]}
                    >
                      <WithStyles(TouchRippleComp)
                        className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
                        disabled={false}
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        onClick={[Function]}
                        theme={Object {}}
                      >
                        <TouchRippleComp
                          className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
                          classes={
                            Object {
                              "disabled": "TouchRippleComp-disabled-0-3-34",
                              "root": "TouchRippleComp-root-0-3-33",
                            }
                          }
                          disabled={false}
                          onClick={[Function]}
                        >
                          <div
                            className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28 TouchRippleComp-root-0-3-33"
                            onClick={[Function]}
                          >
                            <div
                              className="ButtonComp-raised-0-3-18 ButtonComp-grey-0-3-21"
                            >
                              <div
                                className="ButtonComp-text-0-3-29"
                              >
                                <Typography
                                  bold={true}
                                  textTransform="uppercase"
                                  variant="standard"
                                >
                                  <WithStyles(TypographyComp)
                                    bold={true}
                                    innerRef={null}
                                    jssContext={
                                      Object {
                                        "classNamePrefix": "",
                                        "disableStylesGeneration": false,
                                      }
                                    }
                                    textTransform="uppercase"
                                    theme={Object {}}
                                    variant="standard"
                                  >
                                    <TypographyComp
                                      bold={true}
                                      classes={
                                        Object {
                                          "big": "TypographyComp-big-0-3-7",
                                          "bold": "TypographyComp-bold-0-3-1",
                                          "capitalize": "TypographyComp-capitalize-0-3-12",
                                          "distance": "TypographyComp-distance-0-3-6",
                                          "ellipsis": "TypographyComp-ellipsis-0-3-14",
                                          "giant": "TypographyComp-giant-0-3-9",
                                          "heading": "TypographyComp-heading-0-3-8",
                                          "italic": "TypographyComp-italic-0-3-3",
                                          "lowercase": "TypographyComp-lowercase-0-3-11",
                                          "noWrap": "TypographyComp-noWrap-0-3-13",
                                          "semiBold": "TypographyComp-semiBold-0-3-2",
                                          "standard": "TypographyComp-standard-0-3-5",
                                          "subtext": "TypographyComp-subtext-0-3-4",
                                          "uppercase": "TypographyComp-uppercase-0-3-10",
                                        }
                                      }
                                      textTransform="uppercase"
                                      variant="standard"
                                    >
                                      <span
                                        className="TypographyComp-standard-0-3-5 TypographyComp-uppercase-0-3-10 TypographyComp-bold-0-3-1"
                                      >
                                        No
                                      </span>
                                    </TypographyComp>
                                  </WithStyles(TypographyComp)>
                                </Typography>
                              </div>
                            </div>
                          </div>
                        </TouchRippleComp>
                      </WithStyles(TouchRippleComp)>
                    </TouchRipple>
                  </ButtonComp>
                </WithStyles(ButtonComp)>
              </Button>
              <Button
                color="grey"
                onClick={[Function]}
                text="Yes"
                variant="raised"
              >
                <WithStyles(ButtonComp)
                  color="grey"
                  innerRef={null}
                  jssContext={
                    Object {
                      "classNamePrefix": "",
                      "disableStylesGeneration": false,
                    }
                  }
                  onClick={[Function]}
                  text="Yes"
                  theme={Object {}}
                  variant="raised"
                >
                  <ButtonComp
                    classes={
                      Object {
                        "centered": "ButtonComp-centered-0-3-19",
                        "disabled": "ButtonComp-disabled-0-3-32",
                        "flat": "ButtonComp-flat-0-3-17",
                        "fullWidth": "ButtonComp-fullWidth-0-3-31",
                        "green": "ButtonComp-green-0-3-23",
                        "grey": "ButtonComp-grey-0-3-21",
                        "icon": "ButtonComp-icon-0-3-16",
                        "neutral": "ButtonComp-neutral-0-3-22",
                        "orange": "ButtonComp-orange-0-3-24",
                        "primary": "ButtonComp-primary-0-3-20",
                        "raised": "ButtonComp-raised-0-3-18",
                        "red": "ButtonComp-red-0-3-26",
                        "root": "ButtonComp-root-0-3-15",
                        "shadow": "ButtonComp-shadow-0-3-28",
                        "text": "ButtonComp-text-0-3-29",
                        "textIcon": "ButtonComp-textIcon-0-3-30",
                        "transparent": "ButtonComp-transparent-0-3-27",
                        "yellow": "ButtonComp-yellow-0-3-25",
                      }
                    }
                    color="grey"
                    onClick={[Function]}
                    text="Yes"
                    variant="raised"
                  >
                    <TouchRipple
                      className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
                      disabled={false}
                      onClick={[Function]}
                    >
                      <WithStyles(TouchRippleComp)
                        className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
                        disabled={false}
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        onClick={[Function]}
                        theme={Object {}}
                      >
                        <TouchRippleComp
                          className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
                          classes={
                            Object {
                              "disabled": "TouchRippleComp-disabled-0-3-34",
                              "root": "TouchRippleComp-root-0-3-33",
                            }
                          }
                          disabled={false}
                          onClick={[Function]}
                        >
                          <div
                            className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28 TouchRippleComp-root-0-3-33"
                            onClick={[Function]}
                          >
                            <div
                              className="ButtonComp-raised-0-3-18 ButtonComp-grey-0-3-21"
                            >
                              <div
                                className="ButtonComp-text-0-3-29"
                              >
                                <Typography
                                  bold={true}
                                  textTransform="uppercase"
                                  variant="standard"
                                >
                                  <WithStyles(TypographyComp)
                                    bold={true}
                                    innerRef={null}
                                    jssContext={
                                      Object {
                                        "classNamePrefix": "",
                                        "disableStylesGeneration": false,
                                      }
                                    }
                                    textTransform="uppercase"
                                    theme={Object {}}
                                    variant="standard"
                                  >
                                    <TypographyComp
                                      bold={true}
                                      classes={
                                        Object {
                                          "big": "TypographyComp-big-0-3-7",
                                          "bold": "TypographyComp-bold-0-3-1",
                                          "capitalize": "TypographyComp-capitalize-0-3-12",
                                          "distance": "TypographyComp-distance-0-3-6",
                                          "ellipsis": "TypographyComp-ellipsis-0-3-14",
                                          "giant": "TypographyComp-giant-0-3-9",
                                          "heading": "TypographyComp-heading-0-3-8",
                                          "italic": "TypographyComp-italic-0-3-3",
                                          "lowercase": "TypographyComp-lowercase-0-3-11",
                                          "noWrap": "TypographyComp-noWrap-0-3-13",
                                          "semiBold": "TypographyComp-semiBold-0-3-2",
                                          "standard": "TypographyComp-standard-0-3-5",
                                          "subtext": "TypographyComp-subtext-0-3-4",
                                          "uppercase": "TypographyComp-uppercase-0-3-10",
                                        }
                                      }
                                      textTransform="uppercase"
                                      variant="standard"
                                    >
                                      <span
                                        className="TypographyComp-standard-0-3-5 TypographyComp-uppercase-0-3-10 TypographyComp-bold-0-3-1"
                                      >
                                        Yes
                                      </span>
                                    </TypographyComp>
                                  </WithStyles(TypographyComp)>
                                </Typography>
                              </div>
                            </div>
                          </div>
                        </TouchRippleComp>
                      </WithStyles(TouchRippleComp)>
                    </TouchRipple>
                  </ButtonComp>
                </WithStyles(ButtonComp)>
              </Button>
            </div>
          </div>
        </Transition>
      </div>
    </FooterWithDoubleConfirmationComp>
  </WithStyles(FooterWithDoubleConfirmationComp)>
</FooterWithDoubleConfirmation>
`;

exports[`Storyshots Components/Dialog/FooterWithDoubleConfirmation no cancelMessage 1`] = `
<FooterWithDoubleConfirmation
  confirmMessage="Confirm"
  message="Message"
  mode="normal"
  noMessage="No"
  onCancel={[Function]}
  onConfirm={[Function]}
  onSelectNo={[Function]}
  onSelectYes={[Function]}
  valid={false}
  yesMessage="Yes"
>
  <WithStyles(FooterWithDoubleConfirmationComp)
    confirmMessage="Confirm"
    innerRef={null}
    jssContext={
      Object {
        "classNamePrefix": "",
        "disableStylesGeneration": false,
      }
    }
    message="Message"
    mode="normal"
    noMessage="No"
    onCancel={[Function]}
    onConfirm={[Function]}
    onSelectNo={[Function]}
    onSelectYes={[Function]}
    theme={Object {}}
    valid={false}
    yesMessage="Yes"
  >
    <FooterWithDoubleConfirmationComp
      classes={
        Object {
          "confirm": "FooterWithDoubleConfirmationComp-confirm-0-3-131",
          "confirmation": "FooterWithDoubleConfirmationComp-confirmation-0-3-132",
          "content": "FooterWithDoubleConfirmationComp-content-0-3-130",
          "root": "FooterWithDoubleConfirmationComp-root-0-3-129",
        }
      }
      confirmMessage="Confirm"
      message="Message"
      mode="normal"
      noMessage="No"
      onCancel={[Function]}
      onConfirm={[Function]}
      onSelectNo={[Function]}
      onSelectYes={[Function]}
      valid={false}
      yesMessage="Yes"
    >
      <div
        className="FooterWithDoubleConfirmationComp-root-0-3-129"
      >
        <Transition
          appear={false}
          enter={true}
          exit={true}
          in={false}
          mountOnEnter={false}
          onEnter={[Function]}
          onEntered={[Function]}
          onEntering={[Function]}
          onExit={[Function]}
          onExited={[Function]}
          onExiting={[Function]}
          timeout={150}
          unmountOnExit={false}
        >
          <div
            className="FooterWithDoubleConfirmationComp-content-0-3-130"
            style={
              Object {
                "transition": "transform 150ms ease-in-out",
              }
            }
          >
            <div
              className="FooterWithDoubleConfirmationComp-confirm-0-3-131"
            >
              <div />
              <Button
                color="primary"
                disabled={true}
                onClick={[Function]}
                text="Confirm"
                variant="raised"
              >
                <WithStyles(ButtonComp)
                  color="primary"
                  disabled={true}
                  innerRef={null}
                  jssContext={
                    Object {
                      "classNamePrefix": "",
                      "disableStylesGeneration": false,
                    }
                  }
                  onClick={[Function]}
                  text="Confirm"
                  theme={Object {}}
                  variant="raised"
                >
                  <ButtonComp
                    classes={
                      Object {
                        "centered": "ButtonComp-centered-0-3-19",
                        "disabled": "ButtonComp-disabled-0-3-32",
                        "flat": "ButtonComp-flat-0-3-17",
                        "fullWidth": "ButtonComp-fullWidth-0-3-31",
                        "green": "ButtonComp-green-0-3-23",
                        "grey": "ButtonComp-grey-0-3-21",
                        "icon": "ButtonComp-icon-0-3-16",
                        "neutral": "ButtonComp-neutral-0-3-22",
                        "orange": "ButtonComp-orange-0-3-24",
                        "primary": "ButtonComp-primary-0-3-20",
                        "raised": "ButtonComp-raised-0-3-18",
                        "red": "ButtonComp-red-0-3-26",
                        "root": "ButtonComp-root-0-3-15",
                        "shadow": "ButtonComp-shadow-0-3-28",
                        "text": "ButtonComp-text-0-3-29",
                        "textIcon": "ButtonComp-textIcon-0-3-30",
                        "transparent": "ButtonComp-transparent-0-3-27",
                        "yellow": "ButtonComp-yellow-0-3-25",
                      }
                    }
                    color="primary"
                    disabled={true}
                    onClick={[Function]}
                    text="Confirm"
                    variant="raised"
                  >
                    <TouchRipple
                      className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28 ButtonComp-disabled-0-3-32"
                      disabled={true}
                      onClick={[Function]}
                    >
                      <WithStyles(TouchRippleComp)
                        className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28 ButtonComp-disabled-0-3-32"
                        disabled={true}
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        onClick={[Function]}
                        theme={Object {}}
                      >
                        <TouchRippleComp
                          className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28 ButtonComp-disabled-0-3-32"
                          classes={
                            Object {
                              "disabled": "TouchRippleComp-disabled-0-3-34",
                              "root": "TouchRippleComp-root-0-3-33",
                            }
                          }
                          disabled={true}
                          onClick={[Function]}
                        >
                          <div
                            className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28 ButtonComp-disabled-0-3-32 TouchRippleComp-disabled-0-3-34"
                          >
                            <div
                              className="ButtonComp-raised-0-3-18 ButtonComp-primary-0-3-20"
                            >
                              <div
                                className="ButtonComp-text-0-3-29"
                              >
                                <Typography
                                  bold={true}
                                  textTransform="uppercase"
                                  variant="standard"
                                >
                                  <WithStyles(TypographyComp)
                                    bold={true}
                                    innerRef={null}
                                    jssContext={
                                      Object {
                                        "classNamePrefix": "",
                                        "disableStylesGeneration": false,
                                      }
                                    }
                                    textTransform="uppercase"
                                    theme={Object {}}
                                    variant="standard"
                                  >
                                    <TypographyComp
                                      bold={true}
                                      classes={
                                        Object {
                                          "big": "TypographyComp-big-0-3-7",
                                          "bold": "TypographyComp-bold-0-3-1",
                                          "capitalize": "TypographyComp-capitalize-0-3-12",
                                          "distance": "TypographyComp-distance-0-3-6",
                                          "ellipsis": "TypographyComp-ellipsis-0-3-14",
                                          "giant": "TypographyComp-giant-0-3-9",
                                          "heading": "TypographyComp-heading-0-3-8",
                                          "italic": "TypographyComp-italic-0-3-3",
                                          "lowercase": "TypographyComp-lowercase-0-3-11",
                                          "noWrap": "TypographyComp-noWrap-0-3-13",
                                          "semiBold": "TypographyComp-semiBold-0-3-2",
                                          "standard": "TypographyComp-standard-0-3-5",
                                          "subtext": "TypographyComp-subtext-0-3-4",
                                          "uppercase": "TypographyComp-uppercase-0-3-10",
                                        }
                                      }
                                      textTransform="uppercase"
                                      variant="standard"
                                    >
                                      <span
                                        className="TypographyComp-standard-0-3-5 TypographyComp-uppercase-0-3-10 TypographyComp-bold-0-3-1"
                                      >
                                        Confirm
                                      </span>
                                    </TypographyComp>
                                  </WithStyles(TypographyComp)>
                                </Typography>
                              </div>
                            </div>
                          </div>
                        </TouchRippleComp>
                      </WithStyles(TouchRippleComp)>
                    </TouchRipple>
                  </ButtonComp>
                </WithStyles(ButtonComp)>
              </Button>
            </div>
            <div
              className="FooterWithDoubleConfirmationComp-confirmation-0-3-132"
            >
              <Typography
                bold={true}
                variant="distance"
              >
                <WithStyles(TypographyComp)
                  bold={true}
                  innerRef={null}
                  jssContext={
                    Object {
                      "classNamePrefix": "",
                      "disableStylesGeneration": false,
                    }
                  }
                  theme={Object {}}
                  variant="distance"
                >
                  <TypographyComp
                    bold={true}
                    classes={
                      Object {
                        "big": "TypographyComp-big-0-3-7",
                        "bold": "TypographyComp-bold-0-3-1",
                        "capitalize": "TypographyComp-capitalize-0-3-12",
                        "distance": "TypographyComp-distance-0-3-6",
                        "ellipsis": "TypographyComp-ellipsis-0-3-14",
                        "giant": "TypographyComp-giant-0-3-9",
                        "heading": "TypographyComp-heading-0-3-8",
                        "italic": "TypographyComp-italic-0-3-3",
                        "lowercase": "TypographyComp-lowercase-0-3-11",
                        "noWrap": "TypographyComp-noWrap-0-3-13",
                        "semiBold": "TypographyComp-semiBold-0-3-2",
                        "standard": "TypographyComp-standard-0-3-5",
                        "subtext": "TypographyComp-subtext-0-3-4",
                        "uppercase": "TypographyComp-uppercase-0-3-10",
                      }
                    }
                    variant="distance"
                  >
                    <span
                      className="TypographyComp-distance-0-3-6 TypographyComp-bold-0-3-1"
                    >
                      Message
                    </span>
                  </TypographyComp>
                </WithStyles(TypographyComp)>
              </Typography>
              <Button
                color="grey"
                onClick={[Function]}
                text="No"
                variant="raised"
              >
                <WithStyles(ButtonComp)
                  color="grey"
                  innerRef={null}
                  jssContext={
                    Object {
                      "classNamePrefix": "",
                      "disableStylesGeneration": false,
                    }
                  }
                  onClick={[Function]}
                  text="No"
                  theme={Object {}}
                  variant="raised"
                >
                  <ButtonComp
                    classes={
                      Object {
                        "centered": "ButtonComp-centered-0-3-19",
                        "disabled": "ButtonComp-disabled-0-3-32",
                        "flat": "ButtonComp-flat-0-3-17",
                        "fullWidth": "ButtonComp-fullWidth-0-3-31",
                        "green": "ButtonComp-green-0-3-23",
                        "grey": "ButtonComp-grey-0-3-21",
                        "icon": "ButtonComp-icon-0-3-16",
                        "neutral": "ButtonComp-neutral-0-3-22",
                        "orange": "ButtonComp-orange-0-3-24",
                        "primary": "ButtonComp-primary-0-3-20",
                        "raised": "ButtonComp-raised-0-3-18",
                        "red": "ButtonComp-red-0-3-26",
                        "root": "ButtonComp-root-0-3-15",
                        "shadow": "ButtonComp-shadow-0-3-28",
                        "text": "ButtonComp-text-0-3-29",
                        "textIcon": "ButtonComp-textIcon-0-3-30",
                        "transparent": "ButtonComp-transparent-0-3-27",
                        "yellow": "ButtonComp-yellow-0-3-25",
                      }
                    }
                    color="grey"
                    onClick={[Function]}
                    text="No"
                    variant="raised"
                  >
                    <TouchRipple
                      className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
                      disabled={false}
                      onClick={[Function]}
                    >
                      <WithStyles(TouchRippleComp)
                        className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
                        disabled={false}
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        onClick={[Function]}
                        theme={Object {}}
                      >
                        <TouchRippleComp
                          className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
                          classes={
                            Object {
                              "disabled": "TouchRippleComp-disabled-0-3-34",
                              "root": "TouchRippleComp-root-0-3-33",
                            }
                          }
                          disabled={false}
                          onClick={[Function]}
                        >
                          <div
                            className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28 TouchRippleComp-root-0-3-33"
                            onClick={[Function]}
                          >
                            <div
                              className="ButtonComp-raised-0-3-18 ButtonComp-grey-0-3-21"
                            >
                              <div
                                className="ButtonComp-text-0-3-29"
                              >
                                <Typography
                                  bold={true}
                                  textTransform="uppercase"
                                  variant="standard"
                                >
                                  <WithStyles(TypographyComp)
                                    bold={true}
                                    innerRef={null}
                                    jssContext={
                                      Object {
                                        "classNamePrefix": "",
                                        "disableStylesGeneration": false,
                                      }
                                    }
                                    textTransform="uppercase"
                                    theme={Object {}}
                                    variant="standard"
                                  >
                                    <TypographyComp
                                      bold={true}
                                      classes={
                                        Object {
                                          "big": "TypographyComp-big-0-3-7",
                                          "bold": "TypographyComp-bold-0-3-1",
                                          "capitalize": "TypographyComp-capitalize-0-3-12",
                                          "distance": "TypographyComp-distance-0-3-6",
                                          "ellipsis": "TypographyComp-ellipsis-0-3-14",
                                          "giant": "TypographyComp-giant-0-3-9",
                                          "heading": "TypographyComp-heading-0-3-8",
                                          "italic": "TypographyComp-italic-0-3-3",
                                          "lowercase": "TypographyComp-lowercase-0-3-11",
                                          "noWrap": "TypographyComp-noWrap-0-3-13",
                                          "semiBold": "TypographyComp-semiBold-0-3-2",
                                          "standard": "TypographyComp-standard-0-3-5",
                                          "subtext": "TypographyComp-subtext-0-3-4",
                                          "uppercase": "TypographyComp-uppercase-0-3-10",
                                        }
                                      }
                                      textTransform="uppercase"
                                      variant="standard"
                                    >
                                      <span
                                        className="TypographyComp-standard-0-3-5 TypographyComp-uppercase-0-3-10 TypographyComp-bold-0-3-1"
                                      >
                                        No
                                      </span>
                                    </TypographyComp>
                                  </WithStyles(TypographyComp)>
                                </Typography>
                              </div>
                            </div>
                          </div>
                        </TouchRippleComp>
                      </WithStyles(TouchRippleComp)>
                    </TouchRipple>
                  </ButtonComp>
                </WithStyles(ButtonComp)>
              </Button>
              <Button
                color="grey"
                onClick={[Function]}
                text="Yes"
                variant="raised"
              >
                <WithStyles(ButtonComp)
                  color="grey"
                  innerRef={null}
                  jssContext={
                    Object {
                      "classNamePrefix": "",
                      "disableStylesGeneration": false,
                    }
                  }
                  onClick={[Function]}
                  text="Yes"
                  theme={Object {}}
                  variant="raised"
                >
                  <ButtonComp
                    classes={
                      Object {
                        "centered": "ButtonComp-centered-0-3-19",
                        "disabled": "ButtonComp-disabled-0-3-32",
                        "flat": "ButtonComp-flat-0-3-17",
                        "fullWidth": "ButtonComp-fullWidth-0-3-31",
                        "green": "ButtonComp-green-0-3-23",
                        "grey": "ButtonComp-grey-0-3-21",
                        "icon": "ButtonComp-icon-0-3-16",
                        "neutral": "ButtonComp-neutral-0-3-22",
                        "orange": "ButtonComp-orange-0-3-24",
                        "primary": "ButtonComp-primary-0-3-20",
                        "raised": "ButtonComp-raised-0-3-18",
                        "red": "ButtonComp-red-0-3-26",
                        "root": "ButtonComp-root-0-3-15",
                        "shadow": "ButtonComp-shadow-0-3-28",
                        "text": "ButtonComp-text-0-3-29",
                        "textIcon": "ButtonComp-textIcon-0-3-30",
                        "transparent": "ButtonComp-transparent-0-3-27",
                        "yellow": "ButtonComp-yellow-0-3-25",
                      }
                    }
                    color="grey"
                    onClick={[Function]}
                    text="Yes"
                    variant="raised"
                  >
                    <TouchRipple
                      className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
                      disabled={false}
                      onClick={[Function]}
                    >
                      <WithStyles(TouchRippleComp)
                        className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
                        disabled={false}
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        onClick={[Function]}
                        theme={Object {}}
                      >
                        <TouchRippleComp
                          className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28"
                          classes={
                            Object {
                              "disabled": "TouchRippleComp-disabled-0-3-34",
                              "root": "TouchRippleComp-root-0-3-33",
                            }
                          }
                          disabled={false}
                          onClick={[Function]}
                        >
                          <div
                            className="ButtonComp-root-0-3-15 ButtonComp-shadow-0-3-28 TouchRippleComp-root-0-3-33"
                            onClick={[Function]}
                          >
                            <div
                              className="ButtonComp-raised-0-3-18 ButtonComp-grey-0-3-21"
                            >
                              <div
                                className="ButtonComp-text-0-3-29"
                              >
                                <Typography
                                  bold={true}
                                  textTransform="uppercase"
                                  variant="standard"
                                >
                                  <WithStyles(TypographyComp)
                                    bold={true}
                                    innerRef={null}
                                    jssContext={
                                      Object {
                                        "classNamePrefix": "",
                                        "disableStylesGeneration": false,
                                      }
                                    }
                                    textTransform="uppercase"
                                    theme={Object {}}
                                    variant="standard"
                                  >
                                    <TypographyComp
                                      bold={true}
                                      classes={
                                        Object {
                                          "big": "TypographyComp-big-0-3-7",
                                          "bold": "TypographyComp-bold-0-3-1",
                                          "capitalize": "TypographyComp-capitalize-0-3-12",
                                          "distance": "TypographyComp-distance-0-3-6",
                                          "ellipsis": "TypographyComp-ellipsis-0-3-14",
                                          "giant": "TypographyComp-giant-0-3-9",
                                          "heading": "TypographyComp-heading-0-3-8",
                                          "italic": "TypographyComp-italic-0-3-3",
                                          "lowercase": "TypographyComp-lowercase-0-3-11",
                                          "noWrap": "TypographyComp-noWrap-0-3-13",
                                          "semiBold": "TypographyComp-semiBold-0-3-2",
                                          "standard": "TypographyComp-standard-0-3-5",
                                          "subtext": "TypographyComp-subtext-0-3-4",
                                          "uppercase": "TypographyComp-uppercase-0-3-10",
                                        }
                                      }
                                      textTransform="uppercase"
                                      variant="standard"
                                    >
                                      <span
                                        className="TypographyComp-standard-0-3-5 TypographyComp-uppercase-0-3-10 TypographyComp-bold-0-3-1"
                                      >
                                        Yes
                                      </span>
                                    </TypographyComp>
                                  </WithStyles(TypographyComp)>
                                </Typography>
                              </div>
                            </div>
                          </div>
                        </TouchRippleComp>
                      </WithStyles(TouchRippleComp)>
                    </TouchRipple>
                  </ButtonComp>
                </WithStyles(ButtonComp)>
              </Button>
            </div>
          </div>
        </Transition>
      </div>
    </FooterWithDoubleConfirmationComp>
  </WithStyles(FooterWithDoubleConfirmationComp)>
</FooterWithDoubleConfirmation>
`;
