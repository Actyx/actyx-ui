// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Components/Timeline Base 1`] = `
<Timeline
  events={
    Array [
      Object {
        "arrangement": "start",
        "color": "#f57c00",
        "dateFormated": <React.Fragment>
          2/22/2018, 10:55:26 AM
        </React.Fragment>,
        "description": "Error in machine maintenance, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla varius felis fringilla felis volutpat volutpat. Nunc felis mi, placerat vitae posuere nec, condimentum in lectus.",
        "title": "Improper or inadequate maintenance",
      },
      Object {
        "arrangement": "continue",
        "color": "#f57c00",
        "dateFormated": <React.Fragment>
          2/22/2018, 11:55:26 AM
        </React.Fragment>,
        "description": "Mechanical error on the assembly line, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla varius felis fringilla felis volutpat volutpat. Nunc felis mi, placerat vitae posuere nec, condimentum in lectus.",
        "title": "Assembly errors",
      },
      Object {
        "arrangement": "end",
        "color": "#f57c00",
        "dateFormated": <React.Fragment>
          2/22/2018, 12:55:26 PM
        </React.Fragment>,
        "description": "Calibration error on the assembly line.",
        "title": "Assembly errors",
      },
      Object {
        "arrangement": "single",
        "color": "#4caf50",
        "dateFormated": <React.Fragment>
          2/22/2018, 1:55:26 PM
        </React.Fragment>,
        "title": "Resolved",
      },
    ]
  }
  scrollToLast={true}
>
  <WithStyles(TimelineComp)
    events={
      Array [
        Object {
          "arrangement": "start",
          "color": "#f57c00",
          "dateFormated": <React.Fragment>
            2/22/2018, 10:55:26 AM
          </React.Fragment>,
          "description": "Error in machine maintenance, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla varius felis fringilla felis volutpat volutpat. Nunc felis mi, placerat vitae posuere nec, condimentum in lectus.",
          "title": "Improper or inadequate maintenance",
        },
        Object {
          "arrangement": "continue",
          "color": "#f57c00",
          "dateFormated": <React.Fragment>
            2/22/2018, 11:55:26 AM
          </React.Fragment>,
          "description": "Mechanical error on the assembly line, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla varius felis fringilla felis volutpat volutpat. Nunc felis mi, placerat vitae posuere nec, condimentum in lectus.",
          "title": "Assembly errors",
        },
        Object {
          "arrangement": "end",
          "color": "#f57c00",
          "dateFormated": <React.Fragment>
            2/22/2018, 12:55:26 PM
          </React.Fragment>,
          "description": "Calibration error on the assembly line.",
          "title": "Assembly errors",
        },
        Object {
          "arrangement": "single",
          "color": "#4caf50",
          "dateFormated": <React.Fragment>
            2/22/2018, 1:55:26 PM
          </React.Fragment>,
          "title": "Resolved",
        },
      ]
    }
    innerRef={null}
    jssContext={
      Object {
        "classNamePrefix": "",
        "disableStylesGeneration": false,
      }
    }
    scrollToLast={true}
    theme={Object {}}
  >
    <TimelineComp
      classes={
        Object {
          "content": "TimelineComp-content-0-3-328",
          "root": "TimelineComp-root-0-3-327",
        }
      }
      events={
        Array [
          Object {
            "arrangement": "start",
            "color": "#f57c00",
            "dateFormated": <React.Fragment>
              2/22/2018, 10:55:26 AM
            </React.Fragment>,
            "description": "Error in machine maintenance, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla varius felis fringilla felis volutpat volutpat. Nunc felis mi, placerat vitae posuere nec, condimentum in lectus.",
            "title": "Improper or inadequate maintenance",
          },
          Object {
            "arrangement": "continue",
            "color": "#f57c00",
            "dateFormated": <React.Fragment>
              2/22/2018, 11:55:26 AM
            </React.Fragment>,
            "description": "Mechanical error on the assembly line, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla varius felis fringilla felis volutpat volutpat. Nunc felis mi, placerat vitae posuere nec, condimentum in lectus.",
            "title": "Assembly errors",
          },
          Object {
            "arrangement": "end",
            "color": "#f57c00",
            "dateFormated": <React.Fragment>
              2/22/2018, 12:55:26 PM
            </React.Fragment>,
            "description": "Calibration error on the assembly line.",
            "title": "Assembly errors",
          },
          Object {
            "arrangement": "single",
            "color": "#4caf50",
            "dateFormated": <React.Fragment>
              2/22/2018, 1:55:26 PM
            </React.Fragment>,
            "title": "Resolved",
          },
        ]
      }
      scrollToLast={true}
    >
      <div
        className="TimelineComp-root-0-3-327"
      >
        <div
          className="TimelineComp-content-0-3-328"
        >
          <TimelineEvent
            content={
              Object {
                "dateFormatted": <React.Fragment>
                  2/22/2018, 10:55:26 AM
                </React.Fragment>,
                "description": "Error in machine maintenance, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla varius felis fringilla felis volutpat volutpat. Nunc felis mi, placerat vitae posuere nec, condimentum in lectus.",
                "title": "Improper or inadequate maintenance",
              }
            }
            domId="0-[object Object]"
            key="0-[object Object]"
            status={
              Object {
                "arrangement": "start",
                "color": "#f57c00",
              }
            }
          >
            <WithStyles(TimelineEventComp)
              content={
                Object {
                  "dateFormatted": <React.Fragment>
                    2/22/2018, 10:55:26 AM
                  </React.Fragment>,
                  "description": "Error in machine maintenance, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla varius felis fringilla felis volutpat volutpat. Nunc felis mi, placerat vitae posuere nec, condimentum in lectus.",
                  "title": "Improper or inadequate maintenance",
                }
              }
              domId="0-[object Object]"
              innerRef={null}
              jssContext={
                Object {
                  "classNamePrefix": "",
                  "disableStylesGeneration": false,
                }
              }
              status={
                Object {
                  "arrangement": "start",
                  "color": "#f57c00",
                }
              }
              theme={Object {}}
            >
              <TimelineEventComp
                classes={
                  Object {
                    "content": "TimelineEventComp-content-0-3-331",
                    "root": "TimelineEventComp-root-0-3-329",
                    "status": "TimelineEventComp-status-0-3-330",
                  }
                }
                content={
                  Object {
                    "dateFormatted": <React.Fragment>
                      2/22/2018, 10:55:26 AM
                    </React.Fragment>,
                    "description": "Error in machine maintenance, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla varius felis fringilla felis volutpat volutpat. Nunc felis mi, placerat vitae posuere nec, condimentum in lectus.",
                    "title": "Improper or inadequate maintenance",
                  }
                }
                domId="0-[object Object]"
                status={
                  Object {
                    "arrangement": "start",
                    "color": "#f57c00",
                  }
                }
              >
                <div
                  className="TimelineEventComp-root-0-3-329"
                  id="0-[object Object]"
                >
                  <div
                    className="TimelineEventComp-status-0-3-330"
                  >
                    <Status
                      arrangement="start"
                      color="#f57c00"
                    >
                      <WithStyles(StatusComp)
                        arrangement="start"
                        color="#f57c00"
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        theme={Object {}}
                      >
                        <StatusComp
                          arrangement="start"
                          classes={
                            Object {
                              "circle": "StatusComp-circle-0-3-336",
                              "circleWrapper": "StatusComp-circleWrapper-0-3-335",
                              "line": "StatusComp-line-0-3-334",
                              "lineWrapper": "StatusComp-lineWrapper-0-3-333",
                              "root": "StatusComp-root-0-3-332",
                            }
                          }
                          color="#f57c00"
                        >
                          <div
                            className="StatusComp-root-0-3-332"
                          >
                            <div
                              className="StatusComp-lineWrapper-0-3-333"
                              style={
                                Object {
                                  "paddingTop": 8,
                                }
                              }
                            >
                              <div
                                className="StatusComp-line-0-3-334"
                                style={
                                  Object {
                                    "backgroundColor": "#f57c00",
                                  }
                                }
                              />
                            </div>
                            <div
                              className="StatusComp-circleWrapper-0-3-335"
                            >
                              <div
                                className="StatusComp-circle-0-3-336"
                                style={
                                  Object {
                                    "backgroundColor": "#f57c00",
                                  }
                                }
                              />
                            </div>
                          </div>
                        </StatusComp>
                      </WithStyles(StatusComp)>
                    </Status>
                  </div>
                  <div
                    className="TimelineEventComp-content-0-3-331"
                  >
                    <Content
                      dateFormatted={
                        <React.Fragment>
                          2/22/2018, 10:55:26 AM
                        </React.Fragment>
                      }
                      description="Error in machine maintenance, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla varius felis fringilla felis volutpat volutpat. Nunc felis mi, placerat vitae posuere nec, condimentum in lectus."
                      title="Improper or inadequate maintenance"
                    >
                      <WithStyles(ContentComp)
                        dateFormatted={
                          <React.Fragment>
                            2/22/2018, 10:55:26 AM
                          </React.Fragment>
                        }
                        description="Error in machine maintenance, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla varius felis fringilla felis volutpat volutpat. Nunc felis mi, placerat vitae posuere nec, condimentum in lectus."
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        theme={Object {}}
                        title="Improper or inadequate maintenance"
                      >
                        <ContentComp
                          classes={
                            Object {
                              "description": "ContentComp-description-0-3-338",
                              "root": "ContentComp-root-0-3-337",
                            }
                          }
                          dateFormatted={
                            <React.Fragment>
                              2/22/2018, 10:55:26 AM
                            </React.Fragment>
                          }
                          description="Error in machine maintenance, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla varius felis fringilla felis volutpat volutpat. Nunc felis mi, placerat vitae posuere nec, condimentum in lectus."
                          title="Improper or inadequate maintenance"
                        >
                          <div
                            className="ContentComp-root-0-3-337"
                          >
                            <div>
                              <Typography
                                bold={true}
                                className="ContentComp-description-0-3-338"
                                variant="distance"
                              >
                                <WithStyles(TypographyComp)
                                  bold={true}
                                  className="ContentComp-description-0-3-338"
                                  innerRef={null}
                                  jssContext={
                                    Object {
                                      "classNamePrefix": "",
                                      "disableStylesGeneration": false,
                                    }
                                  }
                                  theme={Object {}}
                                  variant="distance"
                                >
                                  <TypographyComp
                                    bold={true}
                                    className="ContentComp-description-0-3-338"
                                    classes={
                                      Object {
                                        "big": "TypographyComp-big-0-3-7",
                                        "bold": "TypographyComp-bold-0-3-1",
                                        "capitalize": "TypographyComp-capitalize-0-3-12",
                                        "distance": "TypographyComp-distance-0-3-6",
                                        "ellipsis": "TypographyComp-ellipsis-0-3-14",
                                        "giant": "TypographyComp-giant-0-3-9",
                                        "heading": "TypographyComp-heading-0-3-8",
                                        "italic": "TypographyComp-italic-0-3-3",
                                        "lowercase": "TypographyComp-lowercase-0-3-11",
                                        "noWrap": "TypographyComp-noWrap-0-3-13",
                                        "semiBold": "TypographyComp-semiBold-0-3-2",
                                        "standard": "TypographyComp-standard-0-3-5",
                                        "subtext": "TypographyComp-subtext-0-3-4",
                                        "uppercase": "TypographyComp-uppercase-0-3-10",
                                      }
                                    }
                                    variant="distance"
                                  >
                                    <span
                                      className="ContentComp-description-0-3-338 TypographyComp-distance-0-3-6 TypographyComp-bold-0-3-1"
                                    >
                                      Improper or inadequate maintenance
                                    </span>
                                  </TypographyComp>
                                </WithStyles(TypographyComp)>
                              </Typography>
                            </div>
                            <div>
                              <Typography
                                bold={true}
                                className="ContentComp-description-0-3-338"
                                variant="standard"
                              >
                                <WithStyles(TypographyComp)
                                  bold={true}
                                  className="ContentComp-description-0-3-338"
                                  innerRef={null}
                                  jssContext={
                                    Object {
                                      "classNamePrefix": "",
                                      "disableStylesGeneration": false,
                                    }
                                  }
                                  theme={Object {}}
                                  variant="standard"
                                >
                                  <TypographyComp
                                    bold={true}
                                    className="ContentComp-description-0-3-338"
                                    classes={
                                      Object {
                                        "big": "TypographyComp-big-0-3-7",
                                        "bold": "TypographyComp-bold-0-3-1",
                                        "capitalize": "TypographyComp-capitalize-0-3-12",
                                        "distance": "TypographyComp-distance-0-3-6",
                                        "ellipsis": "TypographyComp-ellipsis-0-3-14",
                                        "giant": "TypographyComp-giant-0-3-9",
                                        "heading": "TypographyComp-heading-0-3-8",
                                        "italic": "TypographyComp-italic-0-3-3",
                                        "lowercase": "TypographyComp-lowercase-0-3-11",
                                        "noWrap": "TypographyComp-noWrap-0-3-13",
                                        "semiBold": "TypographyComp-semiBold-0-3-2",
                                        "standard": "TypographyComp-standard-0-3-5",
                                        "subtext": "TypographyComp-subtext-0-3-4",
                                        "uppercase": "TypographyComp-uppercase-0-3-10",
                                      }
                                    }
                                    variant="standard"
                                  >
                                    <span
                                      className="ContentComp-description-0-3-338 TypographyComp-standard-0-3-5 TypographyComp-bold-0-3-1"
                                    >
                                      2/22/2018, 10:55:26 AM
                                    </span>
                                  </TypographyComp>
                                </WithStyles(TypographyComp)>
                              </Typography>
                            </div>
                            <div>
                              <Typography
                                className="ContentComp-description-0-3-338"
                                variant="standard"
                              >
                                <WithStyles(TypographyComp)
                                  className="ContentComp-description-0-3-338"
                                  innerRef={null}
                                  jssContext={
                                    Object {
                                      "classNamePrefix": "",
                                      "disableStylesGeneration": false,
                                    }
                                  }
                                  theme={Object {}}
                                  variant="standard"
                                >
                                  <TypographyComp
                                    className="ContentComp-description-0-3-338"
                                    classes={
                                      Object {
                                        "big": "TypographyComp-big-0-3-7",
                                        "bold": "TypographyComp-bold-0-3-1",
                                        "capitalize": "TypographyComp-capitalize-0-3-12",
                                        "distance": "TypographyComp-distance-0-3-6",
                                        "ellipsis": "TypographyComp-ellipsis-0-3-14",
                                        "giant": "TypographyComp-giant-0-3-9",
                                        "heading": "TypographyComp-heading-0-3-8",
                                        "italic": "TypographyComp-italic-0-3-3",
                                        "lowercase": "TypographyComp-lowercase-0-3-11",
                                        "noWrap": "TypographyComp-noWrap-0-3-13",
                                        "semiBold": "TypographyComp-semiBold-0-3-2",
                                        "standard": "TypographyComp-standard-0-3-5",
                                        "subtext": "TypographyComp-subtext-0-3-4",
                                        "uppercase": "TypographyComp-uppercase-0-3-10",
                                      }
                                    }
                                    variant="standard"
                                  >
                                    <span
                                      className="ContentComp-description-0-3-338 TypographyComp-standard-0-3-5"
                                    >
                                      Error in machine maintenance, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla varius felis fringilla felis volutpat volutpat. Nunc felis mi, placerat vitae posuere nec, condimentum in lectus.
                                    </span>
                                  </TypographyComp>
                                </WithStyles(TypographyComp)>
                              </Typography>
                            </div>
                          </div>
                        </ContentComp>
                      </WithStyles(ContentComp)>
                    </Content>
                  </div>
                </div>
              </TimelineEventComp>
            </WithStyles(TimelineEventComp)>
          </TimelineEvent>
          <TimelineEvent
            content={
              Object {
                "dateFormatted": <React.Fragment>
                  2/22/2018, 11:55:26 AM
                </React.Fragment>,
                "description": "Mechanical error on the assembly line, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla varius felis fringilla felis volutpat volutpat. Nunc felis mi, placerat vitae posuere nec, condimentum in lectus.",
                "title": "Assembly errors",
              }
            }
            domId="1-[object Object]"
            key="1-[object Object]"
            status={
              Object {
                "arrangement": "continue",
                "color": "#f57c00",
              }
            }
          >
            <WithStyles(TimelineEventComp)
              content={
                Object {
                  "dateFormatted": <React.Fragment>
                    2/22/2018, 11:55:26 AM
                  </React.Fragment>,
                  "description": "Mechanical error on the assembly line, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla varius felis fringilla felis volutpat volutpat. Nunc felis mi, placerat vitae posuere nec, condimentum in lectus.",
                  "title": "Assembly errors",
                }
              }
              domId="1-[object Object]"
              innerRef={null}
              jssContext={
                Object {
                  "classNamePrefix": "",
                  "disableStylesGeneration": false,
                }
              }
              status={
                Object {
                  "arrangement": "continue",
                  "color": "#f57c00",
                }
              }
              theme={Object {}}
            >
              <TimelineEventComp
                classes={
                  Object {
                    "content": "TimelineEventComp-content-0-3-331",
                    "root": "TimelineEventComp-root-0-3-329",
                    "status": "TimelineEventComp-status-0-3-330",
                  }
                }
                content={
                  Object {
                    "dateFormatted": <React.Fragment>
                      2/22/2018, 11:55:26 AM
                    </React.Fragment>,
                    "description": "Mechanical error on the assembly line, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla varius felis fringilla felis volutpat volutpat. Nunc felis mi, placerat vitae posuere nec, condimentum in lectus.",
                    "title": "Assembly errors",
                  }
                }
                domId="1-[object Object]"
                status={
                  Object {
                    "arrangement": "continue",
                    "color": "#f57c00",
                  }
                }
              >
                <div
                  className="TimelineEventComp-root-0-3-329"
                  id="1-[object Object]"
                >
                  <div
                    className="TimelineEventComp-status-0-3-330"
                  >
                    <Status
                      arrangement="continue"
                      color="#f57c00"
                    >
                      <WithStyles(StatusComp)
                        arrangement="continue"
                        color="#f57c00"
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        theme={Object {}}
                      >
                        <StatusComp
                          arrangement="continue"
                          classes={
                            Object {
                              "circle": "StatusComp-circle-0-3-336",
                              "circleWrapper": "StatusComp-circleWrapper-0-3-335",
                              "line": "StatusComp-line-0-3-334",
                              "lineWrapper": "StatusComp-lineWrapper-0-3-333",
                              "root": "StatusComp-root-0-3-332",
                            }
                          }
                          color="#f57c00"
                        >
                          <div
                            className="StatusComp-root-0-3-332"
                          >
                            <div
                              className="StatusComp-lineWrapper-0-3-333"
                              style={
                                Object {
                                  "paddingTop": 0,
                                }
                              }
                            >
                              <div
                                className="StatusComp-line-0-3-334"
                                style={
                                  Object {
                                    "backgroundColor": "#f57c00",
                                  }
                                }
                              />
                            </div>
                            <div
                              className="StatusComp-circleWrapper-0-3-335"
                            >
                              <div
                                className="StatusComp-circle-0-3-336"
                                style={
                                  Object {
                                    "backgroundColor": "#f57c00",
                                  }
                                }
                              />
                            </div>
                          </div>
                        </StatusComp>
                      </WithStyles(StatusComp)>
                    </Status>
                  </div>
                  <div
                    className="TimelineEventComp-content-0-3-331"
                  >
                    <Content
                      dateFormatted={
                        <React.Fragment>
                          2/22/2018, 11:55:26 AM
                        </React.Fragment>
                      }
                      description="Mechanical error on the assembly line, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla varius felis fringilla felis volutpat volutpat. Nunc felis mi, placerat vitae posuere nec, condimentum in lectus."
                      title="Assembly errors"
                    >
                      <WithStyles(ContentComp)
                        dateFormatted={
                          <React.Fragment>
                            2/22/2018, 11:55:26 AM
                          </React.Fragment>
                        }
                        description="Mechanical error on the assembly line, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla varius felis fringilla felis volutpat volutpat. Nunc felis mi, placerat vitae posuere nec, condimentum in lectus."
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        theme={Object {}}
                        title="Assembly errors"
                      >
                        <ContentComp
                          classes={
                            Object {
                              "description": "ContentComp-description-0-3-338",
                              "root": "ContentComp-root-0-3-337",
                            }
                          }
                          dateFormatted={
                            <React.Fragment>
                              2/22/2018, 11:55:26 AM
                            </React.Fragment>
                          }
                          description="Mechanical error on the assembly line, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla varius felis fringilla felis volutpat volutpat. Nunc felis mi, placerat vitae posuere nec, condimentum in lectus."
                          title="Assembly errors"
                        >
                          <div
                            className="ContentComp-root-0-3-337"
                          >
                            <div>
                              <Typography
                                bold={true}
                                className="ContentComp-description-0-3-338"
                                variant="distance"
                              >
                                <WithStyles(TypographyComp)
                                  bold={true}
                                  className="ContentComp-description-0-3-338"
                                  innerRef={null}
                                  jssContext={
                                    Object {
                                      "classNamePrefix": "",
                                      "disableStylesGeneration": false,
                                    }
                                  }
                                  theme={Object {}}
                                  variant="distance"
                                >
                                  <TypographyComp
                                    bold={true}
                                    className="ContentComp-description-0-3-338"
                                    classes={
                                      Object {
                                        "big": "TypographyComp-big-0-3-7",
                                        "bold": "TypographyComp-bold-0-3-1",
                                        "capitalize": "TypographyComp-capitalize-0-3-12",
                                        "distance": "TypographyComp-distance-0-3-6",
                                        "ellipsis": "TypographyComp-ellipsis-0-3-14",
                                        "giant": "TypographyComp-giant-0-3-9",
                                        "heading": "TypographyComp-heading-0-3-8",
                                        "italic": "TypographyComp-italic-0-3-3",
                                        "lowercase": "TypographyComp-lowercase-0-3-11",
                                        "noWrap": "TypographyComp-noWrap-0-3-13",
                                        "semiBold": "TypographyComp-semiBold-0-3-2",
                                        "standard": "TypographyComp-standard-0-3-5",
                                        "subtext": "TypographyComp-subtext-0-3-4",
                                        "uppercase": "TypographyComp-uppercase-0-3-10",
                                      }
                                    }
                                    variant="distance"
                                  >
                                    <span
                                      className="ContentComp-description-0-3-338 TypographyComp-distance-0-3-6 TypographyComp-bold-0-3-1"
                                    >
                                      Assembly errors
                                    </span>
                                  </TypographyComp>
                                </WithStyles(TypographyComp)>
                              </Typography>
                            </div>
                            <div>
                              <Typography
                                bold={true}
                                className="ContentComp-description-0-3-338"
                                variant="standard"
                              >
                                <WithStyles(TypographyComp)
                                  bold={true}
                                  className="ContentComp-description-0-3-338"
                                  innerRef={null}
                                  jssContext={
                                    Object {
                                      "classNamePrefix": "",
                                      "disableStylesGeneration": false,
                                    }
                                  }
                                  theme={Object {}}
                                  variant="standard"
                                >
                                  <TypographyComp
                                    bold={true}
                                    className="ContentComp-description-0-3-338"
                                    classes={
                                      Object {
                                        "big": "TypographyComp-big-0-3-7",
                                        "bold": "TypographyComp-bold-0-3-1",
                                        "capitalize": "TypographyComp-capitalize-0-3-12",
                                        "distance": "TypographyComp-distance-0-3-6",
                                        "ellipsis": "TypographyComp-ellipsis-0-3-14",
                                        "giant": "TypographyComp-giant-0-3-9",
                                        "heading": "TypographyComp-heading-0-3-8",
                                        "italic": "TypographyComp-italic-0-3-3",
                                        "lowercase": "TypographyComp-lowercase-0-3-11",
                                        "noWrap": "TypographyComp-noWrap-0-3-13",
                                        "semiBold": "TypographyComp-semiBold-0-3-2",
                                        "standard": "TypographyComp-standard-0-3-5",
                                        "subtext": "TypographyComp-subtext-0-3-4",
                                        "uppercase": "TypographyComp-uppercase-0-3-10",
                                      }
                                    }
                                    variant="standard"
                                  >
                                    <span
                                      className="ContentComp-description-0-3-338 TypographyComp-standard-0-3-5 TypographyComp-bold-0-3-1"
                                    >
                                      2/22/2018, 11:55:26 AM
                                    </span>
                                  </TypographyComp>
                                </WithStyles(TypographyComp)>
                              </Typography>
                            </div>
                            <div>
                              <Typography
                                className="ContentComp-description-0-3-338"
                                variant="standard"
                              >
                                <WithStyles(TypographyComp)
                                  className="ContentComp-description-0-3-338"
                                  innerRef={null}
                                  jssContext={
                                    Object {
                                      "classNamePrefix": "",
                                      "disableStylesGeneration": false,
                                    }
                                  }
                                  theme={Object {}}
                                  variant="standard"
                                >
                                  <TypographyComp
                                    className="ContentComp-description-0-3-338"
                                    classes={
                                      Object {
                                        "big": "TypographyComp-big-0-3-7",
                                        "bold": "TypographyComp-bold-0-3-1",
                                        "capitalize": "TypographyComp-capitalize-0-3-12",
                                        "distance": "TypographyComp-distance-0-3-6",
                                        "ellipsis": "TypographyComp-ellipsis-0-3-14",
                                        "giant": "TypographyComp-giant-0-3-9",
                                        "heading": "TypographyComp-heading-0-3-8",
                                        "italic": "TypographyComp-italic-0-3-3",
                                        "lowercase": "TypographyComp-lowercase-0-3-11",
                                        "noWrap": "TypographyComp-noWrap-0-3-13",
                                        "semiBold": "TypographyComp-semiBold-0-3-2",
                                        "standard": "TypographyComp-standard-0-3-5",
                                        "subtext": "TypographyComp-subtext-0-3-4",
                                        "uppercase": "TypographyComp-uppercase-0-3-10",
                                      }
                                    }
                                    variant="standard"
                                  >
                                    <span
                                      className="ContentComp-description-0-3-338 TypographyComp-standard-0-3-5"
                                    >
                                      Mechanical error on the assembly line, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla varius felis fringilla felis volutpat volutpat. Nunc felis mi, placerat vitae posuere nec, condimentum in lectus.
                                    </span>
                                  </TypographyComp>
                                </WithStyles(TypographyComp)>
                              </Typography>
                            </div>
                          </div>
                        </ContentComp>
                      </WithStyles(ContentComp)>
                    </Content>
                  </div>
                </div>
              </TimelineEventComp>
            </WithStyles(TimelineEventComp)>
          </TimelineEvent>
          <TimelineEvent
            content={
              Object {
                "dateFormatted": <React.Fragment>
                  2/22/2018, 12:55:26 PM
                </React.Fragment>,
                "description": "Calibration error on the assembly line.",
                "title": "Assembly errors",
              }
            }
            domId="2-[object Object]"
            key="2-[object Object]"
            status={
              Object {
                "arrangement": "end",
                "color": "#f57c00",
              }
            }
          >
            <WithStyles(TimelineEventComp)
              content={
                Object {
                  "dateFormatted": <React.Fragment>
                    2/22/2018, 12:55:26 PM
                  </React.Fragment>,
                  "description": "Calibration error on the assembly line.",
                  "title": "Assembly errors",
                }
              }
              domId="2-[object Object]"
              innerRef={null}
              jssContext={
                Object {
                  "classNamePrefix": "",
                  "disableStylesGeneration": false,
                }
              }
              status={
                Object {
                  "arrangement": "end",
                  "color": "#f57c00",
                }
              }
              theme={Object {}}
            >
              <TimelineEventComp
                classes={
                  Object {
                    "content": "TimelineEventComp-content-0-3-331",
                    "root": "TimelineEventComp-root-0-3-329",
                    "status": "TimelineEventComp-status-0-3-330",
                  }
                }
                content={
                  Object {
                    "dateFormatted": <React.Fragment>
                      2/22/2018, 12:55:26 PM
                    </React.Fragment>,
                    "description": "Calibration error on the assembly line.",
                    "title": "Assembly errors",
                  }
                }
                domId="2-[object Object]"
                status={
                  Object {
                    "arrangement": "end",
                    "color": "#f57c00",
                  }
                }
              >
                <div
                  className="TimelineEventComp-root-0-3-329"
                  id="2-[object Object]"
                >
                  <div
                    className="TimelineEventComp-status-0-3-330"
                  >
                    <Status
                      arrangement="end"
                      color="#f57c00"
                    >
                      <WithStyles(StatusComp)
                        arrangement="end"
                        color="#f57c00"
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        theme={Object {}}
                      >
                        <StatusComp
                          arrangement="end"
                          classes={
                            Object {
                              "circle": "StatusComp-circle-0-3-336",
                              "circleWrapper": "StatusComp-circleWrapper-0-3-335",
                              "line": "StatusComp-line-0-3-334",
                              "lineWrapper": "StatusComp-lineWrapper-0-3-333",
                              "root": "StatusComp-root-0-3-332",
                            }
                          }
                          color="#f57c00"
                        >
                          <div
                            className="StatusComp-root-0-3-332"
                          >
                            <div
                              className="StatusComp-lineWrapper-0-3-333"
                              style={
                                Object {
                                  "height": 8,
                                  "paddingTop": 0,
                                }
                              }
                            >
                              <div
                                className="StatusComp-line-0-3-334"
                                style={
                                  Object {
                                    "backgroundColor": "#f57c00",
                                  }
                                }
                              />
                            </div>
                            <div
                              className="StatusComp-circleWrapper-0-3-335"
                            >
                              <div
                                className="StatusComp-circle-0-3-336"
                                style={
                                  Object {
                                    "backgroundColor": "#f57c00",
                                  }
                                }
                              />
                            </div>
                          </div>
                        </StatusComp>
                      </WithStyles(StatusComp)>
                    </Status>
                  </div>
                  <div
                    className="TimelineEventComp-content-0-3-331"
                  >
                    <Content
                      dateFormatted={
                        <React.Fragment>
                          2/22/2018, 12:55:26 PM
                        </React.Fragment>
                      }
                      description="Calibration error on the assembly line."
                      title="Assembly errors"
                    >
                      <WithStyles(ContentComp)
                        dateFormatted={
                          <React.Fragment>
                            2/22/2018, 12:55:26 PM
                          </React.Fragment>
                        }
                        description="Calibration error on the assembly line."
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        theme={Object {}}
                        title="Assembly errors"
                      >
                        <ContentComp
                          classes={
                            Object {
                              "description": "ContentComp-description-0-3-338",
                              "root": "ContentComp-root-0-3-337",
                            }
                          }
                          dateFormatted={
                            <React.Fragment>
                              2/22/2018, 12:55:26 PM
                            </React.Fragment>
                          }
                          description="Calibration error on the assembly line."
                          title="Assembly errors"
                        >
                          <div
                            className="ContentComp-root-0-3-337"
                          >
                            <div>
                              <Typography
                                bold={true}
                                className="ContentComp-description-0-3-338"
                                variant="distance"
                              >
                                <WithStyles(TypographyComp)
                                  bold={true}
                                  className="ContentComp-description-0-3-338"
                                  innerRef={null}
                                  jssContext={
                                    Object {
                                      "classNamePrefix": "",
                                      "disableStylesGeneration": false,
                                    }
                                  }
                                  theme={Object {}}
                                  variant="distance"
                                >
                                  <TypographyComp
                                    bold={true}
                                    className="ContentComp-description-0-3-338"
                                    classes={
                                      Object {
                                        "big": "TypographyComp-big-0-3-7",
                                        "bold": "TypographyComp-bold-0-3-1",
                                        "capitalize": "TypographyComp-capitalize-0-3-12",
                                        "distance": "TypographyComp-distance-0-3-6",
                                        "ellipsis": "TypographyComp-ellipsis-0-3-14",
                                        "giant": "TypographyComp-giant-0-3-9",
                                        "heading": "TypographyComp-heading-0-3-8",
                                        "italic": "TypographyComp-italic-0-3-3",
                                        "lowercase": "TypographyComp-lowercase-0-3-11",
                                        "noWrap": "TypographyComp-noWrap-0-3-13",
                                        "semiBold": "TypographyComp-semiBold-0-3-2",
                                        "standard": "TypographyComp-standard-0-3-5",
                                        "subtext": "TypographyComp-subtext-0-3-4",
                                        "uppercase": "TypographyComp-uppercase-0-3-10",
                                      }
                                    }
                                    variant="distance"
                                  >
                                    <span
                                      className="ContentComp-description-0-3-338 TypographyComp-distance-0-3-6 TypographyComp-bold-0-3-1"
                                    >
                                      Assembly errors
                                    </span>
                                  </TypographyComp>
                                </WithStyles(TypographyComp)>
                              </Typography>
                            </div>
                            <div>
                              <Typography
                                bold={true}
                                className="ContentComp-description-0-3-338"
                                variant="standard"
                              >
                                <WithStyles(TypographyComp)
                                  bold={true}
                                  className="ContentComp-description-0-3-338"
                                  innerRef={null}
                                  jssContext={
                                    Object {
                                      "classNamePrefix": "",
                                      "disableStylesGeneration": false,
                                    }
                                  }
                                  theme={Object {}}
                                  variant="standard"
                                >
                                  <TypographyComp
                                    bold={true}
                                    className="ContentComp-description-0-3-338"
                                    classes={
                                      Object {
                                        "big": "TypographyComp-big-0-3-7",
                                        "bold": "TypographyComp-bold-0-3-1",
                                        "capitalize": "TypographyComp-capitalize-0-3-12",
                                        "distance": "TypographyComp-distance-0-3-6",
                                        "ellipsis": "TypographyComp-ellipsis-0-3-14",
                                        "giant": "TypographyComp-giant-0-3-9",
                                        "heading": "TypographyComp-heading-0-3-8",
                                        "italic": "TypographyComp-italic-0-3-3",
                                        "lowercase": "TypographyComp-lowercase-0-3-11",
                                        "noWrap": "TypographyComp-noWrap-0-3-13",
                                        "semiBold": "TypographyComp-semiBold-0-3-2",
                                        "standard": "TypographyComp-standard-0-3-5",
                                        "subtext": "TypographyComp-subtext-0-3-4",
                                        "uppercase": "TypographyComp-uppercase-0-3-10",
                                      }
                                    }
                                    variant="standard"
                                  >
                                    <span
                                      className="ContentComp-description-0-3-338 TypographyComp-standard-0-3-5 TypographyComp-bold-0-3-1"
                                    >
                                      2/22/2018, 12:55:26 PM
                                    </span>
                                  </TypographyComp>
                                </WithStyles(TypographyComp)>
                              </Typography>
                            </div>
                            <div>
                              <Typography
                                className="ContentComp-description-0-3-338"
                                variant="standard"
                              >
                                <WithStyles(TypographyComp)
                                  className="ContentComp-description-0-3-338"
                                  innerRef={null}
                                  jssContext={
                                    Object {
                                      "classNamePrefix": "",
                                      "disableStylesGeneration": false,
                                    }
                                  }
                                  theme={Object {}}
                                  variant="standard"
                                >
                                  <TypographyComp
                                    className="ContentComp-description-0-3-338"
                                    classes={
                                      Object {
                                        "big": "TypographyComp-big-0-3-7",
                                        "bold": "TypographyComp-bold-0-3-1",
                                        "capitalize": "TypographyComp-capitalize-0-3-12",
                                        "distance": "TypographyComp-distance-0-3-6",
                                        "ellipsis": "TypographyComp-ellipsis-0-3-14",
                                        "giant": "TypographyComp-giant-0-3-9",
                                        "heading": "TypographyComp-heading-0-3-8",
                                        "italic": "TypographyComp-italic-0-3-3",
                                        "lowercase": "TypographyComp-lowercase-0-3-11",
                                        "noWrap": "TypographyComp-noWrap-0-3-13",
                                        "semiBold": "TypographyComp-semiBold-0-3-2",
                                        "standard": "TypographyComp-standard-0-3-5",
                                        "subtext": "TypographyComp-subtext-0-3-4",
                                        "uppercase": "TypographyComp-uppercase-0-3-10",
                                      }
                                    }
                                    variant="standard"
                                  >
                                    <span
                                      className="ContentComp-description-0-3-338 TypographyComp-standard-0-3-5"
                                    >
                                      Calibration error on the assembly line.
                                    </span>
                                  </TypographyComp>
                                </WithStyles(TypographyComp)>
                              </Typography>
                            </div>
                          </div>
                        </ContentComp>
                      </WithStyles(ContentComp)>
                    </Content>
                  </div>
                </div>
              </TimelineEventComp>
            </WithStyles(TimelineEventComp)>
          </TimelineEvent>
          <TimelineEvent
            content={
              Object {
                "dateFormatted": <React.Fragment>
                  2/22/2018, 1:55:26 PM
                </React.Fragment>,
                "description": undefined,
                "title": "Resolved",
              }
            }
            domId="3-[object Object]"
            key="3-[object Object]"
            status={
              Object {
                "arrangement": "single",
                "color": "#4caf50",
              }
            }
          >
            <WithStyles(TimelineEventComp)
              content={
                Object {
                  "dateFormatted": <React.Fragment>
                    2/22/2018, 1:55:26 PM
                  </React.Fragment>,
                  "description": undefined,
                  "title": "Resolved",
                }
              }
              domId="3-[object Object]"
              innerRef={null}
              jssContext={
                Object {
                  "classNamePrefix": "",
                  "disableStylesGeneration": false,
                }
              }
              status={
                Object {
                  "arrangement": "single",
                  "color": "#4caf50",
                }
              }
              theme={Object {}}
            >
              <TimelineEventComp
                classes={
                  Object {
                    "content": "TimelineEventComp-content-0-3-331",
                    "root": "TimelineEventComp-root-0-3-329",
                    "status": "TimelineEventComp-status-0-3-330",
                  }
                }
                content={
                  Object {
                    "dateFormatted": <React.Fragment>
                      2/22/2018, 1:55:26 PM
                    </React.Fragment>,
                    "description": undefined,
                    "title": "Resolved",
                  }
                }
                domId="3-[object Object]"
                status={
                  Object {
                    "arrangement": "single",
                    "color": "#4caf50",
                  }
                }
              >
                <div
                  className="TimelineEventComp-root-0-3-329"
                  id="3-[object Object]"
                >
                  <div
                    className="TimelineEventComp-status-0-3-330"
                  >
                    <Status
                      arrangement="single"
                      color="#4caf50"
                    >
                      <WithStyles(StatusComp)
                        arrangement="single"
                        color="#4caf50"
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        theme={Object {}}
                      >
                        <StatusComp
                          arrangement="single"
                          classes={
                            Object {
                              "circle": "StatusComp-circle-0-3-336",
                              "circleWrapper": "StatusComp-circleWrapper-0-3-335",
                              "line": "StatusComp-line-0-3-334",
                              "lineWrapper": "StatusComp-lineWrapper-0-3-333",
                              "root": "StatusComp-root-0-3-332",
                            }
                          }
                          color="#4caf50"
                        >
                          <div
                            className="StatusComp-root-0-3-332"
                          >
                            <div
                              className="StatusComp-lineWrapper-0-3-333"
                              style={
                                Object {
                                  "height": 0,
                                }
                              }
                            >
                              <div
                                className="StatusComp-line-0-3-334"
                                style={
                                  Object {
                                    "backgroundColor": "#4caf50",
                                  }
                                }
                              />
                            </div>
                            <div
                              className="StatusComp-circleWrapper-0-3-335"
                            >
                              <div
                                className="StatusComp-circle-0-3-336"
                                style={
                                  Object {
                                    "backgroundColor": "#4caf50",
                                  }
                                }
                              />
                            </div>
                          </div>
                        </StatusComp>
                      </WithStyles(StatusComp)>
                    </Status>
                  </div>
                  <div
                    className="TimelineEventComp-content-0-3-331"
                  >
                    <Content
                      dateFormatted={
                        <React.Fragment>
                          2/22/2018, 1:55:26 PM
                        </React.Fragment>
                      }
                      title="Resolved"
                    >
                      <WithStyles(ContentComp)
                        dateFormatted={
                          <React.Fragment>
                            2/22/2018, 1:55:26 PM
                          </React.Fragment>
                        }
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        theme={Object {}}
                        title="Resolved"
                      >
                        <ContentComp
                          classes={
                            Object {
                              "description": "ContentComp-description-0-3-338",
                              "root": "ContentComp-root-0-3-337",
                            }
                          }
                          dateFormatted={
                            <React.Fragment>
                              2/22/2018, 1:55:26 PM
                            </React.Fragment>
                          }
                          title="Resolved"
                        >
                          <div
                            className="ContentComp-root-0-3-337"
                          >
                            <div>
                              <Typography
                                bold={true}
                                className="ContentComp-description-0-3-338"
                                variant="distance"
                              >
                                <WithStyles(TypographyComp)
                                  bold={true}
                                  className="ContentComp-description-0-3-338"
                                  innerRef={null}
                                  jssContext={
                                    Object {
                                      "classNamePrefix": "",
                                      "disableStylesGeneration": false,
                                    }
                                  }
                                  theme={Object {}}
                                  variant="distance"
                                >
                                  <TypographyComp
                                    bold={true}
                                    className="ContentComp-description-0-3-338"
                                    classes={
                                      Object {
                                        "big": "TypographyComp-big-0-3-7",
                                        "bold": "TypographyComp-bold-0-3-1",
                                        "capitalize": "TypographyComp-capitalize-0-3-12",
                                        "distance": "TypographyComp-distance-0-3-6",
                                        "ellipsis": "TypographyComp-ellipsis-0-3-14",
                                        "giant": "TypographyComp-giant-0-3-9",
                                        "heading": "TypographyComp-heading-0-3-8",
                                        "italic": "TypographyComp-italic-0-3-3",
                                        "lowercase": "TypographyComp-lowercase-0-3-11",
                                        "noWrap": "TypographyComp-noWrap-0-3-13",
                                        "semiBold": "TypographyComp-semiBold-0-3-2",
                                        "standard": "TypographyComp-standard-0-3-5",
                                        "subtext": "TypographyComp-subtext-0-3-4",
                                        "uppercase": "TypographyComp-uppercase-0-3-10",
                                      }
                                    }
                                    variant="distance"
                                  >
                                    <span
                                      className="ContentComp-description-0-3-338 TypographyComp-distance-0-3-6 TypographyComp-bold-0-3-1"
                                    >
                                      Resolved
                                    </span>
                                  </TypographyComp>
                                </WithStyles(TypographyComp)>
                              </Typography>
                            </div>
                            <div>
                              <Typography
                                bold={true}
                                className="ContentComp-description-0-3-338"
                                variant="standard"
                              >
                                <WithStyles(TypographyComp)
                                  bold={true}
                                  className="ContentComp-description-0-3-338"
                                  innerRef={null}
                                  jssContext={
                                    Object {
                                      "classNamePrefix": "",
                                      "disableStylesGeneration": false,
                                    }
                                  }
                                  theme={Object {}}
                                  variant="standard"
                                >
                                  <TypographyComp
                                    bold={true}
                                    className="ContentComp-description-0-3-338"
                                    classes={
                                      Object {
                                        "big": "TypographyComp-big-0-3-7",
                                        "bold": "TypographyComp-bold-0-3-1",
                                        "capitalize": "TypographyComp-capitalize-0-3-12",
                                        "distance": "TypographyComp-distance-0-3-6",
                                        "ellipsis": "TypographyComp-ellipsis-0-3-14",
                                        "giant": "TypographyComp-giant-0-3-9",
                                        "heading": "TypographyComp-heading-0-3-8",
                                        "italic": "TypographyComp-italic-0-3-3",
                                        "lowercase": "TypographyComp-lowercase-0-3-11",
                                        "noWrap": "TypographyComp-noWrap-0-3-13",
                                        "semiBold": "TypographyComp-semiBold-0-3-2",
                                        "standard": "TypographyComp-standard-0-3-5",
                                        "subtext": "TypographyComp-subtext-0-3-4",
                                        "uppercase": "TypographyComp-uppercase-0-3-10",
                                      }
                                    }
                                    variant="standard"
                                  >
                                    <span
                                      className="ContentComp-description-0-3-338 TypographyComp-standard-0-3-5 TypographyComp-bold-0-3-1"
                                    >
                                      2/22/2018, 1:55:26 PM
                                    </span>
                                  </TypographyComp>
                                </WithStyles(TypographyComp)>
                              </Typography>
                            </div>
                            <div />
                          </div>
                        </ContentComp>
                      </WithStyles(ContentComp)>
                    </Content>
                  </div>
                </div>
              </TimelineEventComp>
            </WithStyles(TimelineEventComp)>
          </TimelineEvent>
        </div>
      </div>
    </TimelineComp>
  </WithStyles(TimelineComp)>
</Timeline>
`;

exports[`Storyshots Components/Timeline Intervals 1`] = `
<Timeline
  events={
    Array [
      Object {
        "arrangement": "start",
        "color": "#f57c00",
        "dateFormated": <React.Fragment>
          2/1/2018, 1:26:09 AM
        </React.Fragment>,
        "description": "Error in machine maintenance, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla varius felis fringilla felis volutpat volutpat. Nunc felis mi, placerat vitae posuere nec, condimentum in lectus.",
        "title": "Improper or inadequate maintenance",
      },
      Object {
        "arrangement": "continue",
        "color": "#f57c00",
        "dateFormated": <React.Fragment>
          2/1/2018, 2:26:09 AM
        </React.Fragment>,
        "description": "Mechanical error on the assembly line, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla varius felis fringilla felis volutpat volutpat. Nunc felis mi, placerat vitae posuere nec, condimentum in lectus.",
        "title": "Assembly errors",
      },
      Object {
        "arrangement": "end",
        "color": "#f57c00",
        "dateFormated": <React.Fragment>
          2/1/2018, 3:26:09 AM
        </React.Fragment>,
        "description": "Calibration error on the assembly line.",
        "title": "Assembly errors",
      },
      Object {
        "arrangement": "single",
        "color": "#4caf50",
        "dateFormated": <React.Fragment>
          2/1/2018, 4:26:09 AM
        </React.Fragment>,
        "title": "Resolved",
      },
      Object {
        "arrangement": "start",
        "color": "#f57c00",
        "dateFormated": <React.Fragment>
          2/1/2018, 5:26:09 AM
        </React.Fragment>,
        "description": "Error in machine maintenance, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla varius felis fringilla felis volutpat volutpat. Nunc felis mi, placerat vitae posuere nec, condimentum in lectus.",
        "title": "Improper or inadequate maintenance",
      },
      Object {
        "arrangement": "end",
        "color": "#f57c00",
        "dateFormated": <React.Fragment>
          2/1/2018, 6:26:09 AM
        </React.Fragment>,
        "description": "Calibration error on the assembly line.",
        "title": "Assembly errors",
      },
      Object {
        "arrangement": "single",
        "color": "#4caf50",
        "dateFormated": <React.Fragment>
          2/1/2018, 7:26:09 AM
        </React.Fragment>,
        "title": "Resolved",
      },
      Object {
        "arrangement": "single",
        "color": "#f57c00",
        "dateFormated": <React.Fragment>
          2/1/2018, 8:26:09 AM
        </React.Fragment>,
        "title": "Assembly errors",
      },
      Object {
        "arrangement": "single",
        "color": "#4caf50",
        "dateFormated": <React.Fragment>
          2/1/2018, 9:26:09 AM
        </React.Fragment>,
        "title": "Resolved",
      },
    ]
  }
  scrollToLast={true}
>
  <WithStyles(TimelineComp)
    events={
      Array [
        Object {
          "arrangement": "start",
          "color": "#f57c00",
          "dateFormated": <React.Fragment>
            2/1/2018, 1:26:09 AM
          </React.Fragment>,
          "description": "Error in machine maintenance, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla varius felis fringilla felis volutpat volutpat. Nunc felis mi, placerat vitae posuere nec, condimentum in lectus.",
          "title": "Improper or inadequate maintenance",
        },
        Object {
          "arrangement": "continue",
          "color": "#f57c00",
          "dateFormated": <React.Fragment>
            2/1/2018, 2:26:09 AM
          </React.Fragment>,
          "description": "Mechanical error on the assembly line, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla varius felis fringilla felis volutpat volutpat. Nunc felis mi, placerat vitae posuere nec, condimentum in lectus.",
          "title": "Assembly errors",
        },
        Object {
          "arrangement": "end",
          "color": "#f57c00",
          "dateFormated": <React.Fragment>
            2/1/2018, 3:26:09 AM
          </React.Fragment>,
          "description": "Calibration error on the assembly line.",
          "title": "Assembly errors",
        },
        Object {
          "arrangement": "single",
          "color": "#4caf50",
          "dateFormated": <React.Fragment>
            2/1/2018, 4:26:09 AM
          </React.Fragment>,
          "title": "Resolved",
        },
        Object {
          "arrangement": "start",
          "color": "#f57c00",
          "dateFormated": <React.Fragment>
            2/1/2018, 5:26:09 AM
          </React.Fragment>,
          "description": "Error in machine maintenance, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla varius felis fringilla felis volutpat volutpat. Nunc felis mi, placerat vitae posuere nec, condimentum in lectus.",
          "title": "Improper or inadequate maintenance",
        },
        Object {
          "arrangement": "end",
          "color": "#f57c00",
          "dateFormated": <React.Fragment>
            2/1/2018, 6:26:09 AM
          </React.Fragment>,
          "description": "Calibration error on the assembly line.",
          "title": "Assembly errors",
        },
        Object {
          "arrangement": "single",
          "color": "#4caf50",
          "dateFormated": <React.Fragment>
            2/1/2018, 7:26:09 AM
          </React.Fragment>,
          "title": "Resolved",
        },
        Object {
          "arrangement": "single",
          "color": "#f57c00",
          "dateFormated": <React.Fragment>
            2/1/2018, 8:26:09 AM
          </React.Fragment>,
          "title": "Assembly errors",
        },
        Object {
          "arrangement": "single",
          "color": "#4caf50",
          "dateFormated": <React.Fragment>
            2/1/2018, 9:26:09 AM
          </React.Fragment>,
          "title": "Resolved",
        },
      ]
    }
    innerRef={null}
    jssContext={
      Object {
        "classNamePrefix": "",
        "disableStylesGeneration": false,
      }
    }
    scrollToLast={true}
    theme={Object {}}
  >
    <TimelineComp
      classes={
        Object {
          "content": "TimelineComp-content-0-3-328",
          "root": "TimelineComp-root-0-3-327",
        }
      }
      events={
        Array [
          Object {
            "arrangement": "start",
            "color": "#f57c00",
            "dateFormated": <React.Fragment>
              2/1/2018, 1:26:09 AM
            </React.Fragment>,
            "description": "Error in machine maintenance, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla varius felis fringilla felis volutpat volutpat. Nunc felis mi, placerat vitae posuere nec, condimentum in lectus.",
            "title": "Improper or inadequate maintenance",
          },
          Object {
            "arrangement": "continue",
            "color": "#f57c00",
            "dateFormated": <React.Fragment>
              2/1/2018, 2:26:09 AM
            </React.Fragment>,
            "description": "Mechanical error on the assembly line, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla varius felis fringilla felis volutpat volutpat. Nunc felis mi, placerat vitae posuere nec, condimentum in lectus.",
            "title": "Assembly errors",
          },
          Object {
            "arrangement": "end",
            "color": "#f57c00",
            "dateFormated": <React.Fragment>
              2/1/2018, 3:26:09 AM
            </React.Fragment>,
            "description": "Calibration error on the assembly line.",
            "title": "Assembly errors",
          },
          Object {
            "arrangement": "single",
            "color": "#4caf50",
            "dateFormated": <React.Fragment>
              2/1/2018, 4:26:09 AM
            </React.Fragment>,
            "title": "Resolved",
          },
          Object {
            "arrangement": "start",
            "color": "#f57c00",
            "dateFormated": <React.Fragment>
              2/1/2018, 5:26:09 AM
            </React.Fragment>,
            "description": "Error in machine maintenance, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla varius felis fringilla felis volutpat volutpat. Nunc felis mi, placerat vitae posuere nec, condimentum in lectus.",
            "title": "Improper or inadequate maintenance",
          },
          Object {
            "arrangement": "end",
            "color": "#f57c00",
            "dateFormated": <React.Fragment>
              2/1/2018, 6:26:09 AM
            </React.Fragment>,
            "description": "Calibration error on the assembly line.",
            "title": "Assembly errors",
          },
          Object {
            "arrangement": "single",
            "color": "#4caf50",
            "dateFormated": <React.Fragment>
              2/1/2018, 7:26:09 AM
            </React.Fragment>,
            "title": "Resolved",
          },
          Object {
            "arrangement": "single",
            "color": "#f57c00",
            "dateFormated": <React.Fragment>
              2/1/2018, 8:26:09 AM
            </React.Fragment>,
            "title": "Assembly errors",
          },
          Object {
            "arrangement": "single",
            "color": "#4caf50",
            "dateFormated": <React.Fragment>
              2/1/2018, 9:26:09 AM
            </React.Fragment>,
            "title": "Resolved",
          },
        ]
      }
      scrollToLast={true}
    >
      <div
        className="TimelineComp-root-0-3-327"
      >
        <div
          className="TimelineComp-content-0-3-328"
        >
          <TimelineEvent
            content={
              Object {
                "dateFormatted": <React.Fragment>
                  2/1/2018, 1:26:09 AM
                </React.Fragment>,
                "description": "Error in machine maintenance, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla varius felis fringilla felis volutpat volutpat. Nunc felis mi, placerat vitae posuere nec, condimentum in lectus.",
                "title": "Improper or inadequate maintenance",
              }
            }
            domId="0-[object Object]"
            key="0-[object Object]"
            status={
              Object {
                "arrangement": "start",
                "color": "#f57c00",
              }
            }
          >
            <WithStyles(TimelineEventComp)
              content={
                Object {
                  "dateFormatted": <React.Fragment>
                    2/1/2018, 1:26:09 AM
                  </React.Fragment>,
                  "description": "Error in machine maintenance, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla varius felis fringilla felis volutpat volutpat. Nunc felis mi, placerat vitae posuere nec, condimentum in lectus.",
                  "title": "Improper or inadequate maintenance",
                }
              }
              domId="0-[object Object]"
              innerRef={null}
              jssContext={
                Object {
                  "classNamePrefix": "",
                  "disableStylesGeneration": false,
                }
              }
              status={
                Object {
                  "arrangement": "start",
                  "color": "#f57c00",
                }
              }
              theme={Object {}}
            >
              <TimelineEventComp
                classes={
                  Object {
                    "content": "TimelineEventComp-content-0-3-331",
                    "root": "TimelineEventComp-root-0-3-329",
                    "status": "TimelineEventComp-status-0-3-330",
                  }
                }
                content={
                  Object {
                    "dateFormatted": <React.Fragment>
                      2/1/2018, 1:26:09 AM
                    </React.Fragment>,
                    "description": "Error in machine maintenance, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla varius felis fringilla felis volutpat volutpat. Nunc felis mi, placerat vitae posuere nec, condimentum in lectus.",
                    "title": "Improper or inadequate maintenance",
                  }
                }
                domId="0-[object Object]"
                status={
                  Object {
                    "arrangement": "start",
                    "color": "#f57c00",
                  }
                }
              >
                <div
                  className="TimelineEventComp-root-0-3-329"
                  id="0-[object Object]"
                >
                  <div
                    className="TimelineEventComp-status-0-3-330"
                  >
                    <Status
                      arrangement="start"
                      color="#f57c00"
                    >
                      <WithStyles(StatusComp)
                        arrangement="start"
                        color="#f57c00"
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        theme={Object {}}
                      >
                        <StatusComp
                          arrangement="start"
                          classes={
                            Object {
                              "circle": "StatusComp-circle-0-3-336",
                              "circleWrapper": "StatusComp-circleWrapper-0-3-335",
                              "line": "StatusComp-line-0-3-334",
                              "lineWrapper": "StatusComp-lineWrapper-0-3-333",
                              "root": "StatusComp-root-0-3-332",
                            }
                          }
                          color="#f57c00"
                        >
                          <div
                            className="StatusComp-root-0-3-332"
                          >
                            <div
                              className="StatusComp-lineWrapper-0-3-333"
                              style={
                                Object {
                                  "paddingTop": 8,
                                }
                              }
                            >
                              <div
                                className="StatusComp-line-0-3-334"
                                style={
                                  Object {
                                    "backgroundColor": "#f57c00",
                                  }
                                }
                              />
                            </div>
                            <div
                              className="StatusComp-circleWrapper-0-3-335"
                            >
                              <div
                                className="StatusComp-circle-0-3-336"
                                style={
                                  Object {
                                    "backgroundColor": "#f57c00",
                                  }
                                }
                              />
                            </div>
                          </div>
                        </StatusComp>
                      </WithStyles(StatusComp)>
                    </Status>
                  </div>
                  <div
                    className="TimelineEventComp-content-0-3-331"
                  >
                    <Content
                      dateFormatted={
                        <React.Fragment>
                          2/1/2018, 1:26:09 AM
                        </React.Fragment>
                      }
                      description="Error in machine maintenance, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla varius felis fringilla felis volutpat volutpat. Nunc felis mi, placerat vitae posuere nec, condimentum in lectus."
                      title="Improper or inadequate maintenance"
                    >
                      <WithStyles(ContentComp)
                        dateFormatted={
                          <React.Fragment>
                            2/1/2018, 1:26:09 AM
                          </React.Fragment>
                        }
                        description="Error in machine maintenance, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla varius felis fringilla felis volutpat volutpat. Nunc felis mi, placerat vitae posuere nec, condimentum in lectus."
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        theme={Object {}}
                        title="Improper or inadequate maintenance"
                      >
                        <ContentComp
                          classes={
                            Object {
                              "description": "ContentComp-description-0-3-338",
                              "root": "ContentComp-root-0-3-337",
                            }
                          }
                          dateFormatted={
                            <React.Fragment>
                              2/1/2018, 1:26:09 AM
                            </React.Fragment>
                          }
                          description="Error in machine maintenance, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla varius felis fringilla felis volutpat volutpat. Nunc felis mi, placerat vitae posuere nec, condimentum in lectus."
                          title="Improper or inadequate maintenance"
                        >
                          <div
                            className="ContentComp-root-0-3-337"
                          >
                            <div>
                              <Typography
                                bold={true}
                                className="ContentComp-description-0-3-338"
                                variant="distance"
                              >
                                <WithStyles(TypographyComp)
                                  bold={true}
                                  className="ContentComp-description-0-3-338"
                                  innerRef={null}
                                  jssContext={
                                    Object {
                                      "classNamePrefix": "",
                                      "disableStylesGeneration": false,
                                    }
                                  }
                                  theme={Object {}}
                                  variant="distance"
                                >
                                  <TypographyComp
                                    bold={true}
                                    className="ContentComp-description-0-3-338"
                                    classes={
                                      Object {
                                        "big": "TypographyComp-big-0-3-7",
                                        "bold": "TypographyComp-bold-0-3-1",
                                        "capitalize": "TypographyComp-capitalize-0-3-12",
                                        "distance": "TypographyComp-distance-0-3-6",
                                        "ellipsis": "TypographyComp-ellipsis-0-3-14",
                                        "giant": "TypographyComp-giant-0-3-9",
                                        "heading": "TypographyComp-heading-0-3-8",
                                        "italic": "TypographyComp-italic-0-3-3",
                                        "lowercase": "TypographyComp-lowercase-0-3-11",
                                        "noWrap": "TypographyComp-noWrap-0-3-13",
                                        "semiBold": "TypographyComp-semiBold-0-3-2",
                                        "standard": "TypographyComp-standard-0-3-5",
                                        "subtext": "TypographyComp-subtext-0-3-4",
                                        "uppercase": "TypographyComp-uppercase-0-3-10",
                                      }
                                    }
                                    variant="distance"
                                  >
                                    <span
                                      className="ContentComp-description-0-3-338 TypographyComp-distance-0-3-6 TypographyComp-bold-0-3-1"
                                    >
                                      Improper or inadequate maintenance
                                    </span>
                                  </TypographyComp>
                                </WithStyles(TypographyComp)>
                              </Typography>
                            </div>
                            <div>
                              <Typography
                                bold={true}
                                className="ContentComp-description-0-3-338"
                                variant="standard"
                              >
                                <WithStyles(TypographyComp)
                                  bold={true}
                                  className="ContentComp-description-0-3-338"
                                  innerRef={null}
                                  jssContext={
                                    Object {
                                      "classNamePrefix": "",
                                      "disableStylesGeneration": false,
                                    }
                                  }
                                  theme={Object {}}
                                  variant="standard"
                                >
                                  <TypographyComp
                                    bold={true}
                                    className="ContentComp-description-0-3-338"
                                    classes={
                                      Object {
                                        "big": "TypographyComp-big-0-3-7",
                                        "bold": "TypographyComp-bold-0-3-1",
                                        "capitalize": "TypographyComp-capitalize-0-3-12",
                                        "distance": "TypographyComp-distance-0-3-6",
                                        "ellipsis": "TypographyComp-ellipsis-0-3-14",
                                        "giant": "TypographyComp-giant-0-3-9",
                                        "heading": "TypographyComp-heading-0-3-8",
                                        "italic": "TypographyComp-italic-0-3-3",
                                        "lowercase": "TypographyComp-lowercase-0-3-11",
                                        "noWrap": "TypographyComp-noWrap-0-3-13",
                                        "semiBold": "TypographyComp-semiBold-0-3-2",
                                        "standard": "TypographyComp-standard-0-3-5",
                                        "subtext": "TypographyComp-subtext-0-3-4",
                                        "uppercase": "TypographyComp-uppercase-0-3-10",
                                      }
                                    }
                                    variant="standard"
                                  >
                                    <span
                                      className="ContentComp-description-0-3-338 TypographyComp-standard-0-3-5 TypographyComp-bold-0-3-1"
                                    >
                                      2/1/2018, 1:26:09 AM
                                    </span>
                                  </TypographyComp>
                                </WithStyles(TypographyComp)>
                              </Typography>
                            </div>
                            <div>
                              <Typography
                                className="ContentComp-description-0-3-338"
                                variant="standard"
                              >
                                <WithStyles(TypographyComp)
                                  className="ContentComp-description-0-3-338"
                                  innerRef={null}
                                  jssContext={
                                    Object {
                                      "classNamePrefix": "",
                                      "disableStylesGeneration": false,
                                    }
                                  }
                                  theme={Object {}}
                                  variant="standard"
                                >
                                  <TypographyComp
                                    className="ContentComp-description-0-3-338"
                                    classes={
                                      Object {
                                        "big": "TypographyComp-big-0-3-7",
                                        "bold": "TypographyComp-bold-0-3-1",
                                        "capitalize": "TypographyComp-capitalize-0-3-12",
                                        "distance": "TypographyComp-distance-0-3-6",
                                        "ellipsis": "TypographyComp-ellipsis-0-3-14",
                                        "giant": "TypographyComp-giant-0-3-9",
                                        "heading": "TypographyComp-heading-0-3-8",
                                        "italic": "TypographyComp-italic-0-3-3",
                                        "lowercase": "TypographyComp-lowercase-0-3-11",
                                        "noWrap": "TypographyComp-noWrap-0-3-13",
                                        "semiBold": "TypographyComp-semiBold-0-3-2",
                                        "standard": "TypographyComp-standard-0-3-5",
                                        "subtext": "TypographyComp-subtext-0-3-4",
                                        "uppercase": "TypographyComp-uppercase-0-3-10",
                                      }
                                    }
                                    variant="standard"
                                  >
                                    <span
                                      className="ContentComp-description-0-3-338 TypographyComp-standard-0-3-5"
                                    >
                                      Error in machine maintenance, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla varius felis fringilla felis volutpat volutpat. Nunc felis mi, placerat vitae posuere nec, condimentum in lectus.
                                    </span>
                                  </TypographyComp>
                                </WithStyles(TypographyComp)>
                              </Typography>
                            </div>
                          </div>
                        </ContentComp>
                      </WithStyles(ContentComp)>
                    </Content>
                  </div>
                </div>
              </TimelineEventComp>
            </WithStyles(TimelineEventComp)>
          </TimelineEvent>
          <TimelineEvent
            content={
              Object {
                "dateFormatted": <React.Fragment>
                  2/1/2018, 2:26:09 AM
                </React.Fragment>,
                "description": "Mechanical error on the assembly line, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla varius felis fringilla felis volutpat volutpat. Nunc felis mi, placerat vitae posuere nec, condimentum in lectus.",
                "title": "Assembly errors",
              }
            }
            domId="1-[object Object]"
            key="1-[object Object]"
            status={
              Object {
                "arrangement": "continue",
                "color": "#f57c00",
              }
            }
          >
            <WithStyles(TimelineEventComp)
              content={
                Object {
                  "dateFormatted": <React.Fragment>
                    2/1/2018, 2:26:09 AM
                  </React.Fragment>,
                  "description": "Mechanical error on the assembly line, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla varius felis fringilla felis volutpat volutpat. Nunc felis mi, placerat vitae posuere nec, condimentum in lectus.",
                  "title": "Assembly errors",
                }
              }
              domId="1-[object Object]"
              innerRef={null}
              jssContext={
                Object {
                  "classNamePrefix": "",
                  "disableStylesGeneration": false,
                }
              }
              status={
                Object {
                  "arrangement": "continue",
                  "color": "#f57c00",
                }
              }
              theme={Object {}}
            >
              <TimelineEventComp
                classes={
                  Object {
                    "content": "TimelineEventComp-content-0-3-331",
                    "root": "TimelineEventComp-root-0-3-329",
                    "status": "TimelineEventComp-status-0-3-330",
                  }
                }
                content={
                  Object {
                    "dateFormatted": <React.Fragment>
                      2/1/2018, 2:26:09 AM
                    </React.Fragment>,
                    "description": "Mechanical error on the assembly line, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla varius felis fringilla felis volutpat volutpat. Nunc felis mi, placerat vitae posuere nec, condimentum in lectus.",
                    "title": "Assembly errors",
                  }
                }
                domId="1-[object Object]"
                status={
                  Object {
                    "arrangement": "continue",
                    "color": "#f57c00",
                  }
                }
              >
                <div
                  className="TimelineEventComp-root-0-3-329"
                  id="1-[object Object]"
                >
                  <div
                    className="TimelineEventComp-status-0-3-330"
                  >
                    <Status
                      arrangement="continue"
                      color="#f57c00"
                    >
                      <WithStyles(StatusComp)
                        arrangement="continue"
                        color="#f57c00"
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        theme={Object {}}
                      >
                        <StatusComp
                          arrangement="continue"
                          classes={
                            Object {
                              "circle": "StatusComp-circle-0-3-336",
                              "circleWrapper": "StatusComp-circleWrapper-0-3-335",
                              "line": "StatusComp-line-0-3-334",
                              "lineWrapper": "StatusComp-lineWrapper-0-3-333",
                              "root": "StatusComp-root-0-3-332",
                            }
                          }
                          color="#f57c00"
                        >
                          <div
                            className="StatusComp-root-0-3-332"
                          >
                            <div
                              className="StatusComp-lineWrapper-0-3-333"
                              style={
                                Object {
                                  "paddingTop": 0,
                                }
                              }
                            >
                              <div
                                className="StatusComp-line-0-3-334"
                                style={
                                  Object {
                                    "backgroundColor": "#f57c00",
                                  }
                                }
                              />
                            </div>
                            <div
                              className="StatusComp-circleWrapper-0-3-335"
                            >
                              <div
                                className="StatusComp-circle-0-3-336"
                                style={
                                  Object {
                                    "backgroundColor": "#f57c00",
                                  }
                                }
                              />
                            </div>
                          </div>
                        </StatusComp>
                      </WithStyles(StatusComp)>
                    </Status>
                  </div>
                  <div
                    className="TimelineEventComp-content-0-3-331"
                  >
                    <Content
                      dateFormatted={
                        <React.Fragment>
                          2/1/2018, 2:26:09 AM
                        </React.Fragment>
                      }
                      description="Mechanical error on the assembly line, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla varius felis fringilla felis volutpat volutpat. Nunc felis mi, placerat vitae posuere nec, condimentum in lectus."
                      title="Assembly errors"
                    >
                      <WithStyles(ContentComp)
                        dateFormatted={
                          <React.Fragment>
                            2/1/2018, 2:26:09 AM
                          </React.Fragment>
                        }
                        description="Mechanical error on the assembly line, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla varius felis fringilla felis volutpat volutpat. Nunc felis mi, placerat vitae posuere nec, condimentum in lectus."
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        theme={Object {}}
                        title="Assembly errors"
                      >
                        <ContentComp
                          classes={
                            Object {
                              "description": "ContentComp-description-0-3-338",
                              "root": "ContentComp-root-0-3-337",
                            }
                          }
                          dateFormatted={
                            <React.Fragment>
                              2/1/2018, 2:26:09 AM
                            </React.Fragment>
                          }
                          description="Mechanical error on the assembly line, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla varius felis fringilla felis volutpat volutpat. Nunc felis mi, placerat vitae posuere nec, condimentum in lectus."
                          title="Assembly errors"
                        >
                          <div
                            className="ContentComp-root-0-3-337"
                          >
                            <div>
                              <Typography
                                bold={true}
                                className="ContentComp-description-0-3-338"
                                variant="distance"
                              >
                                <WithStyles(TypographyComp)
                                  bold={true}
                                  className="ContentComp-description-0-3-338"
                                  innerRef={null}
                                  jssContext={
                                    Object {
                                      "classNamePrefix": "",
                                      "disableStylesGeneration": false,
                                    }
                                  }
                                  theme={Object {}}
                                  variant="distance"
                                >
                                  <TypographyComp
                                    bold={true}
                                    className="ContentComp-description-0-3-338"
                                    classes={
                                      Object {
                                        "big": "TypographyComp-big-0-3-7",
                                        "bold": "TypographyComp-bold-0-3-1",
                                        "capitalize": "TypographyComp-capitalize-0-3-12",
                                        "distance": "TypographyComp-distance-0-3-6",
                                        "ellipsis": "TypographyComp-ellipsis-0-3-14",
                                        "giant": "TypographyComp-giant-0-3-9",
                                        "heading": "TypographyComp-heading-0-3-8",
                                        "italic": "TypographyComp-italic-0-3-3",
                                        "lowercase": "TypographyComp-lowercase-0-3-11",
                                        "noWrap": "TypographyComp-noWrap-0-3-13",
                                        "semiBold": "TypographyComp-semiBold-0-3-2",
                                        "standard": "TypographyComp-standard-0-3-5",
                                        "subtext": "TypographyComp-subtext-0-3-4",
                                        "uppercase": "TypographyComp-uppercase-0-3-10",
                                      }
                                    }
                                    variant="distance"
                                  >
                                    <span
                                      className="ContentComp-description-0-3-338 TypographyComp-distance-0-3-6 TypographyComp-bold-0-3-1"
                                    >
                                      Assembly errors
                                    </span>
                                  </TypographyComp>
                                </WithStyles(TypographyComp)>
                              </Typography>
                            </div>
                            <div>
                              <Typography
                                bold={true}
                                className="ContentComp-description-0-3-338"
                                variant="standard"
                              >
                                <WithStyles(TypographyComp)
                                  bold={true}
                                  className="ContentComp-description-0-3-338"
                                  innerRef={null}
                                  jssContext={
                                    Object {
                                      "classNamePrefix": "",
                                      "disableStylesGeneration": false,
                                    }
                                  }
                                  theme={Object {}}
                                  variant="standard"
                                >
                                  <TypographyComp
                                    bold={true}
                                    className="ContentComp-description-0-3-338"
                                    classes={
                                      Object {
                                        "big": "TypographyComp-big-0-3-7",
                                        "bold": "TypographyComp-bold-0-3-1",
                                        "capitalize": "TypographyComp-capitalize-0-3-12",
                                        "distance": "TypographyComp-distance-0-3-6",
                                        "ellipsis": "TypographyComp-ellipsis-0-3-14",
                                        "giant": "TypographyComp-giant-0-3-9",
                                        "heading": "TypographyComp-heading-0-3-8",
                                        "italic": "TypographyComp-italic-0-3-3",
                                        "lowercase": "TypographyComp-lowercase-0-3-11",
                                        "noWrap": "TypographyComp-noWrap-0-3-13",
                                        "semiBold": "TypographyComp-semiBold-0-3-2",
                                        "standard": "TypographyComp-standard-0-3-5",
                                        "subtext": "TypographyComp-subtext-0-3-4",
                                        "uppercase": "TypographyComp-uppercase-0-3-10",
                                      }
                                    }
                                    variant="standard"
                                  >
                                    <span
                                      className="ContentComp-description-0-3-338 TypographyComp-standard-0-3-5 TypographyComp-bold-0-3-1"
                                    >
                                      2/1/2018, 2:26:09 AM
                                    </span>
                                  </TypographyComp>
                                </WithStyles(TypographyComp)>
                              </Typography>
                            </div>
                            <div>
                              <Typography
                                className="ContentComp-description-0-3-338"
                                variant="standard"
                              >
                                <WithStyles(TypographyComp)
                                  className="ContentComp-description-0-3-338"
                                  innerRef={null}
                                  jssContext={
                                    Object {
                                      "classNamePrefix": "",
                                      "disableStylesGeneration": false,
                                    }
                                  }
                                  theme={Object {}}
                                  variant="standard"
                                >
                                  <TypographyComp
                                    className="ContentComp-description-0-3-338"
                                    classes={
                                      Object {
                                        "big": "TypographyComp-big-0-3-7",
                                        "bold": "TypographyComp-bold-0-3-1",
                                        "capitalize": "TypographyComp-capitalize-0-3-12",
                                        "distance": "TypographyComp-distance-0-3-6",
                                        "ellipsis": "TypographyComp-ellipsis-0-3-14",
                                        "giant": "TypographyComp-giant-0-3-9",
                                        "heading": "TypographyComp-heading-0-3-8",
                                        "italic": "TypographyComp-italic-0-3-3",
                                        "lowercase": "TypographyComp-lowercase-0-3-11",
                                        "noWrap": "TypographyComp-noWrap-0-3-13",
                                        "semiBold": "TypographyComp-semiBold-0-3-2",
                                        "standard": "TypographyComp-standard-0-3-5",
                                        "subtext": "TypographyComp-subtext-0-3-4",
                                        "uppercase": "TypographyComp-uppercase-0-3-10",
                                      }
                                    }
                                    variant="standard"
                                  >
                                    <span
                                      className="ContentComp-description-0-3-338 TypographyComp-standard-0-3-5"
                                    >
                                      Mechanical error on the assembly line, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla varius felis fringilla felis volutpat volutpat. Nunc felis mi, placerat vitae posuere nec, condimentum in lectus.
                                    </span>
                                  </TypographyComp>
                                </WithStyles(TypographyComp)>
                              </Typography>
                            </div>
                          </div>
                        </ContentComp>
                      </WithStyles(ContentComp)>
                    </Content>
                  </div>
                </div>
              </TimelineEventComp>
            </WithStyles(TimelineEventComp)>
          </TimelineEvent>
          <TimelineEvent
            content={
              Object {
                "dateFormatted": <React.Fragment>
                  2/1/2018, 3:26:09 AM
                </React.Fragment>,
                "description": "Calibration error on the assembly line.",
                "title": "Assembly errors",
              }
            }
            domId="2-[object Object]"
            key="2-[object Object]"
            status={
              Object {
                "arrangement": "end",
                "color": "#f57c00",
              }
            }
          >
            <WithStyles(TimelineEventComp)
              content={
                Object {
                  "dateFormatted": <React.Fragment>
                    2/1/2018, 3:26:09 AM
                  </React.Fragment>,
                  "description": "Calibration error on the assembly line.",
                  "title": "Assembly errors",
                }
              }
              domId="2-[object Object]"
              innerRef={null}
              jssContext={
                Object {
                  "classNamePrefix": "",
                  "disableStylesGeneration": false,
                }
              }
              status={
                Object {
                  "arrangement": "end",
                  "color": "#f57c00",
                }
              }
              theme={Object {}}
            >
              <TimelineEventComp
                classes={
                  Object {
                    "content": "TimelineEventComp-content-0-3-331",
                    "root": "TimelineEventComp-root-0-3-329",
                    "status": "TimelineEventComp-status-0-3-330",
                  }
                }
                content={
                  Object {
                    "dateFormatted": <React.Fragment>
                      2/1/2018, 3:26:09 AM
                    </React.Fragment>,
                    "description": "Calibration error on the assembly line.",
                    "title": "Assembly errors",
                  }
                }
                domId="2-[object Object]"
                status={
                  Object {
                    "arrangement": "end",
                    "color": "#f57c00",
                  }
                }
              >
                <div
                  className="TimelineEventComp-root-0-3-329"
                  id="2-[object Object]"
                >
                  <div
                    className="TimelineEventComp-status-0-3-330"
                  >
                    <Status
                      arrangement="end"
                      color="#f57c00"
                    >
                      <WithStyles(StatusComp)
                        arrangement="end"
                        color="#f57c00"
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        theme={Object {}}
                      >
                        <StatusComp
                          arrangement="end"
                          classes={
                            Object {
                              "circle": "StatusComp-circle-0-3-336",
                              "circleWrapper": "StatusComp-circleWrapper-0-3-335",
                              "line": "StatusComp-line-0-3-334",
                              "lineWrapper": "StatusComp-lineWrapper-0-3-333",
                              "root": "StatusComp-root-0-3-332",
                            }
                          }
                          color="#f57c00"
                        >
                          <div
                            className="StatusComp-root-0-3-332"
                          >
                            <div
                              className="StatusComp-lineWrapper-0-3-333"
                              style={
                                Object {
                                  "height": 8,
                                  "paddingTop": 0,
                                }
                              }
                            >
                              <div
                                className="StatusComp-line-0-3-334"
                                style={
                                  Object {
                                    "backgroundColor": "#f57c00",
                                  }
                                }
                              />
                            </div>
                            <div
                              className="StatusComp-circleWrapper-0-3-335"
                            >
                              <div
                                className="StatusComp-circle-0-3-336"
                                style={
                                  Object {
                                    "backgroundColor": "#f57c00",
                                  }
                                }
                              />
                            </div>
                          </div>
                        </StatusComp>
                      </WithStyles(StatusComp)>
                    </Status>
                  </div>
                  <div
                    className="TimelineEventComp-content-0-3-331"
                  >
                    <Content
                      dateFormatted={
                        <React.Fragment>
                          2/1/2018, 3:26:09 AM
                        </React.Fragment>
                      }
                      description="Calibration error on the assembly line."
                      title="Assembly errors"
                    >
                      <WithStyles(ContentComp)
                        dateFormatted={
                          <React.Fragment>
                            2/1/2018, 3:26:09 AM
                          </React.Fragment>
                        }
                        description="Calibration error on the assembly line."
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        theme={Object {}}
                        title="Assembly errors"
                      >
                        <ContentComp
                          classes={
                            Object {
                              "description": "ContentComp-description-0-3-338",
                              "root": "ContentComp-root-0-3-337",
                            }
                          }
                          dateFormatted={
                            <React.Fragment>
                              2/1/2018, 3:26:09 AM
                            </React.Fragment>
                          }
                          description="Calibration error on the assembly line."
                          title="Assembly errors"
                        >
                          <div
                            className="ContentComp-root-0-3-337"
                          >
                            <div>
                              <Typography
                                bold={true}
                                className="ContentComp-description-0-3-338"
                                variant="distance"
                              >
                                <WithStyles(TypographyComp)
                                  bold={true}
                                  className="ContentComp-description-0-3-338"
                                  innerRef={null}
                                  jssContext={
                                    Object {
                                      "classNamePrefix": "",
                                      "disableStylesGeneration": false,
                                    }
                                  }
                                  theme={Object {}}
                                  variant="distance"
                                >
                                  <TypographyComp
                                    bold={true}
                                    className="ContentComp-description-0-3-338"
                                    classes={
                                      Object {
                                        "big": "TypographyComp-big-0-3-7",
                                        "bold": "TypographyComp-bold-0-3-1",
                                        "capitalize": "TypographyComp-capitalize-0-3-12",
                                        "distance": "TypographyComp-distance-0-3-6",
                                        "ellipsis": "TypographyComp-ellipsis-0-3-14",
                                        "giant": "TypographyComp-giant-0-3-9",
                                        "heading": "TypographyComp-heading-0-3-8",
                                        "italic": "TypographyComp-italic-0-3-3",
                                        "lowercase": "TypographyComp-lowercase-0-3-11",
                                        "noWrap": "TypographyComp-noWrap-0-3-13",
                                        "semiBold": "TypographyComp-semiBold-0-3-2",
                                        "standard": "TypographyComp-standard-0-3-5",
                                        "subtext": "TypographyComp-subtext-0-3-4",
                                        "uppercase": "TypographyComp-uppercase-0-3-10",
                                      }
                                    }
                                    variant="distance"
                                  >
                                    <span
                                      className="ContentComp-description-0-3-338 TypographyComp-distance-0-3-6 TypographyComp-bold-0-3-1"
                                    >
                                      Assembly errors
                                    </span>
                                  </TypographyComp>
                                </WithStyles(TypographyComp)>
                              </Typography>
                            </div>
                            <div>
                              <Typography
                                bold={true}
                                className="ContentComp-description-0-3-338"
                                variant="standard"
                              >
                                <WithStyles(TypographyComp)
                                  bold={true}
                                  className="ContentComp-description-0-3-338"
                                  innerRef={null}
                                  jssContext={
                                    Object {
                                      "classNamePrefix": "",
                                      "disableStylesGeneration": false,
                                    }
                                  }
                                  theme={Object {}}
                                  variant="standard"
                                >
                                  <TypographyComp
                                    bold={true}
                                    className="ContentComp-description-0-3-338"
                                    classes={
                                      Object {
                                        "big": "TypographyComp-big-0-3-7",
                                        "bold": "TypographyComp-bold-0-3-1",
                                        "capitalize": "TypographyComp-capitalize-0-3-12",
                                        "distance": "TypographyComp-distance-0-3-6",
                                        "ellipsis": "TypographyComp-ellipsis-0-3-14",
                                        "giant": "TypographyComp-giant-0-3-9",
                                        "heading": "TypographyComp-heading-0-3-8",
                                        "italic": "TypographyComp-italic-0-3-3",
                                        "lowercase": "TypographyComp-lowercase-0-3-11",
                                        "noWrap": "TypographyComp-noWrap-0-3-13",
                                        "semiBold": "TypographyComp-semiBold-0-3-2",
                                        "standard": "TypographyComp-standard-0-3-5",
                                        "subtext": "TypographyComp-subtext-0-3-4",
                                        "uppercase": "TypographyComp-uppercase-0-3-10",
                                      }
                                    }
                                    variant="standard"
                                  >
                                    <span
                                      className="ContentComp-description-0-3-338 TypographyComp-standard-0-3-5 TypographyComp-bold-0-3-1"
                                    >
                                      2/1/2018, 3:26:09 AM
                                    </span>
                                  </TypographyComp>
                                </WithStyles(TypographyComp)>
                              </Typography>
                            </div>
                            <div>
                              <Typography
                                className="ContentComp-description-0-3-338"
                                variant="standard"
                              >
                                <WithStyles(TypographyComp)
                                  className="ContentComp-description-0-3-338"
                                  innerRef={null}
                                  jssContext={
                                    Object {
                                      "classNamePrefix": "",
                                      "disableStylesGeneration": false,
                                    }
                                  }
                                  theme={Object {}}
                                  variant="standard"
                                >
                                  <TypographyComp
                                    className="ContentComp-description-0-3-338"
                                    classes={
                                      Object {
                                        "big": "TypographyComp-big-0-3-7",
                                        "bold": "TypographyComp-bold-0-3-1",
                                        "capitalize": "TypographyComp-capitalize-0-3-12",
                                        "distance": "TypographyComp-distance-0-3-6",
                                        "ellipsis": "TypographyComp-ellipsis-0-3-14",
                                        "giant": "TypographyComp-giant-0-3-9",
                                        "heading": "TypographyComp-heading-0-3-8",
                                        "italic": "TypographyComp-italic-0-3-3",
                                        "lowercase": "TypographyComp-lowercase-0-3-11",
                                        "noWrap": "TypographyComp-noWrap-0-3-13",
                                        "semiBold": "TypographyComp-semiBold-0-3-2",
                                        "standard": "TypographyComp-standard-0-3-5",
                                        "subtext": "TypographyComp-subtext-0-3-4",
                                        "uppercase": "TypographyComp-uppercase-0-3-10",
                                      }
                                    }
                                    variant="standard"
                                  >
                                    <span
                                      className="ContentComp-description-0-3-338 TypographyComp-standard-0-3-5"
                                    >
                                      Calibration error on the assembly line.
                                    </span>
                                  </TypographyComp>
                                </WithStyles(TypographyComp)>
                              </Typography>
                            </div>
                          </div>
                        </ContentComp>
                      </WithStyles(ContentComp)>
                    </Content>
                  </div>
                </div>
              </TimelineEventComp>
            </WithStyles(TimelineEventComp)>
          </TimelineEvent>
          <TimelineEvent
            content={
              Object {
                "dateFormatted": <React.Fragment>
                  2/1/2018, 4:26:09 AM
                </React.Fragment>,
                "description": undefined,
                "title": "Resolved",
              }
            }
            domId="3-[object Object]"
            key="3-[object Object]"
            status={
              Object {
                "arrangement": "single",
                "color": "#4caf50",
              }
            }
          >
            <WithStyles(TimelineEventComp)
              content={
                Object {
                  "dateFormatted": <React.Fragment>
                    2/1/2018, 4:26:09 AM
                  </React.Fragment>,
                  "description": undefined,
                  "title": "Resolved",
                }
              }
              domId="3-[object Object]"
              innerRef={null}
              jssContext={
                Object {
                  "classNamePrefix": "",
                  "disableStylesGeneration": false,
                }
              }
              status={
                Object {
                  "arrangement": "single",
                  "color": "#4caf50",
                }
              }
              theme={Object {}}
            >
              <TimelineEventComp
                classes={
                  Object {
                    "content": "TimelineEventComp-content-0-3-331",
                    "root": "TimelineEventComp-root-0-3-329",
                    "status": "TimelineEventComp-status-0-3-330",
                  }
                }
                content={
                  Object {
                    "dateFormatted": <React.Fragment>
                      2/1/2018, 4:26:09 AM
                    </React.Fragment>,
                    "description": undefined,
                    "title": "Resolved",
                  }
                }
                domId="3-[object Object]"
                status={
                  Object {
                    "arrangement": "single",
                    "color": "#4caf50",
                  }
                }
              >
                <div
                  className="TimelineEventComp-root-0-3-329"
                  id="3-[object Object]"
                >
                  <div
                    className="TimelineEventComp-status-0-3-330"
                  >
                    <Status
                      arrangement="single"
                      color="#4caf50"
                    >
                      <WithStyles(StatusComp)
                        arrangement="single"
                        color="#4caf50"
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        theme={Object {}}
                      >
                        <StatusComp
                          arrangement="single"
                          classes={
                            Object {
                              "circle": "StatusComp-circle-0-3-336",
                              "circleWrapper": "StatusComp-circleWrapper-0-3-335",
                              "line": "StatusComp-line-0-3-334",
                              "lineWrapper": "StatusComp-lineWrapper-0-3-333",
                              "root": "StatusComp-root-0-3-332",
                            }
                          }
                          color="#4caf50"
                        >
                          <div
                            className="StatusComp-root-0-3-332"
                          >
                            <div
                              className="StatusComp-lineWrapper-0-3-333"
                              style={
                                Object {
                                  "height": 0,
                                }
                              }
                            >
                              <div
                                className="StatusComp-line-0-3-334"
                                style={
                                  Object {
                                    "backgroundColor": "#4caf50",
                                  }
                                }
                              />
                            </div>
                            <div
                              className="StatusComp-circleWrapper-0-3-335"
                            >
                              <div
                                className="StatusComp-circle-0-3-336"
                                style={
                                  Object {
                                    "backgroundColor": "#4caf50",
                                  }
                                }
                              />
                            </div>
                          </div>
                        </StatusComp>
                      </WithStyles(StatusComp)>
                    </Status>
                  </div>
                  <div
                    className="TimelineEventComp-content-0-3-331"
                  >
                    <Content
                      dateFormatted={
                        <React.Fragment>
                          2/1/2018, 4:26:09 AM
                        </React.Fragment>
                      }
                      title="Resolved"
                    >
                      <WithStyles(ContentComp)
                        dateFormatted={
                          <React.Fragment>
                            2/1/2018, 4:26:09 AM
                          </React.Fragment>
                        }
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        theme={Object {}}
                        title="Resolved"
                      >
                        <ContentComp
                          classes={
                            Object {
                              "description": "ContentComp-description-0-3-338",
                              "root": "ContentComp-root-0-3-337",
                            }
                          }
                          dateFormatted={
                            <React.Fragment>
                              2/1/2018, 4:26:09 AM
                            </React.Fragment>
                          }
                          title="Resolved"
                        >
                          <div
                            className="ContentComp-root-0-3-337"
                          >
                            <div>
                              <Typography
                                bold={true}
                                className="ContentComp-description-0-3-338"
                                variant="distance"
                              >
                                <WithStyles(TypographyComp)
                                  bold={true}
                                  className="ContentComp-description-0-3-338"
                                  innerRef={null}
                                  jssContext={
                                    Object {
                                      "classNamePrefix": "",
                                      "disableStylesGeneration": false,
                                    }
                                  }
                                  theme={Object {}}
                                  variant="distance"
                                >
                                  <TypographyComp
                                    bold={true}
                                    className="ContentComp-description-0-3-338"
                                    classes={
                                      Object {
                                        "big": "TypographyComp-big-0-3-7",
                                        "bold": "TypographyComp-bold-0-3-1",
                                        "capitalize": "TypographyComp-capitalize-0-3-12",
                                        "distance": "TypographyComp-distance-0-3-6",
                                        "ellipsis": "TypographyComp-ellipsis-0-3-14",
                                        "giant": "TypographyComp-giant-0-3-9",
                                        "heading": "TypographyComp-heading-0-3-8",
                                        "italic": "TypographyComp-italic-0-3-3",
                                        "lowercase": "TypographyComp-lowercase-0-3-11",
                                        "noWrap": "TypographyComp-noWrap-0-3-13",
                                        "semiBold": "TypographyComp-semiBold-0-3-2",
                                        "standard": "TypographyComp-standard-0-3-5",
                                        "subtext": "TypographyComp-subtext-0-3-4",
                                        "uppercase": "TypographyComp-uppercase-0-3-10",
                                      }
                                    }
                                    variant="distance"
                                  >
                                    <span
                                      className="ContentComp-description-0-3-338 TypographyComp-distance-0-3-6 TypographyComp-bold-0-3-1"
                                    >
                                      Resolved
                                    </span>
                                  </TypographyComp>
                                </WithStyles(TypographyComp)>
                              </Typography>
                            </div>
                            <div>
                              <Typography
                                bold={true}
                                className="ContentComp-description-0-3-338"
                                variant="standard"
                              >
                                <WithStyles(TypographyComp)
                                  bold={true}
                                  className="ContentComp-description-0-3-338"
                                  innerRef={null}
                                  jssContext={
                                    Object {
                                      "classNamePrefix": "",
                                      "disableStylesGeneration": false,
                                    }
                                  }
                                  theme={Object {}}
                                  variant="standard"
                                >
                                  <TypographyComp
                                    bold={true}
                                    className="ContentComp-description-0-3-338"
                                    classes={
                                      Object {
                                        "big": "TypographyComp-big-0-3-7",
                                        "bold": "TypographyComp-bold-0-3-1",
                                        "capitalize": "TypographyComp-capitalize-0-3-12",
                                        "distance": "TypographyComp-distance-0-3-6",
                                        "ellipsis": "TypographyComp-ellipsis-0-3-14",
                                        "giant": "TypographyComp-giant-0-3-9",
                                        "heading": "TypographyComp-heading-0-3-8",
                                        "italic": "TypographyComp-italic-0-3-3",
                                        "lowercase": "TypographyComp-lowercase-0-3-11",
                                        "noWrap": "TypographyComp-noWrap-0-3-13",
                                        "semiBold": "TypographyComp-semiBold-0-3-2",
                                        "standard": "TypographyComp-standard-0-3-5",
                                        "subtext": "TypographyComp-subtext-0-3-4",
                                        "uppercase": "TypographyComp-uppercase-0-3-10",
                                      }
                                    }
                                    variant="standard"
                                  >
                                    <span
                                      className="ContentComp-description-0-3-338 TypographyComp-standard-0-3-5 TypographyComp-bold-0-3-1"
                                    >
                                      2/1/2018, 4:26:09 AM
                                    </span>
                                  </TypographyComp>
                                </WithStyles(TypographyComp)>
                              </Typography>
                            </div>
                            <div />
                          </div>
                        </ContentComp>
                      </WithStyles(ContentComp)>
                    </Content>
                  </div>
                </div>
              </TimelineEventComp>
            </WithStyles(TimelineEventComp)>
          </TimelineEvent>
          <TimelineEvent
            content={
              Object {
                "dateFormatted": <React.Fragment>
                  2/1/2018, 5:26:09 AM
                </React.Fragment>,
                "description": "Error in machine maintenance, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla varius felis fringilla felis volutpat volutpat. Nunc felis mi, placerat vitae posuere nec, condimentum in lectus.",
                "title": "Improper or inadequate maintenance",
              }
            }
            domId="4-[object Object]"
            key="4-[object Object]"
            status={
              Object {
                "arrangement": "start",
                "color": "#f57c00",
              }
            }
          >
            <WithStyles(TimelineEventComp)
              content={
                Object {
                  "dateFormatted": <React.Fragment>
                    2/1/2018, 5:26:09 AM
                  </React.Fragment>,
                  "description": "Error in machine maintenance, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla varius felis fringilla felis volutpat volutpat. Nunc felis mi, placerat vitae posuere nec, condimentum in lectus.",
                  "title": "Improper or inadequate maintenance",
                }
              }
              domId="4-[object Object]"
              innerRef={null}
              jssContext={
                Object {
                  "classNamePrefix": "",
                  "disableStylesGeneration": false,
                }
              }
              status={
                Object {
                  "arrangement": "start",
                  "color": "#f57c00",
                }
              }
              theme={Object {}}
            >
              <TimelineEventComp
                classes={
                  Object {
                    "content": "TimelineEventComp-content-0-3-331",
                    "root": "TimelineEventComp-root-0-3-329",
                    "status": "TimelineEventComp-status-0-3-330",
                  }
                }
                content={
                  Object {
                    "dateFormatted": <React.Fragment>
                      2/1/2018, 5:26:09 AM
                    </React.Fragment>,
                    "description": "Error in machine maintenance, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla varius felis fringilla felis volutpat volutpat. Nunc felis mi, placerat vitae posuere nec, condimentum in lectus.",
                    "title": "Improper or inadequate maintenance",
                  }
                }
                domId="4-[object Object]"
                status={
                  Object {
                    "arrangement": "start",
                    "color": "#f57c00",
                  }
                }
              >
                <div
                  className="TimelineEventComp-root-0-3-329"
                  id="4-[object Object]"
                >
                  <div
                    className="TimelineEventComp-status-0-3-330"
                  >
                    <Status
                      arrangement="start"
                      color="#f57c00"
                    >
                      <WithStyles(StatusComp)
                        arrangement="start"
                        color="#f57c00"
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        theme={Object {}}
                      >
                        <StatusComp
                          arrangement="start"
                          classes={
                            Object {
                              "circle": "StatusComp-circle-0-3-336",
                              "circleWrapper": "StatusComp-circleWrapper-0-3-335",
                              "line": "StatusComp-line-0-3-334",
                              "lineWrapper": "StatusComp-lineWrapper-0-3-333",
                              "root": "StatusComp-root-0-3-332",
                            }
                          }
                          color="#f57c00"
                        >
                          <div
                            className="StatusComp-root-0-3-332"
                          >
                            <div
                              className="StatusComp-lineWrapper-0-3-333"
                              style={
                                Object {
                                  "paddingTop": 8,
                                }
                              }
                            >
                              <div
                                className="StatusComp-line-0-3-334"
                                style={
                                  Object {
                                    "backgroundColor": "#f57c00",
                                  }
                                }
                              />
                            </div>
                            <div
                              className="StatusComp-circleWrapper-0-3-335"
                            >
                              <div
                                className="StatusComp-circle-0-3-336"
                                style={
                                  Object {
                                    "backgroundColor": "#f57c00",
                                  }
                                }
                              />
                            </div>
                          </div>
                        </StatusComp>
                      </WithStyles(StatusComp)>
                    </Status>
                  </div>
                  <div
                    className="TimelineEventComp-content-0-3-331"
                  >
                    <Content
                      dateFormatted={
                        <React.Fragment>
                          2/1/2018, 5:26:09 AM
                        </React.Fragment>
                      }
                      description="Error in machine maintenance, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla varius felis fringilla felis volutpat volutpat. Nunc felis mi, placerat vitae posuere nec, condimentum in lectus."
                      title="Improper or inadequate maintenance"
                    >
                      <WithStyles(ContentComp)
                        dateFormatted={
                          <React.Fragment>
                            2/1/2018, 5:26:09 AM
                          </React.Fragment>
                        }
                        description="Error in machine maintenance, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla varius felis fringilla felis volutpat volutpat. Nunc felis mi, placerat vitae posuere nec, condimentum in lectus."
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        theme={Object {}}
                        title="Improper or inadequate maintenance"
                      >
                        <ContentComp
                          classes={
                            Object {
                              "description": "ContentComp-description-0-3-338",
                              "root": "ContentComp-root-0-3-337",
                            }
                          }
                          dateFormatted={
                            <React.Fragment>
                              2/1/2018, 5:26:09 AM
                            </React.Fragment>
                          }
                          description="Error in machine maintenance, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla varius felis fringilla felis volutpat volutpat. Nunc felis mi, placerat vitae posuere nec, condimentum in lectus."
                          title="Improper or inadequate maintenance"
                        >
                          <div
                            className="ContentComp-root-0-3-337"
                          >
                            <div>
                              <Typography
                                bold={true}
                                className="ContentComp-description-0-3-338"
                                variant="distance"
                              >
                                <WithStyles(TypographyComp)
                                  bold={true}
                                  className="ContentComp-description-0-3-338"
                                  innerRef={null}
                                  jssContext={
                                    Object {
                                      "classNamePrefix": "",
                                      "disableStylesGeneration": false,
                                    }
                                  }
                                  theme={Object {}}
                                  variant="distance"
                                >
                                  <TypographyComp
                                    bold={true}
                                    className="ContentComp-description-0-3-338"
                                    classes={
                                      Object {
                                        "big": "TypographyComp-big-0-3-7",
                                        "bold": "TypographyComp-bold-0-3-1",
                                        "capitalize": "TypographyComp-capitalize-0-3-12",
                                        "distance": "TypographyComp-distance-0-3-6",
                                        "ellipsis": "TypographyComp-ellipsis-0-3-14",
                                        "giant": "TypographyComp-giant-0-3-9",
                                        "heading": "TypographyComp-heading-0-3-8",
                                        "italic": "TypographyComp-italic-0-3-3",
                                        "lowercase": "TypographyComp-lowercase-0-3-11",
                                        "noWrap": "TypographyComp-noWrap-0-3-13",
                                        "semiBold": "TypographyComp-semiBold-0-3-2",
                                        "standard": "TypographyComp-standard-0-3-5",
                                        "subtext": "TypographyComp-subtext-0-3-4",
                                        "uppercase": "TypographyComp-uppercase-0-3-10",
                                      }
                                    }
                                    variant="distance"
                                  >
                                    <span
                                      className="ContentComp-description-0-3-338 TypographyComp-distance-0-3-6 TypographyComp-bold-0-3-1"
                                    >
                                      Improper or inadequate maintenance
                                    </span>
                                  </TypographyComp>
                                </WithStyles(TypographyComp)>
                              </Typography>
                            </div>
                            <div>
                              <Typography
                                bold={true}
                                className="ContentComp-description-0-3-338"
                                variant="standard"
                              >
                                <WithStyles(TypographyComp)
                                  bold={true}
                                  className="ContentComp-description-0-3-338"
                                  innerRef={null}
                                  jssContext={
                                    Object {
                                      "classNamePrefix": "",
                                      "disableStylesGeneration": false,
                                    }
                                  }
                                  theme={Object {}}
                                  variant="standard"
                                >
                                  <TypographyComp
                                    bold={true}
                                    className="ContentComp-description-0-3-338"
                                    classes={
                                      Object {
                                        "big": "TypographyComp-big-0-3-7",
                                        "bold": "TypographyComp-bold-0-3-1",
                                        "capitalize": "TypographyComp-capitalize-0-3-12",
                                        "distance": "TypographyComp-distance-0-3-6",
                                        "ellipsis": "TypographyComp-ellipsis-0-3-14",
                                        "giant": "TypographyComp-giant-0-3-9",
                                        "heading": "TypographyComp-heading-0-3-8",
                                        "italic": "TypographyComp-italic-0-3-3",
                                        "lowercase": "TypographyComp-lowercase-0-3-11",
                                        "noWrap": "TypographyComp-noWrap-0-3-13",
                                        "semiBold": "TypographyComp-semiBold-0-3-2",
                                        "standard": "TypographyComp-standard-0-3-5",
                                        "subtext": "TypographyComp-subtext-0-3-4",
                                        "uppercase": "TypographyComp-uppercase-0-3-10",
                                      }
                                    }
                                    variant="standard"
                                  >
                                    <span
                                      className="ContentComp-description-0-3-338 TypographyComp-standard-0-3-5 TypographyComp-bold-0-3-1"
                                    >
                                      2/1/2018, 5:26:09 AM
                                    </span>
                                  </TypographyComp>
                                </WithStyles(TypographyComp)>
                              </Typography>
                            </div>
                            <div>
                              <Typography
                                className="ContentComp-description-0-3-338"
                                variant="standard"
                              >
                                <WithStyles(TypographyComp)
                                  className="ContentComp-description-0-3-338"
                                  innerRef={null}
                                  jssContext={
                                    Object {
                                      "classNamePrefix": "",
                                      "disableStylesGeneration": false,
                                    }
                                  }
                                  theme={Object {}}
                                  variant="standard"
                                >
                                  <TypographyComp
                                    className="ContentComp-description-0-3-338"
                                    classes={
                                      Object {
                                        "big": "TypographyComp-big-0-3-7",
                                        "bold": "TypographyComp-bold-0-3-1",
                                        "capitalize": "TypographyComp-capitalize-0-3-12",
                                        "distance": "TypographyComp-distance-0-3-6",
                                        "ellipsis": "TypographyComp-ellipsis-0-3-14",
                                        "giant": "TypographyComp-giant-0-3-9",
                                        "heading": "TypographyComp-heading-0-3-8",
                                        "italic": "TypographyComp-italic-0-3-3",
                                        "lowercase": "TypographyComp-lowercase-0-3-11",
                                        "noWrap": "TypographyComp-noWrap-0-3-13",
                                        "semiBold": "TypographyComp-semiBold-0-3-2",
                                        "standard": "TypographyComp-standard-0-3-5",
                                        "subtext": "TypographyComp-subtext-0-3-4",
                                        "uppercase": "TypographyComp-uppercase-0-3-10",
                                      }
                                    }
                                    variant="standard"
                                  >
                                    <span
                                      className="ContentComp-description-0-3-338 TypographyComp-standard-0-3-5"
                                    >
                                      Error in machine maintenance, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla varius felis fringilla felis volutpat volutpat. Nunc felis mi, placerat vitae posuere nec, condimentum in lectus.
                                    </span>
                                  </TypographyComp>
                                </WithStyles(TypographyComp)>
                              </Typography>
                            </div>
                          </div>
                        </ContentComp>
                      </WithStyles(ContentComp)>
                    </Content>
                  </div>
                </div>
              </TimelineEventComp>
            </WithStyles(TimelineEventComp)>
          </TimelineEvent>
          <TimelineEvent
            content={
              Object {
                "dateFormatted": <React.Fragment>
                  2/1/2018, 6:26:09 AM
                </React.Fragment>,
                "description": "Calibration error on the assembly line.",
                "title": "Assembly errors",
              }
            }
            domId="5-[object Object]"
            key="5-[object Object]"
            status={
              Object {
                "arrangement": "end",
                "color": "#f57c00",
              }
            }
          >
            <WithStyles(TimelineEventComp)
              content={
                Object {
                  "dateFormatted": <React.Fragment>
                    2/1/2018, 6:26:09 AM
                  </React.Fragment>,
                  "description": "Calibration error on the assembly line.",
                  "title": "Assembly errors",
                }
              }
              domId="5-[object Object]"
              innerRef={null}
              jssContext={
                Object {
                  "classNamePrefix": "",
                  "disableStylesGeneration": false,
                }
              }
              status={
                Object {
                  "arrangement": "end",
                  "color": "#f57c00",
                }
              }
              theme={Object {}}
            >
              <TimelineEventComp
                classes={
                  Object {
                    "content": "TimelineEventComp-content-0-3-331",
                    "root": "TimelineEventComp-root-0-3-329",
                    "status": "TimelineEventComp-status-0-3-330",
                  }
                }
                content={
                  Object {
                    "dateFormatted": <React.Fragment>
                      2/1/2018, 6:26:09 AM
                    </React.Fragment>,
                    "description": "Calibration error on the assembly line.",
                    "title": "Assembly errors",
                  }
                }
                domId="5-[object Object]"
                status={
                  Object {
                    "arrangement": "end",
                    "color": "#f57c00",
                  }
                }
              >
                <div
                  className="TimelineEventComp-root-0-3-329"
                  id="5-[object Object]"
                >
                  <div
                    className="TimelineEventComp-status-0-3-330"
                  >
                    <Status
                      arrangement="end"
                      color="#f57c00"
                    >
                      <WithStyles(StatusComp)
                        arrangement="end"
                        color="#f57c00"
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        theme={Object {}}
                      >
                        <StatusComp
                          arrangement="end"
                          classes={
                            Object {
                              "circle": "StatusComp-circle-0-3-336",
                              "circleWrapper": "StatusComp-circleWrapper-0-3-335",
                              "line": "StatusComp-line-0-3-334",
                              "lineWrapper": "StatusComp-lineWrapper-0-3-333",
                              "root": "StatusComp-root-0-3-332",
                            }
                          }
                          color="#f57c00"
                        >
                          <div
                            className="StatusComp-root-0-3-332"
                          >
                            <div
                              className="StatusComp-lineWrapper-0-3-333"
                              style={
                                Object {
                                  "height": 8,
                                  "paddingTop": 0,
                                }
                              }
                            >
                              <div
                                className="StatusComp-line-0-3-334"
                                style={
                                  Object {
                                    "backgroundColor": "#f57c00",
                                  }
                                }
                              />
                            </div>
                            <div
                              className="StatusComp-circleWrapper-0-3-335"
                            >
                              <div
                                className="StatusComp-circle-0-3-336"
                                style={
                                  Object {
                                    "backgroundColor": "#f57c00",
                                  }
                                }
                              />
                            </div>
                          </div>
                        </StatusComp>
                      </WithStyles(StatusComp)>
                    </Status>
                  </div>
                  <div
                    className="TimelineEventComp-content-0-3-331"
                  >
                    <Content
                      dateFormatted={
                        <React.Fragment>
                          2/1/2018, 6:26:09 AM
                        </React.Fragment>
                      }
                      description="Calibration error on the assembly line."
                      title="Assembly errors"
                    >
                      <WithStyles(ContentComp)
                        dateFormatted={
                          <React.Fragment>
                            2/1/2018, 6:26:09 AM
                          </React.Fragment>
                        }
                        description="Calibration error on the assembly line."
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        theme={Object {}}
                        title="Assembly errors"
                      >
                        <ContentComp
                          classes={
                            Object {
                              "description": "ContentComp-description-0-3-338",
                              "root": "ContentComp-root-0-3-337",
                            }
                          }
                          dateFormatted={
                            <React.Fragment>
                              2/1/2018, 6:26:09 AM
                            </React.Fragment>
                          }
                          description="Calibration error on the assembly line."
                          title="Assembly errors"
                        >
                          <div
                            className="ContentComp-root-0-3-337"
                          >
                            <div>
                              <Typography
                                bold={true}
                                className="ContentComp-description-0-3-338"
                                variant="distance"
                              >
                                <WithStyles(TypographyComp)
                                  bold={true}
                                  className="ContentComp-description-0-3-338"
                                  innerRef={null}
                                  jssContext={
                                    Object {
                                      "classNamePrefix": "",
                                      "disableStylesGeneration": false,
                                    }
                                  }
                                  theme={Object {}}
                                  variant="distance"
                                >
                                  <TypographyComp
                                    bold={true}
                                    className="ContentComp-description-0-3-338"
                                    classes={
                                      Object {
                                        "big": "TypographyComp-big-0-3-7",
                                        "bold": "TypographyComp-bold-0-3-1",
                                        "capitalize": "TypographyComp-capitalize-0-3-12",
                                        "distance": "TypographyComp-distance-0-3-6",
                                        "ellipsis": "TypographyComp-ellipsis-0-3-14",
                                        "giant": "TypographyComp-giant-0-3-9",
                                        "heading": "TypographyComp-heading-0-3-8",
                                        "italic": "TypographyComp-italic-0-3-3",
                                        "lowercase": "TypographyComp-lowercase-0-3-11",
                                        "noWrap": "TypographyComp-noWrap-0-3-13",
                                        "semiBold": "TypographyComp-semiBold-0-3-2",
                                        "standard": "TypographyComp-standard-0-3-5",
                                        "subtext": "TypographyComp-subtext-0-3-4",
                                        "uppercase": "TypographyComp-uppercase-0-3-10",
                                      }
                                    }
                                    variant="distance"
                                  >
                                    <span
                                      className="ContentComp-description-0-3-338 TypographyComp-distance-0-3-6 TypographyComp-bold-0-3-1"
                                    >
                                      Assembly errors
                                    </span>
                                  </TypographyComp>
                                </WithStyles(TypographyComp)>
                              </Typography>
                            </div>
                            <div>
                              <Typography
                                bold={true}
                                className="ContentComp-description-0-3-338"
                                variant="standard"
                              >
                                <WithStyles(TypographyComp)
                                  bold={true}
                                  className="ContentComp-description-0-3-338"
                                  innerRef={null}
                                  jssContext={
                                    Object {
                                      "classNamePrefix": "",
                                      "disableStylesGeneration": false,
                                    }
                                  }
                                  theme={Object {}}
                                  variant="standard"
                                >
                                  <TypographyComp
                                    bold={true}
                                    className="ContentComp-description-0-3-338"
                                    classes={
                                      Object {
                                        "big": "TypographyComp-big-0-3-7",
                                        "bold": "TypographyComp-bold-0-3-1",
                                        "capitalize": "TypographyComp-capitalize-0-3-12",
                                        "distance": "TypographyComp-distance-0-3-6",
                                        "ellipsis": "TypographyComp-ellipsis-0-3-14",
                                        "giant": "TypographyComp-giant-0-3-9",
                                        "heading": "TypographyComp-heading-0-3-8",
                                        "italic": "TypographyComp-italic-0-3-3",
                                        "lowercase": "TypographyComp-lowercase-0-3-11",
                                        "noWrap": "TypographyComp-noWrap-0-3-13",
                                        "semiBold": "TypographyComp-semiBold-0-3-2",
                                        "standard": "TypographyComp-standard-0-3-5",
                                        "subtext": "TypographyComp-subtext-0-3-4",
                                        "uppercase": "TypographyComp-uppercase-0-3-10",
                                      }
                                    }
                                    variant="standard"
                                  >
                                    <span
                                      className="ContentComp-description-0-3-338 TypographyComp-standard-0-3-5 TypographyComp-bold-0-3-1"
                                    >
                                      2/1/2018, 6:26:09 AM
                                    </span>
                                  </TypographyComp>
                                </WithStyles(TypographyComp)>
                              </Typography>
                            </div>
                            <div>
                              <Typography
                                className="ContentComp-description-0-3-338"
                                variant="standard"
                              >
                                <WithStyles(TypographyComp)
                                  className="ContentComp-description-0-3-338"
                                  innerRef={null}
                                  jssContext={
                                    Object {
                                      "classNamePrefix": "",
                                      "disableStylesGeneration": false,
                                    }
                                  }
                                  theme={Object {}}
                                  variant="standard"
                                >
                                  <TypographyComp
                                    className="ContentComp-description-0-3-338"
                                    classes={
                                      Object {
                                        "big": "TypographyComp-big-0-3-7",
                                        "bold": "TypographyComp-bold-0-3-1",
                                        "capitalize": "TypographyComp-capitalize-0-3-12",
                                        "distance": "TypographyComp-distance-0-3-6",
                                        "ellipsis": "TypographyComp-ellipsis-0-3-14",
                                        "giant": "TypographyComp-giant-0-3-9",
                                        "heading": "TypographyComp-heading-0-3-8",
                                        "italic": "TypographyComp-italic-0-3-3",
                                        "lowercase": "TypographyComp-lowercase-0-3-11",
                                        "noWrap": "TypographyComp-noWrap-0-3-13",
                                        "semiBold": "TypographyComp-semiBold-0-3-2",
                                        "standard": "TypographyComp-standard-0-3-5",
                                        "subtext": "TypographyComp-subtext-0-3-4",
                                        "uppercase": "TypographyComp-uppercase-0-3-10",
                                      }
                                    }
                                    variant="standard"
                                  >
                                    <span
                                      className="ContentComp-description-0-3-338 TypographyComp-standard-0-3-5"
                                    >
                                      Calibration error on the assembly line.
                                    </span>
                                  </TypographyComp>
                                </WithStyles(TypographyComp)>
                              </Typography>
                            </div>
                          </div>
                        </ContentComp>
                      </WithStyles(ContentComp)>
                    </Content>
                  </div>
                </div>
              </TimelineEventComp>
            </WithStyles(TimelineEventComp)>
          </TimelineEvent>
          <TimelineEvent
            content={
              Object {
                "dateFormatted": <React.Fragment>
                  2/1/2018, 7:26:09 AM
                </React.Fragment>,
                "description": undefined,
                "title": "Resolved",
              }
            }
            domId="6-[object Object]"
            key="6-[object Object]"
            status={
              Object {
                "arrangement": "single",
                "color": "#4caf50",
              }
            }
          >
            <WithStyles(TimelineEventComp)
              content={
                Object {
                  "dateFormatted": <React.Fragment>
                    2/1/2018, 7:26:09 AM
                  </React.Fragment>,
                  "description": undefined,
                  "title": "Resolved",
                }
              }
              domId="6-[object Object]"
              innerRef={null}
              jssContext={
                Object {
                  "classNamePrefix": "",
                  "disableStylesGeneration": false,
                }
              }
              status={
                Object {
                  "arrangement": "single",
                  "color": "#4caf50",
                }
              }
              theme={Object {}}
            >
              <TimelineEventComp
                classes={
                  Object {
                    "content": "TimelineEventComp-content-0-3-331",
                    "root": "TimelineEventComp-root-0-3-329",
                    "status": "TimelineEventComp-status-0-3-330",
                  }
                }
                content={
                  Object {
                    "dateFormatted": <React.Fragment>
                      2/1/2018, 7:26:09 AM
                    </React.Fragment>,
                    "description": undefined,
                    "title": "Resolved",
                  }
                }
                domId="6-[object Object]"
                status={
                  Object {
                    "arrangement": "single",
                    "color": "#4caf50",
                  }
                }
              >
                <div
                  className="TimelineEventComp-root-0-3-329"
                  id="6-[object Object]"
                >
                  <div
                    className="TimelineEventComp-status-0-3-330"
                  >
                    <Status
                      arrangement="single"
                      color="#4caf50"
                    >
                      <WithStyles(StatusComp)
                        arrangement="single"
                        color="#4caf50"
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        theme={Object {}}
                      >
                        <StatusComp
                          arrangement="single"
                          classes={
                            Object {
                              "circle": "StatusComp-circle-0-3-336",
                              "circleWrapper": "StatusComp-circleWrapper-0-3-335",
                              "line": "StatusComp-line-0-3-334",
                              "lineWrapper": "StatusComp-lineWrapper-0-3-333",
                              "root": "StatusComp-root-0-3-332",
                            }
                          }
                          color="#4caf50"
                        >
                          <div
                            className="StatusComp-root-0-3-332"
                          >
                            <div
                              className="StatusComp-lineWrapper-0-3-333"
                              style={
                                Object {
                                  "height": 0,
                                }
                              }
                            >
                              <div
                                className="StatusComp-line-0-3-334"
                                style={
                                  Object {
                                    "backgroundColor": "#4caf50",
                                  }
                                }
                              />
                            </div>
                            <div
                              className="StatusComp-circleWrapper-0-3-335"
                            >
                              <div
                                className="StatusComp-circle-0-3-336"
                                style={
                                  Object {
                                    "backgroundColor": "#4caf50",
                                  }
                                }
                              />
                            </div>
                          </div>
                        </StatusComp>
                      </WithStyles(StatusComp)>
                    </Status>
                  </div>
                  <div
                    className="TimelineEventComp-content-0-3-331"
                  >
                    <Content
                      dateFormatted={
                        <React.Fragment>
                          2/1/2018, 7:26:09 AM
                        </React.Fragment>
                      }
                      title="Resolved"
                    >
                      <WithStyles(ContentComp)
                        dateFormatted={
                          <React.Fragment>
                            2/1/2018, 7:26:09 AM
                          </React.Fragment>
                        }
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        theme={Object {}}
                        title="Resolved"
                      >
                        <ContentComp
                          classes={
                            Object {
                              "description": "ContentComp-description-0-3-338",
                              "root": "ContentComp-root-0-3-337",
                            }
                          }
                          dateFormatted={
                            <React.Fragment>
                              2/1/2018, 7:26:09 AM
                            </React.Fragment>
                          }
                          title="Resolved"
                        >
                          <div
                            className="ContentComp-root-0-3-337"
                          >
                            <div>
                              <Typography
                                bold={true}
                                className="ContentComp-description-0-3-338"
                                variant="distance"
                              >
                                <WithStyles(TypographyComp)
                                  bold={true}
                                  className="ContentComp-description-0-3-338"
                                  innerRef={null}
                                  jssContext={
                                    Object {
                                      "classNamePrefix": "",
                                      "disableStylesGeneration": false,
                                    }
                                  }
                                  theme={Object {}}
                                  variant="distance"
                                >
                                  <TypographyComp
                                    bold={true}
                                    className="ContentComp-description-0-3-338"
                                    classes={
                                      Object {
                                        "big": "TypographyComp-big-0-3-7",
                                        "bold": "TypographyComp-bold-0-3-1",
                                        "capitalize": "TypographyComp-capitalize-0-3-12",
                                        "distance": "TypographyComp-distance-0-3-6",
                                        "ellipsis": "TypographyComp-ellipsis-0-3-14",
                                        "giant": "TypographyComp-giant-0-3-9",
                                        "heading": "TypographyComp-heading-0-3-8",
                                        "italic": "TypographyComp-italic-0-3-3",
                                        "lowercase": "TypographyComp-lowercase-0-3-11",
                                        "noWrap": "TypographyComp-noWrap-0-3-13",
                                        "semiBold": "TypographyComp-semiBold-0-3-2",
                                        "standard": "TypographyComp-standard-0-3-5",
                                        "subtext": "TypographyComp-subtext-0-3-4",
                                        "uppercase": "TypographyComp-uppercase-0-3-10",
                                      }
                                    }
                                    variant="distance"
                                  >
                                    <span
                                      className="ContentComp-description-0-3-338 TypographyComp-distance-0-3-6 TypographyComp-bold-0-3-1"
                                    >
                                      Resolved
                                    </span>
                                  </TypographyComp>
                                </WithStyles(TypographyComp)>
                              </Typography>
                            </div>
                            <div>
                              <Typography
                                bold={true}
                                className="ContentComp-description-0-3-338"
                                variant="standard"
                              >
                                <WithStyles(TypographyComp)
                                  bold={true}
                                  className="ContentComp-description-0-3-338"
                                  innerRef={null}
                                  jssContext={
                                    Object {
                                      "classNamePrefix": "",
                                      "disableStylesGeneration": false,
                                    }
                                  }
                                  theme={Object {}}
                                  variant="standard"
                                >
                                  <TypographyComp
                                    bold={true}
                                    className="ContentComp-description-0-3-338"
                                    classes={
                                      Object {
                                        "big": "TypographyComp-big-0-3-7",
                                        "bold": "TypographyComp-bold-0-3-1",
                                        "capitalize": "TypographyComp-capitalize-0-3-12",
                                        "distance": "TypographyComp-distance-0-3-6",
                                        "ellipsis": "TypographyComp-ellipsis-0-3-14",
                                        "giant": "TypographyComp-giant-0-3-9",
                                        "heading": "TypographyComp-heading-0-3-8",
                                        "italic": "TypographyComp-italic-0-3-3",
                                        "lowercase": "TypographyComp-lowercase-0-3-11",
                                        "noWrap": "TypographyComp-noWrap-0-3-13",
                                        "semiBold": "TypographyComp-semiBold-0-3-2",
                                        "standard": "TypographyComp-standard-0-3-5",
                                        "subtext": "TypographyComp-subtext-0-3-4",
                                        "uppercase": "TypographyComp-uppercase-0-3-10",
                                      }
                                    }
                                    variant="standard"
                                  >
                                    <span
                                      className="ContentComp-description-0-3-338 TypographyComp-standard-0-3-5 TypographyComp-bold-0-3-1"
                                    >
                                      2/1/2018, 7:26:09 AM
                                    </span>
                                  </TypographyComp>
                                </WithStyles(TypographyComp)>
                              </Typography>
                            </div>
                            <div />
                          </div>
                        </ContentComp>
                      </WithStyles(ContentComp)>
                    </Content>
                  </div>
                </div>
              </TimelineEventComp>
            </WithStyles(TimelineEventComp)>
          </TimelineEvent>
          <TimelineEvent
            content={
              Object {
                "dateFormatted": <React.Fragment>
                  2/1/2018, 8:26:09 AM
                </React.Fragment>,
                "description": undefined,
                "title": "Assembly errors",
              }
            }
            domId="7-[object Object]"
            key="7-[object Object]"
            status={
              Object {
                "arrangement": "single",
                "color": "#f57c00",
              }
            }
          >
            <WithStyles(TimelineEventComp)
              content={
                Object {
                  "dateFormatted": <React.Fragment>
                    2/1/2018, 8:26:09 AM
                  </React.Fragment>,
                  "description": undefined,
                  "title": "Assembly errors",
                }
              }
              domId="7-[object Object]"
              innerRef={null}
              jssContext={
                Object {
                  "classNamePrefix": "",
                  "disableStylesGeneration": false,
                }
              }
              status={
                Object {
                  "arrangement": "single",
                  "color": "#f57c00",
                }
              }
              theme={Object {}}
            >
              <TimelineEventComp
                classes={
                  Object {
                    "content": "TimelineEventComp-content-0-3-331",
                    "root": "TimelineEventComp-root-0-3-329",
                    "status": "TimelineEventComp-status-0-3-330",
                  }
                }
                content={
                  Object {
                    "dateFormatted": <React.Fragment>
                      2/1/2018, 8:26:09 AM
                    </React.Fragment>,
                    "description": undefined,
                    "title": "Assembly errors",
                  }
                }
                domId="7-[object Object]"
                status={
                  Object {
                    "arrangement": "single",
                    "color": "#f57c00",
                  }
                }
              >
                <div
                  className="TimelineEventComp-root-0-3-329"
                  id="7-[object Object]"
                >
                  <div
                    className="TimelineEventComp-status-0-3-330"
                  >
                    <Status
                      arrangement="single"
                      color="#f57c00"
                    >
                      <WithStyles(StatusComp)
                        arrangement="single"
                        color="#f57c00"
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        theme={Object {}}
                      >
                        <StatusComp
                          arrangement="single"
                          classes={
                            Object {
                              "circle": "StatusComp-circle-0-3-336",
                              "circleWrapper": "StatusComp-circleWrapper-0-3-335",
                              "line": "StatusComp-line-0-3-334",
                              "lineWrapper": "StatusComp-lineWrapper-0-3-333",
                              "root": "StatusComp-root-0-3-332",
                            }
                          }
                          color="#f57c00"
                        >
                          <div
                            className="StatusComp-root-0-3-332"
                          >
                            <div
                              className="StatusComp-lineWrapper-0-3-333"
                              style={
                                Object {
                                  "height": 0,
                                }
                              }
                            >
                              <div
                                className="StatusComp-line-0-3-334"
                                style={
                                  Object {
                                    "backgroundColor": "#f57c00",
                                  }
                                }
                              />
                            </div>
                            <div
                              className="StatusComp-circleWrapper-0-3-335"
                            >
                              <div
                                className="StatusComp-circle-0-3-336"
                                style={
                                  Object {
                                    "backgroundColor": "#f57c00",
                                  }
                                }
                              />
                            </div>
                          </div>
                        </StatusComp>
                      </WithStyles(StatusComp)>
                    </Status>
                  </div>
                  <div
                    className="TimelineEventComp-content-0-3-331"
                  >
                    <Content
                      dateFormatted={
                        <React.Fragment>
                          2/1/2018, 8:26:09 AM
                        </React.Fragment>
                      }
                      title="Assembly errors"
                    >
                      <WithStyles(ContentComp)
                        dateFormatted={
                          <React.Fragment>
                            2/1/2018, 8:26:09 AM
                          </React.Fragment>
                        }
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        theme={Object {}}
                        title="Assembly errors"
                      >
                        <ContentComp
                          classes={
                            Object {
                              "description": "ContentComp-description-0-3-338",
                              "root": "ContentComp-root-0-3-337",
                            }
                          }
                          dateFormatted={
                            <React.Fragment>
                              2/1/2018, 8:26:09 AM
                            </React.Fragment>
                          }
                          title="Assembly errors"
                        >
                          <div
                            className="ContentComp-root-0-3-337"
                          >
                            <div>
                              <Typography
                                bold={true}
                                className="ContentComp-description-0-3-338"
                                variant="distance"
                              >
                                <WithStyles(TypographyComp)
                                  bold={true}
                                  className="ContentComp-description-0-3-338"
                                  innerRef={null}
                                  jssContext={
                                    Object {
                                      "classNamePrefix": "",
                                      "disableStylesGeneration": false,
                                    }
                                  }
                                  theme={Object {}}
                                  variant="distance"
                                >
                                  <TypographyComp
                                    bold={true}
                                    className="ContentComp-description-0-3-338"
                                    classes={
                                      Object {
                                        "big": "TypographyComp-big-0-3-7",
                                        "bold": "TypographyComp-bold-0-3-1",
                                        "capitalize": "TypographyComp-capitalize-0-3-12",
                                        "distance": "TypographyComp-distance-0-3-6",
                                        "ellipsis": "TypographyComp-ellipsis-0-3-14",
                                        "giant": "TypographyComp-giant-0-3-9",
                                        "heading": "TypographyComp-heading-0-3-8",
                                        "italic": "TypographyComp-italic-0-3-3",
                                        "lowercase": "TypographyComp-lowercase-0-3-11",
                                        "noWrap": "TypographyComp-noWrap-0-3-13",
                                        "semiBold": "TypographyComp-semiBold-0-3-2",
                                        "standard": "TypographyComp-standard-0-3-5",
                                        "subtext": "TypographyComp-subtext-0-3-4",
                                        "uppercase": "TypographyComp-uppercase-0-3-10",
                                      }
                                    }
                                    variant="distance"
                                  >
                                    <span
                                      className="ContentComp-description-0-3-338 TypographyComp-distance-0-3-6 TypographyComp-bold-0-3-1"
                                    >
                                      Assembly errors
                                    </span>
                                  </TypographyComp>
                                </WithStyles(TypographyComp)>
                              </Typography>
                            </div>
                            <div>
                              <Typography
                                bold={true}
                                className="ContentComp-description-0-3-338"
                                variant="standard"
                              >
                                <WithStyles(TypographyComp)
                                  bold={true}
                                  className="ContentComp-description-0-3-338"
                                  innerRef={null}
                                  jssContext={
                                    Object {
                                      "classNamePrefix": "",
                                      "disableStylesGeneration": false,
                                    }
                                  }
                                  theme={Object {}}
                                  variant="standard"
                                >
                                  <TypographyComp
                                    bold={true}
                                    className="ContentComp-description-0-3-338"
                                    classes={
                                      Object {
                                        "big": "TypographyComp-big-0-3-7",
                                        "bold": "TypographyComp-bold-0-3-1",
                                        "capitalize": "TypographyComp-capitalize-0-3-12",
                                        "distance": "TypographyComp-distance-0-3-6",
                                        "ellipsis": "TypographyComp-ellipsis-0-3-14",
                                        "giant": "TypographyComp-giant-0-3-9",
                                        "heading": "TypographyComp-heading-0-3-8",
                                        "italic": "TypographyComp-italic-0-3-3",
                                        "lowercase": "TypographyComp-lowercase-0-3-11",
                                        "noWrap": "TypographyComp-noWrap-0-3-13",
                                        "semiBold": "TypographyComp-semiBold-0-3-2",
                                        "standard": "TypographyComp-standard-0-3-5",
                                        "subtext": "TypographyComp-subtext-0-3-4",
                                        "uppercase": "TypographyComp-uppercase-0-3-10",
                                      }
                                    }
                                    variant="standard"
                                  >
                                    <span
                                      className="ContentComp-description-0-3-338 TypographyComp-standard-0-3-5 TypographyComp-bold-0-3-1"
                                    >
                                      2/1/2018, 8:26:09 AM
                                    </span>
                                  </TypographyComp>
                                </WithStyles(TypographyComp)>
                              </Typography>
                            </div>
                            <div />
                          </div>
                        </ContentComp>
                      </WithStyles(ContentComp)>
                    </Content>
                  </div>
                </div>
              </TimelineEventComp>
            </WithStyles(TimelineEventComp)>
          </TimelineEvent>
          <TimelineEvent
            content={
              Object {
                "dateFormatted": <React.Fragment>
                  2/1/2018, 9:26:09 AM
                </React.Fragment>,
                "description": undefined,
                "title": "Resolved",
              }
            }
            domId="8-[object Object]"
            key="8-[object Object]"
            status={
              Object {
                "arrangement": "single",
                "color": "#4caf50",
              }
            }
          >
            <WithStyles(TimelineEventComp)
              content={
                Object {
                  "dateFormatted": <React.Fragment>
                    2/1/2018, 9:26:09 AM
                  </React.Fragment>,
                  "description": undefined,
                  "title": "Resolved",
                }
              }
              domId="8-[object Object]"
              innerRef={null}
              jssContext={
                Object {
                  "classNamePrefix": "",
                  "disableStylesGeneration": false,
                }
              }
              status={
                Object {
                  "arrangement": "single",
                  "color": "#4caf50",
                }
              }
              theme={Object {}}
            >
              <TimelineEventComp
                classes={
                  Object {
                    "content": "TimelineEventComp-content-0-3-331",
                    "root": "TimelineEventComp-root-0-3-329",
                    "status": "TimelineEventComp-status-0-3-330",
                  }
                }
                content={
                  Object {
                    "dateFormatted": <React.Fragment>
                      2/1/2018, 9:26:09 AM
                    </React.Fragment>,
                    "description": undefined,
                    "title": "Resolved",
                  }
                }
                domId="8-[object Object]"
                status={
                  Object {
                    "arrangement": "single",
                    "color": "#4caf50",
                  }
                }
              >
                <div
                  className="TimelineEventComp-root-0-3-329"
                  id="8-[object Object]"
                >
                  <div
                    className="TimelineEventComp-status-0-3-330"
                  >
                    <Status
                      arrangement="single"
                      color="#4caf50"
                    >
                      <WithStyles(StatusComp)
                        arrangement="single"
                        color="#4caf50"
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        theme={Object {}}
                      >
                        <StatusComp
                          arrangement="single"
                          classes={
                            Object {
                              "circle": "StatusComp-circle-0-3-336",
                              "circleWrapper": "StatusComp-circleWrapper-0-3-335",
                              "line": "StatusComp-line-0-3-334",
                              "lineWrapper": "StatusComp-lineWrapper-0-3-333",
                              "root": "StatusComp-root-0-3-332",
                            }
                          }
                          color="#4caf50"
                        >
                          <div
                            className="StatusComp-root-0-3-332"
                          >
                            <div
                              className="StatusComp-lineWrapper-0-3-333"
                              style={
                                Object {
                                  "height": 0,
                                }
                              }
                            >
                              <div
                                className="StatusComp-line-0-3-334"
                                style={
                                  Object {
                                    "backgroundColor": "#4caf50",
                                  }
                                }
                              />
                            </div>
                            <div
                              className="StatusComp-circleWrapper-0-3-335"
                            >
                              <div
                                className="StatusComp-circle-0-3-336"
                                style={
                                  Object {
                                    "backgroundColor": "#4caf50",
                                  }
                                }
                              />
                            </div>
                          </div>
                        </StatusComp>
                      </WithStyles(StatusComp)>
                    </Status>
                  </div>
                  <div
                    className="TimelineEventComp-content-0-3-331"
                  >
                    <Content
                      dateFormatted={
                        <React.Fragment>
                          2/1/2018, 9:26:09 AM
                        </React.Fragment>
                      }
                      title="Resolved"
                    >
                      <WithStyles(ContentComp)
                        dateFormatted={
                          <React.Fragment>
                            2/1/2018, 9:26:09 AM
                          </React.Fragment>
                        }
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        theme={Object {}}
                        title="Resolved"
                      >
                        <ContentComp
                          classes={
                            Object {
                              "description": "ContentComp-description-0-3-338",
                              "root": "ContentComp-root-0-3-337",
                            }
                          }
                          dateFormatted={
                            <React.Fragment>
                              2/1/2018, 9:26:09 AM
                            </React.Fragment>
                          }
                          title="Resolved"
                        >
                          <div
                            className="ContentComp-root-0-3-337"
                          >
                            <div>
                              <Typography
                                bold={true}
                                className="ContentComp-description-0-3-338"
                                variant="distance"
                              >
                                <WithStyles(TypographyComp)
                                  bold={true}
                                  className="ContentComp-description-0-3-338"
                                  innerRef={null}
                                  jssContext={
                                    Object {
                                      "classNamePrefix": "",
                                      "disableStylesGeneration": false,
                                    }
                                  }
                                  theme={Object {}}
                                  variant="distance"
                                >
                                  <TypographyComp
                                    bold={true}
                                    className="ContentComp-description-0-3-338"
                                    classes={
                                      Object {
                                        "big": "TypographyComp-big-0-3-7",
                                        "bold": "TypographyComp-bold-0-3-1",
                                        "capitalize": "TypographyComp-capitalize-0-3-12",
                                        "distance": "TypographyComp-distance-0-3-6",
                                        "ellipsis": "TypographyComp-ellipsis-0-3-14",
                                        "giant": "TypographyComp-giant-0-3-9",
                                        "heading": "TypographyComp-heading-0-3-8",
                                        "italic": "TypographyComp-italic-0-3-3",
                                        "lowercase": "TypographyComp-lowercase-0-3-11",
                                        "noWrap": "TypographyComp-noWrap-0-3-13",
                                        "semiBold": "TypographyComp-semiBold-0-3-2",
                                        "standard": "TypographyComp-standard-0-3-5",
                                        "subtext": "TypographyComp-subtext-0-3-4",
                                        "uppercase": "TypographyComp-uppercase-0-3-10",
                                      }
                                    }
                                    variant="distance"
                                  >
                                    <span
                                      className="ContentComp-description-0-3-338 TypographyComp-distance-0-3-6 TypographyComp-bold-0-3-1"
                                    >
                                      Resolved
                                    </span>
                                  </TypographyComp>
                                </WithStyles(TypographyComp)>
                              </Typography>
                            </div>
                            <div>
                              <Typography
                                bold={true}
                                className="ContentComp-description-0-3-338"
                                variant="standard"
                              >
                                <WithStyles(TypographyComp)
                                  bold={true}
                                  className="ContentComp-description-0-3-338"
                                  innerRef={null}
                                  jssContext={
                                    Object {
                                      "classNamePrefix": "",
                                      "disableStylesGeneration": false,
                                    }
                                  }
                                  theme={Object {}}
                                  variant="standard"
                                >
                                  <TypographyComp
                                    bold={true}
                                    className="ContentComp-description-0-3-338"
                                    classes={
                                      Object {
                                        "big": "TypographyComp-big-0-3-7",
                                        "bold": "TypographyComp-bold-0-3-1",
                                        "capitalize": "TypographyComp-capitalize-0-3-12",
                                        "distance": "TypographyComp-distance-0-3-6",
                                        "ellipsis": "TypographyComp-ellipsis-0-3-14",
                                        "giant": "TypographyComp-giant-0-3-9",
                                        "heading": "TypographyComp-heading-0-3-8",
                                        "italic": "TypographyComp-italic-0-3-3",
                                        "lowercase": "TypographyComp-lowercase-0-3-11",
                                        "noWrap": "TypographyComp-noWrap-0-3-13",
                                        "semiBold": "TypographyComp-semiBold-0-3-2",
                                        "standard": "TypographyComp-standard-0-3-5",
                                        "subtext": "TypographyComp-subtext-0-3-4",
                                        "uppercase": "TypographyComp-uppercase-0-3-10",
                                      }
                                    }
                                    variant="standard"
                                  >
                                    <span
                                      className="ContentComp-description-0-3-338 TypographyComp-standard-0-3-5 TypographyComp-bold-0-3-1"
                                    >
                                      2/1/2018, 9:26:09 AM
                                    </span>
                                  </TypographyComp>
                                </WithStyles(TypographyComp)>
                              </Typography>
                            </div>
                            <div />
                          </div>
                        </ContentComp>
                      </WithStyles(ContentComp)>
                    </Content>
                  </div>
                </div>
              </TimelineEventComp>
            </WithStyles(TimelineEventComp)>
          </TimelineEvent>
        </div>
      </div>
    </TimelineComp>
  </WithStyles(TimelineComp)>
</Timeline>
`;

exports[`Storyshots Components/Timeline Part content base 1`] = `
<Content
  dateFormatted={
    <React.Fragment>
      2/21/2018, 2:33:16 PM
    </React.Fragment>
  }
  title="Misalignment"
>
  <WithStyles(ContentComp)
    dateFormatted={
      <React.Fragment>
        2/21/2018, 2:33:16 PM
      </React.Fragment>
    }
    innerRef={null}
    jssContext={
      Object {
        "classNamePrefix": "",
        "disableStylesGeneration": false,
      }
    }
    theme={Object {}}
    title="Misalignment"
  >
    <ContentComp
      classes={
        Object {
          "description": "ContentComp-description-0-3-338",
          "root": "ContentComp-root-0-3-337",
        }
      }
      dateFormatted={
        <React.Fragment>
          2/21/2018, 2:33:16 PM
        </React.Fragment>
      }
      title="Misalignment"
    >
      <div
        className="ContentComp-root-0-3-337"
      >
        <div>
          <Typography
            bold={true}
            className="ContentComp-description-0-3-338"
            variant="distance"
          >
            <WithStyles(TypographyComp)
              bold={true}
              className="ContentComp-description-0-3-338"
              innerRef={null}
              jssContext={
                Object {
                  "classNamePrefix": "",
                  "disableStylesGeneration": false,
                }
              }
              theme={Object {}}
              variant="distance"
            >
              <TypographyComp
                bold={true}
                className="ContentComp-description-0-3-338"
                classes={
                  Object {
                    "big": "TypographyComp-big-0-3-7",
                    "bold": "TypographyComp-bold-0-3-1",
                    "capitalize": "TypographyComp-capitalize-0-3-12",
                    "distance": "TypographyComp-distance-0-3-6",
                    "ellipsis": "TypographyComp-ellipsis-0-3-14",
                    "giant": "TypographyComp-giant-0-3-9",
                    "heading": "TypographyComp-heading-0-3-8",
                    "italic": "TypographyComp-italic-0-3-3",
                    "lowercase": "TypographyComp-lowercase-0-3-11",
                    "noWrap": "TypographyComp-noWrap-0-3-13",
                    "semiBold": "TypographyComp-semiBold-0-3-2",
                    "standard": "TypographyComp-standard-0-3-5",
                    "subtext": "TypographyComp-subtext-0-3-4",
                    "uppercase": "TypographyComp-uppercase-0-3-10",
                  }
                }
                variant="distance"
              >
                <span
                  className="ContentComp-description-0-3-338 TypographyComp-distance-0-3-6 TypographyComp-bold-0-3-1"
                >
                  Misalignment
                </span>
              </TypographyComp>
            </WithStyles(TypographyComp)>
          </Typography>
        </div>
        <div>
          <Typography
            bold={true}
            className="ContentComp-description-0-3-338"
            variant="standard"
          >
            <WithStyles(TypographyComp)
              bold={true}
              className="ContentComp-description-0-3-338"
              innerRef={null}
              jssContext={
                Object {
                  "classNamePrefix": "",
                  "disableStylesGeneration": false,
                }
              }
              theme={Object {}}
              variant="standard"
            >
              <TypographyComp
                bold={true}
                className="ContentComp-description-0-3-338"
                classes={
                  Object {
                    "big": "TypographyComp-big-0-3-7",
                    "bold": "TypographyComp-bold-0-3-1",
                    "capitalize": "TypographyComp-capitalize-0-3-12",
                    "distance": "TypographyComp-distance-0-3-6",
                    "ellipsis": "TypographyComp-ellipsis-0-3-14",
                    "giant": "TypographyComp-giant-0-3-9",
                    "heading": "TypographyComp-heading-0-3-8",
                    "italic": "TypographyComp-italic-0-3-3",
                    "lowercase": "TypographyComp-lowercase-0-3-11",
                    "noWrap": "TypographyComp-noWrap-0-3-13",
                    "semiBold": "TypographyComp-semiBold-0-3-2",
                    "standard": "TypographyComp-standard-0-3-5",
                    "subtext": "TypographyComp-subtext-0-3-4",
                    "uppercase": "TypographyComp-uppercase-0-3-10",
                  }
                }
                variant="standard"
              >
                <span
                  className="ContentComp-description-0-3-338 TypographyComp-standard-0-3-5 TypographyComp-bold-0-3-1"
                >
                  2/21/2018, 2:33:16 PM
                </span>
              </TypographyComp>
            </WithStyles(TypographyComp)>
          </Typography>
        </div>
        <div />
      </div>
    </ContentComp>
  </WithStyles(ContentComp)>
</Content>
`;

exports[`Storyshots Components/Timeline Part content description 1`] = `
<Content
  dateFormatted={
    <React.Fragment>
      2/21/2018, 2:33:16 PM
    </React.Fragment>
  }
  description="Misalignment, continues the paper, exists when the centre lines of two neighbouring machines deviate from each other."
  title="Misalignment"
>
  <WithStyles(ContentComp)
    dateFormatted={
      <React.Fragment>
        2/21/2018, 2:33:16 PM
      </React.Fragment>
    }
    description="Misalignment, continues the paper, exists when the centre lines of two neighbouring machines deviate from each other."
    innerRef={null}
    jssContext={
      Object {
        "classNamePrefix": "",
        "disableStylesGeneration": false,
      }
    }
    theme={Object {}}
    title="Misalignment"
  >
    <ContentComp
      classes={
        Object {
          "description": "ContentComp-description-0-3-338",
          "root": "ContentComp-root-0-3-337",
        }
      }
      dateFormatted={
        <React.Fragment>
          2/21/2018, 2:33:16 PM
        </React.Fragment>
      }
      description="Misalignment, continues the paper, exists when the centre lines of two neighbouring machines deviate from each other."
      title="Misalignment"
    >
      <div
        className="ContentComp-root-0-3-337"
      >
        <div>
          <Typography
            bold={true}
            className="ContentComp-description-0-3-338"
            variant="distance"
          >
            <WithStyles(TypographyComp)
              bold={true}
              className="ContentComp-description-0-3-338"
              innerRef={null}
              jssContext={
                Object {
                  "classNamePrefix": "",
                  "disableStylesGeneration": false,
                }
              }
              theme={Object {}}
              variant="distance"
            >
              <TypographyComp
                bold={true}
                className="ContentComp-description-0-3-338"
                classes={
                  Object {
                    "big": "TypographyComp-big-0-3-7",
                    "bold": "TypographyComp-bold-0-3-1",
                    "capitalize": "TypographyComp-capitalize-0-3-12",
                    "distance": "TypographyComp-distance-0-3-6",
                    "ellipsis": "TypographyComp-ellipsis-0-3-14",
                    "giant": "TypographyComp-giant-0-3-9",
                    "heading": "TypographyComp-heading-0-3-8",
                    "italic": "TypographyComp-italic-0-3-3",
                    "lowercase": "TypographyComp-lowercase-0-3-11",
                    "noWrap": "TypographyComp-noWrap-0-3-13",
                    "semiBold": "TypographyComp-semiBold-0-3-2",
                    "standard": "TypographyComp-standard-0-3-5",
                    "subtext": "TypographyComp-subtext-0-3-4",
                    "uppercase": "TypographyComp-uppercase-0-3-10",
                  }
                }
                variant="distance"
              >
                <span
                  className="ContentComp-description-0-3-338 TypographyComp-distance-0-3-6 TypographyComp-bold-0-3-1"
                >
                  Misalignment
                </span>
              </TypographyComp>
            </WithStyles(TypographyComp)>
          </Typography>
        </div>
        <div>
          <Typography
            bold={true}
            className="ContentComp-description-0-3-338"
            variant="standard"
          >
            <WithStyles(TypographyComp)
              bold={true}
              className="ContentComp-description-0-3-338"
              innerRef={null}
              jssContext={
                Object {
                  "classNamePrefix": "",
                  "disableStylesGeneration": false,
                }
              }
              theme={Object {}}
              variant="standard"
            >
              <TypographyComp
                bold={true}
                className="ContentComp-description-0-3-338"
                classes={
                  Object {
                    "big": "TypographyComp-big-0-3-7",
                    "bold": "TypographyComp-bold-0-3-1",
                    "capitalize": "TypographyComp-capitalize-0-3-12",
                    "distance": "TypographyComp-distance-0-3-6",
                    "ellipsis": "TypographyComp-ellipsis-0-3-14",
                    "giant": "TypographyComp-giant-0-3-9",
                    "heading": "TypographyComp-heading-0-3-8",
                    "italic": "TypographyComp-italic-0-3-3",
                    "lowercase": "TypographyComp-lowercase-0-3-11",
                    "noWrap": "TypographyComp-noWrap-0-3-13",
                    "semiBold": "TypographyComp-semiBold-0-3-2",
                    "standard": "TypographyComp-standard-0-3-5",
                    "subtext": "TypographyComp-subtext-0-3-4",
                    "uppercase": "TypographyComp-uppercase-0-3-10",
                  }
                }
                variant="standard"
              >
                <span
                  className="ContentComp-description-0-3-338 TypographyComp-standard-0-3-5 TypographyComp-bold-0-3-1"
                >
                  2/21/2018, 2:33:16 PM
                </span>
              </TypographyComp>
            </WithStyles(TypographyComp)>
          </Typography>
        </div>
        <div>
          <Typography
            className="ContentComp-description-0-3-338"
            variant="standard"
          >
            <WithStyles(TypographyComp)
              className="ContentComp-description-0-3-338"
              innerRef={null}
              jssContext={
                Object {
                  "classNamePrefix": "",
                  "disableStylesGeneration": false,
                }
              }
              theme={Object {}}
              variant="standard"
            >
              <TypographyComp
                className="ContentComp-description-0-3-338"
                classes={
                  Object {
                    "big": "TypographyComp-big-0-3-7",
                    "bold": "TypographyComp-bold-0-3-1",
                    "capitalize": "TypographyComp-capitalize-0-3-12",
                    "distance": "TypographyComp-distance-0-3-6",
                    "ellipsis": "TypographyComp-ellipsis-0-3-14",
                    "giant": "TypographyComp-giant-0-3-9",
                    "heading": "TypographyComp-heading-0-3-8",
                    "italic": "TypographyComp-italic-0-3-3",
                    "lowercase": "TypographyComp-lowercase-0-3-11",
                    "noWrap": "TypographyComp-noWrap-0-3-13",
                    "semiBold": "TypographyComp-semiBold-0-3-2",
                    "standard": "TypographyComp-standard-0-3-5",
                    "subtext": "TypographyComp-subtext-0-3-4",
                    "uppercase": "TypographyComp-uppercase-0-3-10",
                  }
                }
                variant="standard"
              >
                <span
                  className="ContentComp-description-0-3-338 TypographyComp-standard-0-3-5"
                >
                  Misalignment, continues the paper, exists when the centre lines of two neighbouring machines deviate from each other.
                </span>
              </TypographyComp>
            </WithStyles(TypographyComp)>
          </Typography>
        </div>
      </div>
    </ContentComp>
  </WithStyles(ContentComp)>
</Content>
`;

exports[`Storyshots Components/Timeline Part event continue 1`] = `
<TimelineEvent
  content={
    Object {
      "dateFormatted": <React.Fragment>
        2/21/2018, 2:33:16 PM
      </React.Fragment>,
      "description": "Misalignment, continues the paper, exists when the centre lines of two neighbouring machines deviate from each other.",
      "title": "Misalignment",
    }
  }
  domId="1"
  status={
    Object {
      "arrangement": "continue",
      "color": "#f57c00",
    }
  }
>
  <WithStyles(TimelineEventComp)
    content={
      Object {
        "dateFormatted": <React.Fragment>
          2/21/2018, 2:33:16 PM
        </React.Fragment>,
        "description": "Misalignment, continues the paper, exists when the centre lines of two neighbouring machines deviate from each other.",
        "title": "Misalignment",
      }
    }
    domId="1"
    innerRef={null}
    jssContext={
      Object {
        "classNamePrefix": "",
        "disableStylesGeneration": false,
      }
    }
    status={
      Object {
        "arrangement": "continue",
        "color": "#f57c00",
      }
    }
    theme={Object {}}
  >
    <TimelineEventComp
      classes={
        Object {
          "content": "TimelineEventComp-content-0-3-331",
          "root": "TimelineEventComp-root-0-3-329",
          "status": "TimelineEventComp-status-0-3-330",
        }
      }
      content={
        Object {
          "dateFormatted": <React.Fragment>
            2/21/2018, 2:33:16 PM
          </React.Fragment>,
          "description": "Misalignment, continues the paper, exists when the centre lines of two neighbouring machines deviate from each other.",
          "title": "Misalignment",
        }
      }
      domId="1"
      status={
        Object {
          "arrangement": "continue",
          "color": "#f57c00",
        }
      }
    >
      <div
        className="TimelineEventComp-root-0-3-329"
        id="1"
      >
        <div
          className="TimelineEventComp-status-0-3-330"
        >
          <Status
            arrangement="continue"
            color="#f57c00"
          >
            <WithStyles(StatusComp)
              arrangement="continue"
              color="#f57c00"
              innerRef={null}
              jssContext={
                Object {
                  "classNamePrefix": "",
                  "disableStylesGeneration": false,
                }
              }
              theme={Object {}}
            >
              <StatusComp
                arrangement="continue"
                classes={
                  Object {
                    "circle": "StatusComp-circle-0-3-336",
                    "circleWrapper": "StatusComp-circleWrapper-0-3-335",
                    "line": "StatusComp-line-0-3-334",
                    "lineWrapper": "StatusComp-lineWrapper-0-3-333",
                    "root": "StatusComp-root-0-3-332",
                  }
                }
                color="#f57c00"
              >
                <div
                  className="StatusComp-root-0-3-332"
                >
                  <div
                    className="StatusComp-lineWrapper-0-3-333"
                    style={
                      Object {
                        "paddingTop": 0,
                      }
                    }
                  >
                    <div
                      className="StatusComp-line-0-3-334"
                      style={
                        Object {
                          "backgroundColor": "#f57c00",
                        }
                      }
                    />
                  </div>
                  <div
                    className="StatusComp-circleWrapper-0-3-335"
                  >
                    <div
                      className="StatusComp-circle-0-3-336"
                      style={
                        Object {
                          "backgroundColor": "#f57c00",
                        }
                      }
                    />
                  </div>
                </div>
              </StatusComp>
            </WithStyles(StatusComp)>
          </Status>
        </div>
        <div
          className="TimelineEventComp-content-0-3-331"
        >
          <Content
            dateFormatted={
              <React.Fragment>
                2/21/2018, 2:33:16 PM
              </React.Fragment>
            }
            description="Misalignment, continues the paper, exists when the centre lines of two neighbouring machines deviate from each other."
            title="Misalignment"
          >
            <WithStyles(ContentComp)
              dateFormatted={
                <React.Fragment>
                  2/21/2018, 2:33:16 PM
                </React.Fragment>
              }
              description="Misalignment, continues the paper, exists when the centre lines of two neighbouring machines deviate from each other."
              innerRef={null}
              jssContext={
                Object {
                  "classNamePrefix": "",
                  "disableStylesGeneration": false,
                }
              }
              theme={Object {}}
              title="Misalignment"
            >
              <ContentComp
                classes={
                  Object {
                    "description": "ContentComp-description-0-3-338",
                    "root": "ContentComp-root-0-3-337",
                  }
                }
                dateFormatted={
                  <React.Fragment>
                    2/21/2018, 2:33:16 PM
                  </React.Fragment>
                }
                description="Misalignment, continues the paper, exists when the centre lines of two neighbouring machines deviate from each other."
                title="Misalignment"
              >
                <div
                  className="ContentComp-root-0-3-337"
                >
                  <div>
                    <Typography
                      bold={true}
                      className="ContentComp-description-0-3-338"
                      variant="distance"
                    >
                      <WithStyles(TypographyComp)
                        bold={true}
                        className="ContentComp-description-0-3-338"
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        theme={Object {}}
                        variant="distance"
                      >
                        <TypographyComp
                          bold={true}
                          className="ContentComp-description-0-3-338"
                          classes={
                            Object {
                              "big": "TypographyComp-big-0-3-7",
                              "bold": "TypographyComp-bold-0-3-1",
                              "capitalize": "TypographyComp-capitalize-0-3-12",
                              "distance": "TypographyComp-distance-0-3-6",
                              "ellipsis": "TypographyComp-ellipsis-0-3-14",
                              "giant": "TypographyComp-giant-0-3-9",
                              "heading": "TypographyComp-heading-0-3-8",
                              "italic": "TypographyComp-italic-0-3-3",
                              "lowercase": "TypographyComp-lowercase-0-3-11",
                              "noWrap": "TypographyComp-noWrap-0-3-13",
                              "semiBold": "TypographyComp-semiBold-0-3-2",
                              "standard": "TypographyComp-standard-0-3-5",
                              "subtext": "TypographyComp-subtext-0-3-4",
                              "uppercase": "TypographyComp-uppercase-0-3-10",
                            }
                          }
                          variant="distance"
                        >
                          <span
                            className="ContentComp-description-0-3-338 TypographyComp-distance-0-3-6 TypographyComp-bold-0-3-1"
                          >
                            Misalignment
                          </span>
                        </TypographyComp>
                      </WithStyles(TypographyComp)>
                    </Typography>
                  </div>
                  <div>
                    <Typography
                      bold={true}
                      className="ContentComp-description-0-3-338"
                      variant="standard"
                    >
                      <WithStyles(TypographyComp)
                        bold={true}
                        className="ContentComp-description-0-3-338"
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        theme={Object {}}
                        variant="standard"
                      >
                        <TypographyComp
                          bold={true}
                          className="ContentComp-description-0-3-338"
                          classes={
                            Object {
                              "big": "TypographyComp-big-0-3-7",
                              "bold": "TypographyComp-bold-0-3-1",
                              "capitalize": "TypographyComp-capitalize-0-3-12",
                              "distance": "TypographyComp-distance-0-3-6",
                              "ellipsis": "TypographyComp-ellipsis-0-3-14",
                              "giant": "TypographyComp-giant-0-3-9",
                              "heading": "TypographyComp-heading-0-3-8",
                              "italic": "TypographyComp-italic-0-3-3",
                              "lowercase": "TypographyComp-lowercase-0-3-11",
                              "noWrap": "TypographyComp-noWrap-0-3-13",
                              "semiBold": "TypographyComp-semiBold-0-3-2",
                              "standard": "TypographyComp-standard-0-3-5",
                              "subtext": "TypographyComp-subtext-0-3-4",
                              "uppercase": "TypographyComp-uppercase-0-3-10",
                            }
                          }
                          variant="standard"
                        >
                          <span
                            className="ContentComp-description-0-3-338 TypographyComp-standard-0-3-5 TypographyComp-bold-0-3-1"
                          >
                            2/21/2018, 2:33:16 PM
                          </span>
                        </TypographyComp>
                      </WithStyles(TypographyComp)>
                    </Typography>
                  </div>
                  <div>
                    <Typography
                      className="ContentComp-description-0-3-338"
                      variant="standard"
                    >
                      <WithStyles(TypographyComp)
                        className="ContentComp-description-0-3-338"
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        theme={Object {}}
                        variant="standard"
                      >
                        <TypographyComp
                          className="ContentComp-description-0-3-338"
                          classes={
                            Object {
                              "big": "TypographyComp-big-0-3-7",
                              "bold": "TypographyComp-bold-0-3-1",
                              "capitalize": "TypographyComp-capitalize-0-3-12",
                              "distance": "TypographyComp-distance-0-3-6",
                              "ellipsis": "TypographyComp-ellipsis-0-3-14",
                              "giant": "TypographyComp-giant-0-3-9",
                              "heading": "TypographyComp-heading-0-3-8",
                              "italic": "TypographyComp-italic-0-3-3",
                              "lowercase": "TypographyComp-lowercase-0-3-11",
                              "noWrap": "TypographyComp-noWrap-0-3-13",
                              "semiBold": "TypographyComp-semiBold-0-3-2",
                              "standard": "TypographyComp-standard-0-3-5",
                              "subtext": "TypographyComp-subtext-0-3-4",
                              "uppercase": "TypographyComp-uppercase-0-3-10",
                            }
                          }
                          variant="standard"
                        >
                          <span
                            className="ContentComp-description-0-3-338 TypographyComp-standard-0-3-5"
                          >
                            Misalignment, continues the paper, exists when the centre lines of two neighbouring machines deviate from each other.
                          </span>
                        </TypographyComp>
                      </WithStyles(TypographyComp)>
                    </Typography>
                  </div>
                </div>
              </ContentComp>
            </WithStyles(ContentComp)>
          </Content>
        </div>
      </div>
    </TimelineEventComp>
  </WithStyles(TimelineEventComp)>
</TimelineEvent>
`;

exports[`Storyshots Components/Timeline Part event end 1`] = `
<TimelineEvent
  content={
    Object {
      "dateFormatted": <React.Fragment>
        2/21/2018, 2:33:16 PM
      </React.Fragment>,
      "description": "Misalignment, continues the paper, exists when the centre lines of two neighbouring machines deviate from each other.",
      "title": "Misalignment",
    }
  }
  domId="1"
  status={
    Object {
      "arrangement": "end",
      "color": "#f57c00",
    }
  }
>
  <WithStyles(TimelineEventComp)
    content={
      Object {
        "dateFormatted": <React.Fragment>
          2/21/2018, 2:33:16 PM
        </React.Fragment>,
        "description": "Misalignment, continues the paper, exists when the centre lines of two neighbouring machines deviate from each other.",
        "title": "Misalignment",
      }
    }
    domId="1"
    innerRef={null}
    jssContext={
      Object {
        "classNamePrefix": "",
        "disableStylesGeneration": false,
      }
    }
    status={
      Object {
        "arrangement": "end",
        "color": "#f57c00",
      }
    }
    theme={Object {}}
  >
    <TimelineEventComp
      classes={
        Object {
          "content": "TimelineEventComp-content-0-3-331",
          "root": "TimelineEventComp-root-0-3-329",
          "status": "TimelineEventComp-status-0-3-330",
        }
      }
      content={
        Object {
          "dateFormatted": <React.Fragment>
            2/21/2018, 2:33:16 PM
          </React.Fragment>,
          "description": "Misalignment, continues the paper, exists when the centre lines of two neighbouring machines deviate from each other.",
          "title": "Misalignment",
        }
      }
      domId="1"
      status={
        Object {
          "arrangement": "end",
          "color": "#f57c00",
        }
      }
    >
      <div
        className="TimelineEventComp-root-0-3-329"
        id="1"
      >
        <div
          className="TimelineEventComp-status-0-3-330"
        >
          <Status
            arrangement="end"
            color="#f57c00"
          >
            <WithStyles(StatusComp)
              arrangement="end"
              color="#f57c00"
              innerRef={null}
              jssContext={
                Object {
                  "classNamePrefix": "",
                  "disableStylesGeneration": false,
                }
              }
              theme={Object {}}
            >
              <StatusComp
                arrangement="end"
                classes={
                  Object {
                    "circle": "StatusComp-circle-0-3-336",
                    "circleWrapper": "StatusComp-circleWrapper-0-3-335",
                    "line": "StatusComp-line-0-3-334",
                    "lineWrapper": "StatusComp-lineWrapper-0-3-333",
                    "root": "StatusComp-root-0-3-332",
                  }
                }
                color="#f57c00"
              >
                <div
                  className="StatusComp-root-0-3-332"
                >
                  <div
                    className="StatusComp-lineWrapper-0-3-333"
                    style={
                      Object {
                        "height": 8,
                        "paddingTop": 0,
                      }
                    }
                  >
                    <div
                      className="StatusComp-line-0-3-334"
                      style={
                        Object {
                          "backgroundColor": "#f57c00",
                        }
                      }
                    />
                  </div>
                  <div
                    className="StatusComp-circleWrapper-0-3-335"
                  >
                    <div
                      className="StatusComp-circle-0-3-336"
                      style={
                        Object {
                          "backgroundColor": "#f57c00",
                        }
                      }
                    />
                  </div>
                </div>
              </StatusComp>
            </WithStyles(StatusComp)>
          </Status>
        </div>
        <div
          className="TimelineEventComp-content-0-3-331"
        >
          <Content
            dateFormatted={
              <React.Fragment>
                2/21/2018, 2:33:16 PM
              </React.Fragment>
            }
            description="Misalignment, continues the paper, exists when the centre lines of two neighbouring machines deviate from each other."
            title="Misalignment"
          >
            <WithStyles(ContentComp)
              dateFormatted={
                <React.Fragment>
                  2/21/2018, 2:33:16 PM
                </React.Fragment>
              }
              description="Misalignment, continues the paper, exists when the centre lines of two neighbouring machines deviate from each other."
              innerRef={null}
              jssContext={
                Object {
                  "classNamePrefix": "",
                  "disableStylesGeneration": false,
                }
              }
              theme={Object {}}
              title="Misalignment"
            >
              <ContentComp
                classes={
                  Object {
                    "description": "ContentComp-description-0-3-338",
                    "root": "ContentComp-root-0-3-337",
                  }
                }
                dateFormatted={
                  <React.Fragment>
                    2/21/2018, 2:33:16 PM
                  </React.Fragment>
                }
                description="Misalignment, continues the paper, exists when the centre lines of two neighbouring machines deviate from each other."
                title="Misalignment"
              >
                <div
                  className="ContentComp-root-0-3-337"
                >
                  <div>
                    <Typography
                      bold={true}
                      className="ContentComp-description-0-3-338"
                      variant="distance"
                    >
                      <WithStyles(TypographyComp)
                        bold={true}
                        className="ContentComp-description-0-3-338"
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        theme={Object {}}
                        variant="distance"
                      >
                        <TypographyComp
                          bold={true}
                          className="ContentComp-description-0-3-338"
                          classes={
                            Object {
                              "big": "TypographyComp-big-0-3-7",
                              "bold": "TypographyComp-bold-0-3-1",
                              "capitalize": "TypographyComp-capitalize-0-3-12",
                              "distance": "TypographyComp-distance-0-3-6",
                              "ellipsis": "TypographyComp-ellipsis-0-3-14",
                              "giant": "TypographyComp-giant-0-3-9",
                              "heading": "TypographyComp-heading-0-3-8",
                              "italic": "TypographyComp-italic-0-3-3",
                              "lowercase": "TypographyComp-lowercase-0-3-11",
                              "noWrap": "TypographyComp-noWrap-0-3-13",
                              "semiBold": "TypographyComp-semiBold-0-3-2",
                              "standard": "TypographyComp-standard-0-3-5",
                              "subtext": "TypographyComp-subtext-0-3-4",
                              "uppercase": "TypographyComp-uppercase-0-3-10",
                            }
                          }
                          variant="distance"
                        >
                          <span
                            className="ContentComp-description-0-3-338 TypographyComp-distance-0-3-6 TypographyComp-bold-0-3-1"
                          >
                            Misalignment
                          </span>
                        </TypographyComp>
                      </WithStyles(TypographyComp)>
                    </Typography>
                  </div>
                  <div>
                    <Typography
                      bold={true}
                      className="ContentComp-description-0-3-338"
                      variant="standard"
                    >
                      <WithStyles(TypographyComp)
                        bold={true}
                        className="ContentComp-description-0-3-338"
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        theme={Object {}}
                        variant="standard"
                      >
                        <TypographyComp
                          bold={true}
                          className="ContentComp-description-0-3-338"
                          classes={
                            Object {
                              "big": "TypographyComp-big-0-3-7",
                              "bold": "TypographyComp-bold-0-3-1",
                              "capitalize": "TypographyComp-capitalize-0-3-12",
                              "distance": "TypographyComp-distance-0-3-6",
                              "ellipsis": "TypographyComp-ellipsis-0-3-14",
                              "giant": "TypographyComp-giant-0-3-9",
                              "heading": "TypographyComp-heading-0-3-8",
                              "italic": "TypographyComp-italic-0-3-3",
                              "lowercase": "TypographyComp-lowercase-0-3-11",
                              "noWrap": "TypographyComp-noWrap-0-3-13",
                              "semiBold": "TypographyComp-semiBold-0-3-2",
                              "standard": "TypographyComp-standard-0-3-5",
                              "subtext": "TypographyComp-subtext-0-3-4",
                              "uppercase": "TypographyComp-uppercase-0-3-10",
                            }
                          }
                          variant="standard"
                        >
                          <span
                            className="ContentComp-description-0-3-338 TypographyComp-standard-0-3-5 TypographyComp-bold-0-3-1"
                          >
                            2/21/2018, 2:33:16 PM
                          </span>
                        </TypographyComp>
                      </WithStyles(TypographyComp)>
                    </Typography>
                  </div>
                  <div>
                    <Typography
                      className="ContentComp-description-0-3-338"
                      variant="standard"
                    >
                      <WithStyles(TypographyComp)
                        className="ContentComp-description-0-3-338"
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        theme={Object {}}
                        variant="standard"
                      >
                        <TypographyComp
                          className="ContentComp-description-0-3-338"
                          classes={
                            Object {
                              "big": "TypographyComp-big-0-3-7",
                              "bold": "TypographyComp-bold-0-3-1",
                              "capitalize": "TypographyComp-capitalize-0-3-12",
                              "distance": "TypographyComp-distance-0-3-6",
                              "ellipsis": "TypographyComp-ellipsis-0-3-14",
                              "giant": "TypographyComp-giant-0-3-9",
                              "heading": "TypographyComp-heading-0-3-8",
                              "italic": "TypographyComp-italic-0-3-3",
                              "lowercase": "TypographyComp-lowercase-0-3-11",
                              "noWrap": "TypographyComp-noWrap-0-3-13",
                              "semiBold": "TypographyComp-semiBold-0-3-2",
                              "standard": "TypographyComp-standard-0-3-5",
                              "subtext": "TypographyComp-subtext-0-3-4",
                              "uppercase": "TypographyComp-uppercase-0-3-10",
                            }
                          }
                          variant="standard"
                        >
                          <span
                            className="ContentComp-description-0-3-338 TypographyComp-standard-0-3-5"
                          >
                            Misalignment, continues the paper, exists when the centre lines of two neighbouring machines deviate from each other.
                          </span>
                        </TypographyComp>
                      </WithStyles(TypographyComp)>
                    </Typography>
                  </div>
                </div>
              </ContentComp>
            </WithStyles(ContentComp)>
          </Content>
        </div>
      </div>
    </TimelineEventComp>
  </WithStyles(TimelineEventComp)>
</TimelineEvent>
`;

exports[`Storyshots Components/Timeline Part event single 1`] = `
<TimelineEvent
  content={
    Object {
      "dateFormatted": <React.Fragment>
        2/22/2018, 10:59:57 AM
      </React.Fragment>,
      "title": "Resumed",
    }
  }
  domId="1"
  status={
    Object {
      "arrangement": "single",
      "color": "#4caf50",
    }
  }
>
  <WithStyles(TimelineEventComp)
    content={
      Object {
        "dateFormatted": <React.Fragment>
          2/22/2018, 10:59:57 AM
        </React.Fragment>,
        "title": "Resumed",
      }
    }
    domId="1"
    innerRef={null}
    jssContext={
      Object {
        "classNamePrefix": "",
        "disableStylesGeneration": false,
      }
    }
    status={
      Object {
        "arrangement": "single",
        "color": "#4caf50",
      }
    }
    theme={Object {}}
  >
    <TimelineEventComp
      classes={
        Object {
          "content": "TimelineEventComp-content-0-3-331",
          "root": "TimelineEventComp-root-0-3-329",
          "status": "TimelineEventComp-status-0-3-330",
        }
      }
      content={
        Object {
          "dateFormatted": <React.Fragment>
            2/22/2018, 10:59:57 AM
          </React.Fragment>,
          "title": "Resumed",
        }
      }
      domId="1"
      status={
        Object {
          "arrangement": "single",
          "color": "#4caf50",
        }
      }
    >
      <div
        className="TimelineEventComp-root-0-3-329"
        id="1"
      >
        <div
          className="TimelineEventComp-status-0-3-330"
        >
          <Status
            arrangement="single"
            color="#4caf50"
          >
            <WithStyles(StatusComp)
              arrangement="single"
              color="#4caf50"
              innerRef={null}
              jssContext={
                Object {
                  "classNamePrefix": "",
                  "disableStylesGeneration": false,
                }
              }
              theme={Object {}}
            >
              <StatusComp
                arrangement="single"
                classes={
                  Object {
                    "circle": "StatusComp-circle-0-3-336",
                    "circleWrapper": "StatusComp-circleWrapper-0-3-335",
                    "line": "StatusComp-line-0-3-334",
                    "lineWrapper": "StatusComp-lineWrapper-0-3-333",
                    "root": "StatusComp-root-0-3-332",
                  }
                }
                color="#4caf50"
              >
                <div
                  className="StatusComp-root-0-3-332"
                >
                  <div
                    className="StatusComp-lineWrapper-0-3-333"
                    style={
                      Object {
                        "height": 0,
                      }
                    }
                  >
                    <div
                      className="StatusComp-line-0-3-334"
                      style={
                        Object {
                          "backgroundColor": "#4caf50",
                        }
                      }
                    />
                  </div>
                  <div
                    className="StatusComp-circleWrapper-0-3-335"
                  >
                    <div
                      className="StatusComp-circle-0-3-336"
                      style={
                        Object {
                          "backgroundColor": "#4caf50",
                        }
                      }
                    />
                  </div>
                </div>
              </StatusComp>
            </WithStyles(StatusComp)>
          </Status>
        </div>
        <div
          className="TimelineEventComp-content-0-3-331"
        >
          <Content
            dateFormatted={
              <React.Fragment>
                2/22/2018, 10:59:57 AM
              </React.Fragment>
            }
            title="Resumed"
          >
            <WithStyles(ContentComp)
              dateFormatted={
                <React.Fragment>
                  2/22/2018, 10:59:57 AM
                </React.Fragment>
              }
              innerRef={null}
              jssContext={
                Object {
                  "classNamePrefix": "",
                  "disableStylesGeneration": false,
                }
              }
              theme={Object {}}
              title="Resumed"
            >
              <ContentComp
                classes={
                  Object {
                    "description": "ContentComp-description-0-3-338",
                    "root": "ContentComp-root-0-3-337",
                  }
                }
                dateFormatted={
                  <React.Fragment>
                    2/22/2018, 10:59:57 AM
                  </React.Fragment>
                }
                title="Resumed"
              >
                <div
                  className="ContentComp-root-0-3-337"
                >
                  <div>
                    <Typography
                      bold={true}
                      className="ContentComp-description-0-3-338"
                      variant="distance"
                    >
                      <WithStyles(TypographyComp)
                        bold={true}
                        className="ContentComp-description-0-3-338"
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        theme={Object {}}
                        variant="distance"
                      >
                        <TypographyComp
                          bold={true}
                          className="ContentComp-description-0-3-338"
                          classes={
                            Object {
                              "big": "TypographyComp-big-0-3-7",
                              "bold": "TypographyComp-bold-0-3-1",
                              "capitalize": "TypographyComp-capitalize-0-3-12",
                              "distance": "TypographyComp-distance-0-3-6",
                              "ellipsis": "TypographyComp-ellipsis-0-3-14",
                              "giant": "TypographyComp-giant-0-3-9",
                              "heading": "TypographyComp-heading-0-3-8",
                              "italic": "TypographyComp-italic-0-3-3",
                              "lowercase": "TypographyComp-lowercase-0-3-11",
                              "noWrap": "TypographyComp-noWrap-0-3-13",
                              "semiBold": "TypographyComp-semiBold-0-3-2",
                              "standard": "TypographyComp-standard-0-3-5",
                              "subtext": "TypographyComp-subtext-0-3-4",
                              "uppercase": "TypographyComp-uppercase-0-3-10",
                            }
                          }
                          variant="distance"
                        >
                          <span
                            className="ContentComp-description-0-3-338 TypographyComp-distance-0-3-6 TypographyComp-bold-0-3-1"
                          >
                            Resumed
                          </span>
                        </TypographyComp>
                      </WithStyles(TypographyComp)>
                    </Typography>
                  </div>
                  <div>
                    <Typography
                      bold={true}
                      className="ContentComp-description-0-3-338"
                      variant="standard"
                    >
                      <WithStyles(TypographyComp)
                        bold={true}
                        className="ContentComp-description-0-3-338"
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        theme={Object {}}
                        variant="standard"
                      >
                        <TypographyComp
                          bold={true}
                          className="ContentComp-description-0-3-338"
                          classes={
                            Object {
                              "big": "TypographyComp-big-0-3-7",
                              "bold": "TypographyComp-bold-0-3-1",
                              "capitalize": "TypographyComp-capitalize-0-3-12",
                              "distance": "TypographyComp-distance-0-3-6",
                              "ellipsis": "TypographyComp-ellipsis-0-3-14",
                              "giant": "TypographyComp-giant-0-3-9",
                              "heading": "TypographyComp-heading-0-3-8",
                              "italic": "TypographyComp-italic-0-3-3",
                              "lowercase": "TypographyComp-lowercase-0-3-11",
                              "noWrap": "TypographyComp-noWrap-0-3-13",
                              "semiBold": "TypographyComp-semiBold-0-3-2",
                              "standard": "TypographyComp-standard-0-3-5",
                              "subtext": "TypographyComp-subtext-0-3-4",
                              "uppercase": "TypographyComp-uppercase-0-3-10",
                            }
                          }
                          variant="standard"
                        >
                          <span
                            className="ContentComp-description-0-3-338 TypographyComp-standard-0-3-5 TypographyComp-bold-0-3-1"
                          >
                            2/22/2018, 10:59:57 AM
                          </span>
                        </TypographyComp>
                      </WithStyles(TypographyComp)>
                    </Typography>
                  </div>
                  <div />
                </div>
              </ContentComp>
            </WithStyles(ContentComp)>
          </Content>
        </div>
      </div>
    </TimelineEventComp>
  </WithStyles(TimelineEventComp)>
</TimelineEvent>
`;

exports[`Storyshots Components/Timeline Part event start 1`] = `
<TimelineEvent
  content={
    Object {
      "dateFormatted": <React.Fragment>
        2/21/2018, 2:33:16 PM
      </React.Fragment>,
      "description": "Misalignment, continues the paper, exists when the centre lines of two neighbouring machines deviate from each other.",
      "title": "Misalignment",
    }
  }
  domId="1"
  status={
    Object {
      "arrangement": "start",
      "color": "#f57c00",
    }
  }
>
  <WithStyles(TimelineEventComp)
    content={
      Object {
        "dateFormatted": <React.Fragment>
          2/21/2018, 2:33:16 PM
        </React.Fragment>,
        "description": "Misalignment, continues the paper, exists when the centre lines of two neighbouring machines deviate from each other.",
        "title": "Misalignment",
      }
    }
    domId="1"
    innerRef={null}
    jssContext={
      Object {
        "classNamePrefix": "",
        "disableStylesGeneration": false,
      }
    }
    status={
      Object {
        "arrangement": "start",
        "color": "#f57c00",
      }
    }
    theme={Object {}}
  >
    <TimelineEventComp
      classes={
        Object {
          "content": "TimelineEventComp-content-0-3-331",
          "root": "TimelineEventComp-root-0-3-329",
          "status": "TimelineEventComp-status-0-3-330",
        }
      }
      content={
        Object {
          "dateFormatted": <React.Fragment>
            2/21/2018, 2:33:16 PM
          </React.Fragment>,
          "description": "Misalignment, continues the paper, exists when the centre lines of two neighbouring machines deviate from each other.",
          "title": "Misalignment",
        }
      }
      domId="1"
      status={
        Object {
          "arrangement": "start",
          "color": "#f57c00",
        }
      }
    >
      <div
        className="TimelineEventComp-root-0-3-329"
        id="1"
      >
        <div
          className="TimelineEventComp-status-0-3-330"
        >
          <Status
            arrangement="start"
            color="#f57c00"
          >
            <WithStyles(StatusComp)
              arrangement="start"
              color="#f57c00"
              innerRef={null}
              jssContext={
                Object {
                  "classNamePrefix": "",
                  "disableStylesGeneration": false,
                }
              }
              theme={Object {}}
            >
              <StatusComp
                arrangement="start"
                classes={
                  Object {
                    "circle": "StatusComp-circle-0-3-336",
                    "circleWrapper": "StatusComp-circleWrapper-0-3-335",
                    "line": "StatusComp-line-0-3-334",
                    "lineWrapper": "StatusComp-lineWrapper-0-3-333",
                    "root": "StatusComp-root-0-3-332",
                  }
                }
                color="#f57c00"
              >
                <div
                  className="StatusComp-root-0-3-332"
                >
                  <div
                    className="StatusComp-lineWrapper-0-3-333"
                    style={
                      Object {
                        "paddingTop": 8,
                      }
                    }
                  >
                    <div
                      className="StatusComp-line-0-3-334"
                      style={
                        Object {
                          "backgroundColor": "#f57c00",
                        }
                      }
                    />
                  </div>
                  <div
                    className="StatusComp-circleWrapper-0-3-335"
                  >
                    <div
                      className="StatusComp-circle-0-3-336"
                      style={
                        Object {
                          "backgroundColor": "#f57c00",
                        }
                      }
                    />
                  </div>
                </div>
              </StatusComp>
            </WithStyles(StatusComp)>
          </Status>
        </div>
        <div
          className="TimelineEventComp-content-0-3-331"
        >
          <Content
            dateFormatted={
              <React.Fragment>
                2/21/2018, 2:33:16 PM
              </React.Fragment>
            }
            description="Misalignment, continues the paper, exists when the centre lines of two neighbouring machines deviate from each other."
            title="Misalignment"
          >
            <WithStyles(ContentComp)
              dateFormatted={
                <React.Fragment>
                  2/21/2018, 2:33:16 PM
                </React.Fragment>
              }
              description="Misalignment, continues the paper, exists when the centre lines of two neighbouring machines deviate from each other."
              innerRef={null}
              jssContext={
                Object {
                  "classNamePrefix": "",
                  "disableStylesGeneration": false,
                }
              }
              theme={Object {}}
              title="Misalignment"
            >
              <ContentComp
                classes={
                  Object {
                    "description": "ContentComp-description-0-3-338",
                    "root": "ContentComp-root-0-3-337",
                  }
                }
                dateFormatted={
                  <React.Fragment>
                    2/21/2018, 2:33:16 PM
                  </React.Fragment>
                }
                description="Misalignment, continues the paper, exists when the centre lines of two neighbouring machines deviate from each other."
                title="Misalignment"
              >
                <div
                  className="ContentComp-root-0-3-337"
                >
                  <div>
                    <Typography
                      bold={true}
                      className="ContentComp-description-0-3-338"
                      variant="distance"
                    >
                      <WithStyles(TypographyComp)
                        bold={true}
                        className="ContentComp-description-0-3-338"
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        theme={Object {}}
                        variant="distance"
                      >
                        <TypographyComp
                          bold={true}
                          className="ContentComp-description-0-3-338"
                          classes={
                            Object {
                              "big": "TypographyComp-big-0-3-7",
                              "bold": "TypographyComp-bold-0-3-1",
                              "capitalize": "TypographyComp-capitalize-0-3-12",
                              "distance": "TypographyComp-distance-0-3-6",
                              "ellipsis": "TypographyComp-ellipsis-0-3-14",
                              "giant": "TypographyComp-giant-0-3-9",
                              "heading": "TypographyComp-heading-0-3-8",
                              "italic": "TypographyComp-italic-0-3-3",
                              "lowercase": "TypographyComp-lowercase-0-3-11",
                              "noWrap": "TypographyComp-noWrap-0-3-13",
                              "semiBold": "TypographyComp-semiBold-0-3-2",
                              "standard": "TypographyComp-standard-0-3-5",
                              "subtext": "TypographyComp-subtext-0-3-4",
                              "uppercase": "TypographyComp-uppercase-0-3-10",
                            }
                          }
                          variant="distance"
                        >
                          <span
                            className="ContentComp-description-0-3-338 TypographyComp-distance-0-3-6 TypographyComp-bold-0-3-1"
                          >
                            Misalignment
                          </span>
                        </TypographyComp>
                      </WithStyles(TypographyComp)>
                    </Typography>
                  </div>
                  <div>
                    <Typography
                      bold={true}
                      className="ContentComp-description-0-3-338"
                      variant="standard"
                    >
                      <WithStyles(TypographyComp)
                        bold={true}
                        className="ContentComp-description-0-3-338"
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        theme={Object {}}
                        variant="standard"
                      >
                        <TypographyComp
                          bold={true}
                          className="ContentComp-description-0-3-338"
                          classes={
                            Object {
                              "big": "TypographyComp-big-0-3-7",
                              "bold": "TypographyComp-bold-0-3-1",
                              "capitalize": "TypographyComp-capitalize-0-3-12",
                              "distance": "TypographyComp-distance-0-3-6",
                              "ellipsis": "TypographyComp-ellipsis-0-3-14",
                              "giant": "TypographyComp-giant-0-3-9",
                              "heading": "TypographyComp-heading-0-3-8",
                              "italic": "TypographyComp-italic-0-3-3",
                              "lowercase": "TypographyComp-lowercase-0-3-11",
                              "noWrap": "TypographyComp-noWrap-0-3-13",
                              "semiBold": "TypographyComp-semiBold-0-3-2",
                              "standard": "TypographyComp-standard-0-3-5",
                              "subtext": "TypographyComp-subtext-0-3-4",
                              "uppercase": "TypographyComp-uppercase-0-3-10",
                            }
                          }
                          variant="standard"
                        >
                          <span
                            className="ContentComp-description-0-3-338 TypographyComp-standard-0-3-5 TypographyComp-bold-0-3-1"
                          >
                            2/21/2018, 2:33:16 PM
                          </span>
                        </TypographyComp>
                      </WithStyles(TypographyComp)>
                    </Typography>
                  </div>
                  <div>
                    <Typography
                      className="ContentComp-description-0-3-338"
                      variant="standard"
                    >
                      <WithStyles(TypographyComp)
                        className="ContentComp-description-0-3-338"
                        innerRef={null}
                        jssContext={
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          }
                        }
                        theme={Object {}}
                        variant="standard"
                      >
                        <TypographyComp
                          className="ContentComp-description-0-3-338"
                          classes={
                            Object {
                              "big": "TypographyComp-big-0-3-7",
                              "bold": "TypographyComp-bold-0-3-1",
                              "capitalize": "TypographyComp-capitalize-0-3-12",
                              "distance": "TypographyComp-distance-0-3-6",
                              "ellipsis": "TypographyComp-ellipsis-0-3-14",
                              "giant": "TypographyComp-giant-0-3-9",
                              "heading": "TypographyComp-heading-0-3-8",
                              "italic": "TypographyComp-italic-0-3-3",
                              "lowercase": "TypographyComp-lowercase-0-3-11",
                              "noWrap": "TypographyComp-noWrap-0-3-13",
                              "semiBold": "TypographyComp-semiBold-0-3-2",
                              "standard": "TypographyComp-standard-0-3-5",
                              "subtext": "TypographyComp-subtext-0-3-4",
                              "uppercase": "TypographyComp-uppercase-0-3-10",
                            }
                          }
                          variant="standard"
                        >
                          <span
                            className="ContentComp-description-0-3-338 TypographyComp-standard-0-3-5"
                          >
                            Misalignment, continues the paper, exists when the centre lines of two neighbouring machines deviate from each other.
                          </span>
                        </TypographyComp>
                      </WithStyles(TypographyComp)>
                    </Typography>
                  </div>
                </div>
              </ContentComp>
            </WithStyles(ContentComp)>
          </Content>
        </div>
      </div>
    </TimelineEventComp>
  </WithStyles(TimelineEventComp)>
</TimelineEvent>
`;

exports[`Storyshots Components/Timeline Part status end 1`] = `
<Status
  arrangement="end"
  color="#ff9800"
>
  <WithStyles(StatusComp)
    arrangement="end"
    color="#ff9800"
    innerRef={null}
    jssContext={
      Object {
        "classNamePrefix": "",
        "disableStylesGeneration": false,
      }
    }
    theme={Object {}}
  >
    <StatusComp
      arrangement="end"
      classes={
        Object {
          "circle": "StatusComp-circle-0-3-336",
          "circleWrapper": "StatusComp-circleWrapper-0-3-335",
          "line": "StatusComp-line-0-3-334",
          "lineWrapper": "StatusComp-lineWrapper-0-3-333",
          "root": "StatusComp-root-0-3-332",
        }
      }
      color="#ff9800"
    >
      <div
        className="StatusComp-root-0-3-332"
      >
        <div
          className="StatusComp-lineWrapper-0-3-333"
          style={
            Object {
              "height": 8,
              "paddingTop": 0,
            }
          }
        >
          <div
            className="StatusComp-line-0-3-334"
            style={
              Object {
                "backgroundColor": "#ff9800",
              }
            }
          />
        </div>
        <div
          className="StatusComp-circleWrapper-0-3-335"
        >
          <div
            className="StatusComp-circle-0-3-336"
            style={
              Object {
                "backgroundColor": "#ff9800",
              }
            }
          />
        </div>
      </div>
    </StatusComp>
  </WithStyles(StatusComp)>
</Status>
`;

exports[`Storyshots Components/Timeline Part status middle 1`] = `
<Status
  arrangement="continue"
  color="#ff9800"
>
  <WithStyles(StatusComp)
    arrangement="continue"
    color="#ff9800"
    innerRef={null}
    jssContext={
      Object {
        "classNamePrefix": "",
        "disableStylesGeneration": false,
      }
    }
    theme={Object {}}
  >
    <StatusComp
      arrangement="continue"
      classes={
        Object {
          "circle": "StatusComp-circle-0-3-336",
          "circleWrapper": "StatusComp-circleWrapper-0-3-335",
          "line": "StatusComp-line-0-3-334",
          "lineWrapper": "StatusComp-lineWrapper-0-3-333",
          "root": "StatusComp-root-0-3-332",
        }
      }
      color="#ff9800"
    >
      <div
        className="StatusComp-root-0-3-332"
      >
        <div
          className="StatusComp-lineWrapper-0-3-333"
          style={
            Object {
              "paddingTop": 0,
            }
          }
        >
          <div
            className="StatusComp-line-0-3-334"
            style={
              Object {
                "backgroundColor": "#ff9800",
              }
            }
          />
        </div>
        <div
          className="StatusComp-circleWrapper-0-3-335"
        >
          <div
            className="StatusComp-circle-0-3-336"
            style={
              Object {
                "backgroundColor": "#ff9800",
              }
            }
          />
        </div>
      </div>
    </StatusComp>
  </WithStyles(StatusComp)>
</Status>
`;

exports[`Storyshots Components/Timeline Part status single 1`] = `
<Status
  arrangement="single"
  color="#64dd17"
>
  <WithStyles(StatusComp)
    arrangement="single"
    color="#64dd17"
    innerRef={null}
    jssContext={
      Object {
        "classNamePrefix": "",
        "disableStylesGeneration": false,
      }
    }
    theme={Object {}}
  >
    <StatusComp
      arrangement="single"
      classes={
        Object {
          "circle": "StatusComp-circle-0-3-336",
          "circleWrapper": "StatusComp-circleWrapper-0-3-335",
          "line": "StatusComp-line-0-3-334",
          "lineWrapper": "StatusComp-lineWrapper-0-3-333",
          "root": "StatusComp-root-0-3-332",
        }
      }
      color="#64dd17"
    >
      <div
        className="StatusComp-root-0-3-332"
      >
        <div
          className="StatusComp-lineWrapper-0-3-333"
          style={
            Object {
              "height": 0,
            }
          }
        >
          <div
            className="StatusComp-line-0-3-334"
            style={
              Object {
                "backgroundColor": "#64dd17",
              }
            }
          />
        </div>
        <div
          className="StatusComp-circleWrapper-0-3-335"
        >
          <div
            className="StatusComp-circle-0-3-336"
            style={
              Object {
                "backgroundColor": "#64dd17",
              }
            }
          />
        </div>
      </div>
    </StatusComp>
  </WithStyles(StatusComp)>
</Status>
`;

exports[`Storyshots Components/Timeline Part status start 1`] = `
<Status
  arrangement="start"
  color="#ff9800"
>
  <WithStyles(StatusComp)
    arrangement="start"
    color="#ff9800"
    innerRef={null}
    jssContext={
      Object {
        "classNamePrefix": "",
        "disableStylesGeneration": false,
      }
    }
    theme={Object {}}
  >
    <StatusComp
      arrangement="start"
      classes={
        Object {
          "circle": "StatusComp-circle-0-3-336",
          "circleWrapper": "StatusComp-circleWrapper-0-3-335",
          "line": "StatusComp-line-0-3-334",
          "lineWrapper": "StatusComp-lineWrapper-0-3-333",
          "root": "StatusComp-root-0-3-332",
        }
      }
      color="#ff9800"
    >
      <div
        className="StatusComp-root-0-3-332"
      >
        <div
          className="StatusComp-lineWrapper-0-3-333"
          style={
            Object {
              "paddingTop": 8,
            }
          }
        >
          <div
            className="StatusComp-line-0-3-334"
            style={
              Object {
                "backgroundColor": "#ff9800",
              }
            }
          />
        </div>
        <div
          className="StatusComp-circleWrapper-0-3-335"
        >
          <div
            className="StatusComp-circle-0-3-336"
            style={
              Object {
                "backgroundColor": "#ff9800",
              }
            }
          />
        </div>
      </div>
    </StatusComp>
  </WithStyles(StatusComp)>
</Status>
`;
