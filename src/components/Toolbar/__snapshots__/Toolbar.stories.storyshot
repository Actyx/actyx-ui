// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Components/Toolbar Variant dark content 1`] = `
<Toolbar
  variant="dark"
>
  <WithStyles(ToolbarComp)
    innerRef={null}
    jssContext={
      Object {
        "classNamePrefix": "",
        "disableStylesGeneration": false,
      }
    }
    theme={Object {}}
    variant="dark"
  >
    <ToolbarComp
      classes={
        Object {
          "dark": "ToolbarComp-dark-0-3-285",
          "light": "ToolbarComp-light-0-3-286",
          "root": "ToolbarComp-root-0-3-284",
        }
      }
      variant="dark"
    >
      <div
        className="ToolbarComp-root-0-3-284 ToolbarComp-dark-0-3-285"
      >
        <Typography
          color="#ffffff"
          variant="distance"
        >
          <WithStyles(TypographyComp)
            color="#ffffff"
            innerRef={null}
            jssContext={
              Object {
                "classNamePrefix": "",
                "disableStylesGeneration": false,
              }
            }
            theme={Object {}}
            variant="distance"
          >
            <TypographyComp
              classes={
                Object {
                  "big": "TypographyComp-big-0-3-7",
                  "bold": "TypographyComp-bold-0-3-1",
                  "capitalize": "TypographyComp-capitalize-0-3-12",
                  "distance": "TypographyComp-distance-0-3-6",
                  "ellipsis": "TypographyComp-ellipsis-0-3-14",
                  "giant": "TypographyComp-giant-0-3-9",
                  "heading": "TypographyComp-heading-0-3-8",
                  "italic": "TypographyComp-italic-0-3-3",
                  "lowercase": "TypographyComp-lowercase-0-3-11",
                  "noWrap": "TypographyComp-noWrap-0-3-13",
                  "semiBold": "TypographyComp-semiBold-0-3-2",
                  "standard": "TypographyComp-standard-0-3-5",
                  "subtext": "TypographyComp-subtext-0-3-4",
                  "uppercase": "TypographyComp-uppercase-0-3-10",
                }
              }
              color="#ffffff"
              variant="distance"
            >
              <span
                className="TypographyComp-distance-0-3-6"
                style={
                  Object {
                    "color": "rgba(255, 255, 255, 1)",
                  }
                }
              >
                Title
              </span>
            </TypographyComp>
          </WithStyles(TypographyComp)>
        </Typography>
      </div>
    </ToolbarComp>
  </WithStyles(ToolbarComp)>
</Toolbar>
`;

exports[`Storyshots Components/Toolbar Variant light content 1`] = `
<Toolbar
  variant="light"
>
  <WithStyles(ToolbarComp)
    innerRef={null}
    jssContext={
      Object {
        "classNamePrefix": "",
        "disableStylesGeneration": false,
      }
    }
    theme={Object {}}
    variant="light"
  >
    <ToolbarComp
      classes={
        Object {
          "dark": "ToolbarComp-dark-0-3-285",
          "light": "ToolbarComp-light-0-3-286",
          "root": "ToolbarComp-root-0-3-284",
        }
      }
      variant="light"
    >
      <div
        className="ToolbarComp-root-0-3-284 ToolbarComp-light-0-3-286"
      >
        <Typography
          variant="distance"
        >
          <WithStyles(TypographyComp)
            innerRef={null}
            jssContext={
              Object {
                "classNamePrefix": "",
                "disableStylesGeneration": false,
              }
            }
            theme={Object {}}
            variant="distance"
          >
            <TypographyComp
              classes={
                Object {
                  "big": "TypographyComp-big-0-3-7",
                  "bold": "TypographyComp-bold-0-3-1",
                  "capitalize": "TypographyComp-capitalize-0-3-12",
                  "distance": "TypographyComp-distance-0-3-6",
                  "ellipsis": "TypographyComp-ellipsis-0-3-14",
                  "giant": "TypographyComp-giant-0-3-9",
                  "heading": "TypographyComp-heading-0-3-8",
                  "italic": "TypographyComp-italic-0-3-3",
                  "lowercase": "TypographyComp-lowercase-0-3-11",
                  "noWrap": "TypographyComp-noWrap-0-3-13",
                  "semiBold": "TypographyComp-semiBold-0-3-2",
                  "standard": "TypographyComp-standard-0-3-5",
                  "subtext": "TypographyComp-subtext-0-3-4",
                  "uppercase": "TypographyComp-uppercase-0-3-10",
                }
              }
              variant="distance"
            >
              <span
                className="TypographyComp-distance-0-3-6"
              >
                Title
              </span>
            </TypographyComp>
          </WithStyles(TypographyComp)>
        </Typography>
      </div>
    </ToolbarComp>
  </WithStyles(ToolbarComp)>
</Toolbar>
`;

exports[`Storyshots Components/Toolbar Variant light content/icons 1`] = `
<Toolbar
  variant="light"
>
  <WithStyles(ToolbarComp)
    innerRef={null}
    jssContext={
      Object {
        "classNamePrefix": "",
        "disableStylesGeneration": false,
      }
    }
    theme={Object {}}
    variant="light"
  >
    <ToolbarComp
      classes={
        Object {
          "dark": "ToolbarComp-dark-0-3-285",
          "light": "ToolbarComp-light-0-3-286",
          "root": "ToolbarComp-root-0-3-284",
        }
      }
      variant="light"
    >
      <div
        className="ToolbarComp-root-0-3-284 ToolbarComp-light-0-3-286"
      >
        <Button
          color="transparent"
          icon="rotate_left"
          onClick={[Function]}
          variant="flat"
        >
          <WithStyles(ButtonComp)
            color="transparent"
            icon="rotate_left"
            innerRef={null}
            jssContext={
              Object {
                "classNamePrefix": "",
                "disableStylesGeneration": false,
              }
            }
            onClick={[Function]}
            theme={Object {}}
            variant="flat"
          >
            <ButtonComp
              classes={
                Object {
                  "centered": "ButtonComp-centered-0-3-19",
                  "disabled": "ButtonComp-disabled-0-3-32",
                  "flat": "ButtonComp-flat-0-3-17",
                  "fullWidth": "ButtonComp-fullWidth-0-3-31",
                  "green": "ButtonComp-green-0-3-23",
                  "grey": "ButtonComp-grey-0-3-21",
                  "icon": "ButtonComp-icon-0-3-16",
                  "neutral": "ButtonComp-neutral-0-3-22",
                  "orange": "ButtonComp-orange-0-3-24",
                  "primary": "ButtonComp-primary-0-3-20",
                  "raised": "ButtonComp-raised-0-3-18",
                  "red": "ButtonComp-red-0-3-26",
                  "root": "ButtonComp-root-0-3-15",
                  "shadow": "ButtonComp-shadow-0-3-28",
                  "text": "ButtonComp-text-0-3-29",
                  "textIcon": "ButtonComp-textIcon-0-3-30",
                  "transparent": "ButtonComp-transparent-0-3-27",
                  "yellow": "ButtonComp-yellow-0-3-25",
                }
              }
              color="transparent"
              icon="rotate_left"
              onClick={[Function]}
              variant="flat"
            >
              <TouchRipple
                className="ButtonComp-root-0-3-15"
                disabled={false}
                onClick={[Function]}
              >
                <WithStyles(TouchRippleComp)
                  className="ButtonComp-root-0-3-15"
                  disabled={false}
                  innerRef={null}
                  jssContext={
                    Object {
                      "classNamePrefix": "",
                      "disableStylesGeneration": false,
                    }
                  }
                  onClick={[Function]}
                  theme={Object {}}
                >
                  <TouchRippleComp
                    className="ButtonComp-root-0-3-15"
                    classes={
                      Object {
                        "disabled": "TouchRippleComp-disabled-0-3-34",
                        "root": "TouchRippleComp-root-0-3-33",
                      }
                    }
                    disabled={false}
                    onClick={[Function]}
                  >
                    <div
                      className="ButtonComp-root-0-3-15 TouchRippleComp-root-0-3-33"
                      onClick={[Function]}
                    >
                      <div
                        className="ButtonComp-flat-0-3-17 ButtonComp-transparent-0-3-27"
                      >
                        <div
                          className="ButtonComp-icon-0-3-16"
                        >
                          <MUIcon
                            fontSize={40}
                            type="rotate_left"
                          >
                            <WithStyles(MUIconComp)
                              fontSize={40}
                              innerRef={null}
                              jssContext={
                                Object {
                                  "classNamePrefix": "",
                                  "disableStylesGeneration": false,
                                }
                              }
                              theme={Object {}}
                              type="rotate_left"
                            >
                              <MUIconComp
                                classes={
                                  Object {
                                    "root": "MUIconComp-root-0-3-35 MUIconComp-root-d113-0-3-346",
                                  }
                                }
                                fontSize={40}
                                type="rotate_left"
                              >
                                <i
                                  className="MUIconComp-root-0-3-35 MUIconComp-root-d113-0-3-346"
                                >
                                  rotate_left
                                </i>
                              </MUIconComp>
                            </WithStyles(MUIconComp)>
                          </MUIcon>
                        </div>
                      </div>
                    </div>
                  </TouchRippleComp>
                </WithStyles(TouchRippleComp)>
              </TouchRipple>
            </ButtonComp>
          </WithStyles(ButtonComp)>
        </Button>
        <Button
          color="transparent"
          icon="rotate_right"
          onClick={[Function]}
          variant="flat"
        >
          <WithStyles(ButtonComp)
            color="transparent"
            icon="rotate_right"
            innerRef={null}
            jssContext={
              Object {
                "classNamePrefix": "",
                "disableStylesGeneration": false,
              }
            }
            onClick={[Function]}
            theme={Object {}}
            variant="flat"
          >
            <ButtonComp
              classes={
                Object {
                  "centered": "ButtonComp-centered-0-3-19",
                  "disabled": "ButtonComp-disabled-0-3-32",
                  "flat": "ButtonComp-flat-0-3-17",
                  "fullWidth": "ButtonComp-fullWidth-0-3-31",
                  "green": "ButtonComp-green-0-3-23",
                  "grey": "ButtonComp-grey-0-3-21",
                  "icon": "ButtonComp-icon-0-3-16",
                  "neutral": "ButtonComp-neutral-0-3-22",
                  "orange": "ButtonComp-orange-0-3-24",
                  "primary": "ButtonComp-primary-0-3-20",
                  "raised": "ButtonComp-raised-0-3-18",
                  "red": "ButtonComp-red-0-3-26",
                  "root": "ButtonComp-root-0-3-15",
                  "shadow": "ButtonComp-shadow-0-3-28",
                  "text": "ButtonComp-text-0-3-29",
                  "textIcon": "ButtonComp-textIcon-0-3-30",
                  "transparent": "ButtonComp-transparent-0-3-27",
                  "yellow": "ButtonComp-yellow-0-3-25",
                }
              }
              color="transparent"
              icon="rotate_right"
              onClick={[Function]}
              variant="flat"
            >
              <TouchRipple
                className="ButtonComp-root-0-3-15"
                disabled={false}
                onClick={[Function]}
              >
                <WithStyles(TouchRippleComp)
                  className="ButtonComp-root-0-3-15"
                  disabled={false}
                  innerRef={null}
                  jssContext={
                    Object {
                      "classNamePrefix": "",
                      "disableStylesGeneration": false,
                    }
                  }
                  onClick={[Function]}
                  theme={Object {}}
                >
                  <TouchRippleComp
                    className="ButtonComp-root-0-3-15"
                    classes={
                      Object {
                        "disabled": "TouchRippleComp-disabled-0-3-34",
                        "root": "TouchRippleComp-root-0-3-33",
                      }
                    }
                    disabled={false}
                    onClick={[Function]}
                  >
                    <div
                      className="ButtonComp-root-0-3-15 TouchRippleComp-root-0-3-33"
                      onClick={[Function]}
                    >
                      <div
                        className="ButtonComp-flat-0-3-17 ButtonComp-transparent-0-3-27"
                      >
                        <div
                          className="ButtonComp-icon-0-3-16"
                        >
                          <MUIcon
                            fontSize={40}
                            type="rotate_right"
                          >
                            <WithStyles(MUIconComp)
                              fontSize={40}
                              innerRef={null}
                              jssContext={
                                Object {
                                  "classNamePrefix": "",
                                  "disableStylesGeneration": false,
                                }
                              }
                              theme={Object {}}
                              type="rotate_right"
                            >
                              <MUIconComp
                                classes={
                                  Object {
                                    "root": "MUIconComp-root-0-3-35 MUIconComp-root-d114-0-3-347",
                                  }
                                }
                                fontSize={40}
                                type="rotate_right"
                              >
                                <i
                                  className="MUIconComp-root-0-3-35 MUIconComp-root-d114-0-3-347"
                                >
                                  rotate_right
                                </i>
                              </MUIconComp>
                            </WithStyles(MUIconComp)>
                          </MUIcon>
                        </div>
                      </div>
                    </div>
                  </TouchRippleComp>
                </WithStyles(TouchRippleComp)>
              </TouchRipple>
            </ButtonComp>
          </WithStyles(ButtonComp)>
        </Button>
        <Button
          color="transparent"
          icon="refresh"
          onClick={[Function]}
          variant="flat"
        >
          <WithStyles(ButtonComp)
            color="transparent"
            icon="refresh"
            innerRef={null}
            jssContext={
              Object {
                "classNamePrefix": "",
                "disableStylesGeneration": false,
              }
            }
            onClick={[Function]}
            theme={Object {}}
            variant="flat"
          >
            <ButtonComp
              classes={
                Object {
                  "centered": "ButtonComp-centered-0-3-19",
                  "disabled": "ButtonComp-disabled-0-3-32",
                  "flat": "ButtonComp-flat-0-3-17",
                  "fullWidth": "ButtonComp-fullWidth-0-3-31",
                  "green": "ButtonComp-green-0-3-23",
                  "grey": "ButtonComp-grey-0-3-21",
                  "icon": "ButtonComp-icon-0-3-16",
                  "neutral": "ButtonComp-neutral-0-3-22",
                  "orange": "ButtonComp-orange-0-3-24",
                  "primary": "ButtonComp-primary-0-3-20",
                  "raised": "ButtonComp-raised-0-3-18",
                  "red": "ButtonComp-red-0-3-26",
                  "root": "ButtonComp-root-0-3-15",
                  "shadow": "ButtonComp-shadow-0-3-28",
                  "text": "ButtonComp-text-0-3-29",
                  "textIcon": "ButtonComp-textIcon-0-3-30",
                  "transparent": "ButtonComp-transparent-0-3-27",
                  "yellow": "ButtonComp-yellow-0-3-25",
                }
              }
              color="transparent"
              icon="refresh"
              onClick={[Function]}
              variant="flat"
            >
              <TouchRipple
                className="ButtonComp-root-0-3-15"
                disabled={false}
                onClick={[Function]}
              >
                <WithStyles(TouchRippleComp)
                  className="ButtonComp-root-0-3-15"
                  disabled={false}
                  innerRef={null}
                  jssContext={
                    Object {
                      "classNamePrefix": "",
                      "disableStylesGeneration": false,
                    }
                  }
                  onClick={[Function]}
                  theme={Object {}}
                >
                  <TouchRippleComp
                    className="ButtonComp-root-0-3-15"
                    classes={
                      Object {
                        "disabled": "TouchRippleComp-disabled-0-3-34",
                        "root": "TouchRippleComp-root-0-3-33",
                      }
                    }
                    disabled={false}
                    onClick={[Function]}
                  >
                    <div
                      className="ButtonComp-root-0-3-15 TouchRippleComp-root-0-3-33"
                      onClick={[Function]}
                    >
                      <div
                        className="ButtonComp-flat-0-3-17 ButtonComp-transparent-0-3-27"
                      >
                        <div
                          className="ButtonComp-icon-0-3-16"
                        >
                          <MUIcon
                            fontSize={40}
                            type="refresh"
                          >
                            <WithStyles(MUIconComp)
                              fontSize={40}
                              innerRef={null}
                              jssContext={
                                Object {
                                  "classNamePrefix": "",
                                  "disableStylesGeneration": false,
                                }
                              }
                              theme={Object {}}
                              type="refresh"
                            >
                              <MUIconComp
                                classes={
                                  Object {
                                    "root": "MUIconComp-root-0-3-35 MUIconComp-root-d115-0-3-348",
                                  }
                                }
                                fontSize={40}
                                type="refresh"
                              >
                                <i
                                  className="MUIconComp-root-0-3-35 MUIconComp-root-d115-0-3-348"
                                >
                                  refresh
                                </i>
                              </MUIconComp>
                            </WithStyles(MUIconComp)>
                          </MUIcon>
                        </div>
                      </div>
                    </div>
                  </TouchRippleComp>
                </WithStyles(TouchRippleComp)>
              </TouchRipple>
            </ButtonComp>
          </WithStyles(ButtonComp)>
        </Button>
      </div>
    </ToolbarComp>
  </WithStyles(ToolbarComp)>
</Toolbar>
`;
